
#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, INFFL_LOADIDC|GetCharPrm(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, ~INFFL_LOADIDC&GetCharPrm(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("ARM");
	SetCharPrm(INF_COMPILER, 6);
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
	LoadTil("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0);
	SetSelector(0X2,0);
	;
	SegCreate(0XB0200000,0XB02089B3,0X1,1,1,2);
	SegRename(0XB0200000,"LOAD");
	SegClass (0XB0200000,"CODE");
	SegDefReg(0xB0200000,"T",0x0);
	SegDefReg(0xB0200000,"DS",0x2);
	SetSegmentType(0XB0200000,2);
	SegCreate(0XB0240000,0XB024028C,0X2,1,1,2);
	SegRename(0XB0240000,"LOAD");
	SegClass (0XB0240000,"DATA");
	SegDefReg(0xB0240000,"T",0x0);
	SegDefReg(0xB0240000,"DS",0x2);
	SetSegmentType(0XB0240000,3);
	LowVoids(0xB0200000);
	HighVoids(0xB024028C);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        BeginTypeUpdating(UTP_ENUM);
        EndTypeUpdating(UTP_ENUM);
}

static Structures_0(id) {
        auto mid;

	id = AddStrucEx(-1,"struc_1",0);
	id = AddStrucEx(-1,"idl4_server_environment",0);
	id = AddStrucEx(-1,"srvclient",0);
	id = AddStrucEx(-1,"server",0);
	id = AddStrucEx(-1,"shmem",0);
	id = AddStrucEx(-1,"tabEnt",0);
	
	id = GetStrucIdByName("struc_1");
	mid = AddStrucMember(id,"_action",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"_data",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("idl4_server_environment");
	mid = AddStrucMember(id,"_action",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"_data",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("srvclient");
	mid = AddStrucMember(id,"partner",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"memsection",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_C",	0XC,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("server");
	mid = AddStrucMember(id,"partner",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"session",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"cmdServer",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"cmdServerSession",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"sectionRef",	0X10,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"sectionBase",	0X14,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("shmem");
	mid = AddStrucMember(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"upstream_shared_queue",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"upstream_queue_sz",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"sz",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"iguana_server_queue",	0X10,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"iguana_queue_sz",	0X14,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("tabEnt");
	mid = AddStrucMember(id,"key",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"memsection",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"memsectionBase",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"session",	0XC,	0x20000400,	-1,	4);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        BeginTypeUpdating(UTP_STRUCT);	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0XB0200000,	0,	"; File Name   : C:\\Documents and Settings\\Administrator\\Desktop\\qdms\\qdms");
	ExtLinA		(0XB0200000,	1,	"; Format      : ELF for ARM (Executable)");
	ExtLinA		(0XB0200000,	2,	"; Imagebase   : B0200000");
	ExtLinA		(0XB0200000,	3,	"; ");
	ExtLinA		(0XB0200000,	4,	"; Options     : EF_ARM_SOFT_FLOAT");
	ExtLinA		(0XB0200000,	5,	"; ");
	MakeCode	(0XB0200000);
	MakeName	(0XB0200000,	"start");
	MakeCode	(x=0XB0200008);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020000C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0200010);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0200014,	"bss_start");
	MakeCode	(x=0XB0200014);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0200018,	"bss_end");
	MakeCode	(x=0XB0200038);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020003C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB020004C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB0200050);
	MakeDword	(x=0XB0200054);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200058);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020005C);
	MakeCode	(0XB0200060);
	MakeName	(0XB0200060,	"share_queue");
	MakeCode	(x=0XB0200074);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0200088);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020008C);
	MakeName	(0XB020008C,	"_sess_revoke_access");
	MakeCode	(0XB0200094);
	MakeName	(0XB0200094,	"server_init");
	MakeCode	(x=0XB02000A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02000B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02000BC,	"int");
	MakeCode	(x=0XB02000C4);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB02000C8);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB02000CC);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeComm	(0XB02000D0,	"size_t");
	MakeComm	(0XB02000D4,	"void *");
	MakeCode	(x=0XB02000D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02000D8);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB02000E0);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB02000E4);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB02000E8);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB02000EC);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB02000F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0200100);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0200104);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0200108);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB020014C,	"char *");
	MakeCode	(0XB0200160);
	MakeCode	(x=0XB020016C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0200170);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0200174);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02001C4);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB02001CC);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB02001FC);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeComm	(0XB0200224,	"char *");
	MakeCode	(0XB0200224);
	MakeCode	(x=0XB020022C);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB0200234);
	OpOff		(x,	1,	0XB0240110);
	OpOff		(x,	129,	0XB0240110);
	MakeCode	(x=0XB0200238);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB0200240);
	OpOff		(x,	1,	0XB0240110);
	OpOff		(x,	129,	0XB0240110);
	MakeComm	(0XB0200248,	"char *");
	MakeCode	(0XB0200248);
	MakeCode	(x=0XB0200250);
	OpOff		(x,	1,	0XB0240110);
	OpOff		(x,	129,	0XB0240110);
	MakeCode	(x=0XB0200254);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB020025C);
	OpOff		(x,	1,	0XB0240110);
	OpOff		(x,	129,	0XB0240110);
	MakeDword	(x=0XB0200264);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200268);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020026C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200270);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200274);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200278);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020027C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200280);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200284);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200288);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020028C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200290);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200294);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200298);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB020029C);
	OpStkvar	(x,	1);
	MakeName	(0XB020029C,	"main");
	MakeCode	(0XB02002A8);
	MakeCode	(x=0XB02002AC);
	OpStkvar	(x,	1);
	MakeCode	(0XB02002B0);
	MakeName	(0XB02002B0,	"register_server");
	MakeCode	(x=0XB02002B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02002D4,	"char *");
	MakeCode	(0XB02002E8);
	MakeCode	(x=0XB02002EC);
	OpStroffEx	(x,	1,	GetStrucIdByName("server"),	0);
	MakeRptCmt	(0XB02002F0,	"registeredServer = partner");
	MakeCode	(x=0XB02002F8);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200300);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB020030C,	"zero a struct in the memsection");
	MakeCode	(x=0XB0200330);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB0200340,	"char *");
	MakeComm	(0XB0200348,	"zero struct on failure");
	MakeCode	(x=0XB0200348);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200354);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB020035C);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200360);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200364);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200368);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(0XB0200370);
	MakeRptCmt	(0XB0200378,	"session_create(obj, &srvtid)");
	MakeCode	(x=0XB0200384);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200390);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeRptCmt	(0XB0200394,	"session_provide_access(srv.session, srv.sectionRef, 0)");
	MakeCode	(x=0XB02003A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02003A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02003AC,	"session");
	MakeCode	(x=0XB02003AC);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02003B0,	"objref");
	MakeComm	(0XB02003B4,	"unused");
	MakeCode	(x=0XB02003BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02003C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02003CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02003D0,	"session");
	MakeCode	(x=0XB02003D0);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02003D4,	"objref");
	MakeComm	(0XB02003D8,	"unused");
	MakeCode	(x=0XB02003E0);
	OpHex		(x,	1);
	MakeComm	(0XB02003E8,	"success!");
	MakeRptCmt	(0XB02003FC,	"iguana_server_queue");
	MakeCode	(x=0XB02003FC);
	OpStroffEx	(x,	1,	GetStrucIdByName("shmem"),	0);
	MakeRptCmt	(0XB0200404,	"upstream_shared_queue");
	MakeCode	(x=0XB0200404);
	OpStroffEx	(x,	1,	GetStrucIdByName("shmem"),	0);
	MakeRptCmt	(0XB0200408,	"related to upstream_shared queue (size?)");
	MakeCode	(x=0XB0200408);
	OpStroffEx	(x,	1,	GetStrucIdByName("shmem"),	0);
	MakeRptCmt	(0XB020040C,	"page size");
	MakeCode	(x=0XB020040C);
	OpStroffEx	(x,	1,	GetStrucIdByName("shmem"),	0);
	MakeRptCmt	(0XB0200410,	"related to iguaua_server_queue (size?)");
	MakeCode	(x=0XB0200410);
	OpStroffEx	(x,	1,	GetStrucIdByName("shmem"),	0);
	MakeRptCmt	(0XB0200414,	"page size");
	MakeCode	(x=0XB0200414);
	OpStroffEx	(x,	1,	GetStrucIdByName("shmem"),	0);
	MakeComm	(0XB020041C,	"char *");
	MakeCode	(0XB020041C);
	MakeComm	(0XB0200424,	"zero struct on failure");
	MakeCode	(x=0XB0200428);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200430);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200434);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200438);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB020043C);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB0200444,	"char *");
	MakeCode	(0XB0200444);
	MakeComm	(0XB020044C,	"zero struct on failure");
	MakeCode	(x=0XB0200450);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200458);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB020045C);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200460);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200464);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB020046C,	"char *");
	MakeCode	(0XB020046C);
	MakeDword	(x=0XB0200480);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200484);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200488);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020048C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200490);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200494);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200498);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020049C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02004A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02004A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02004A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02004AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02004B0);
	MakeName	(0XB02004B0,	"register_cmd_server");
	MakeCode	(x=0XB02004B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02004B8);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02004D4,	"char *");
	MakeCode	(0XB02004E8);
	MakeCode	(x=0XB02004EC);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02004F4,	"session_create(obj, &srvtid);");
	MakeCode	(x=0XB02004FC);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB0200504,	"char *");
	MakeCode	(x=0XB0200510);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200518);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200530);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB020053C);
	MakeComm	(0XB020058C,	"session");
	MakeCode	(x=0XB0200594);
	OpHex		(x,	1);
	MakeComm	(0XB020059C,	"char *");
	MakeCode	(0XB02005BC);
	MakeComm	(0XB02005C4,	"char *");
	MakeCode	(0XB02005C4);
	MakeDword	(x=0XB02005E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02005E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02005EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02005F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02005F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02005F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02005FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0200600);
	OpStkvar	(x,	1);
	MakeName	(0XB0200600,	"findInTable");
	MakeCode	(x=0XB0200608);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB020060C,	"look for partner if key is zero");
	MakeCode	(x=0XB0200628);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0200638);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB020063C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0200640);
	MakeName	(0XB0200640,	"register_client");
	MakeCode	(x=0XB020065C);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(0XB020066C);
	MakeCode	(x=0XB0200670);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0200678,	"pick arg0 or partner");
	MakeComm	(0XB020067C,	"find empty entry after the starting index");
	MakeCode	(x=0XB02006AC);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(x=0XB02006B4);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(x=0XB02006BC);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeRptCmt	(0XB02006C8,	"zero memsection");
	MakeCode	(x=0XB0200718);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeComm	(0XB0200738,	"char *");
	MakeComm	(0XB020074C,	"char *");
	MakeCode	(0XB020074C);
	MakeCode	(0XB020077C);
	MakeRptCmt	(0XB0200780,	"store new key in empty slot");
	MakeComm	(0XB0200788,	"char *");
	MakeCode	(0XB0200788);
	MakeComm	(0XB0200798,	"char *");
	MakeCode	(0XB0200798);
	MakeDword	(x=0XB02007C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02007C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02007C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02007CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02007D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02007D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02007D8);
	MakeName	(0XB02007D8,	"deregister_client");
	MakeComm	(0XB02007EC,	"char *");
	MakeCode	(0XB0200828);
	MakeDword	(x=0XB0200834);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0200838);
	MakeName	(0XB0200838,	"open_client");
	MakeCode	(x=0XB0200850);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200854);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(x=0XB020085C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200864);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(0XB0200870);
	MakeCode	(x=0XB020087C);
	OpStkvar	(x,	1);
	MakeComm	(0XB02008B4,	"session");
	MakeComm	(0XB02008B8,	"objref");
	MakeComm	(0XB02008BC,	"unused");
	MakeCode	(x=0XB02008C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02008D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02008D4,	"objref");
	MakeComm	(0XB02008D8,	"session");
	MakeCode	(x=0XB02008D8);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02008DC,	"unused");
	MakeCode	(x=0XB02008E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02008F0);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeCode	(x=0XB0200910);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0200914);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0200918,	"session");
	MakeCode	(x=0XB0200918);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeComm	(0XB020091C,	"objref");
	MakeComm	(0XB0200920,	"unused");
	MakeCode	(x=0XB0200928);
	OpHex		(x,	1);
	MakeComm	(0XB0200948,	"char *");
	MakeCode	(0XB0200948);
	MakeComm	(0XB020097C,	"char *");
	MakeCode	(0XB020097C);
	MakeCode	(0XB020098C);
	MakeCode	(x=0XB0200990);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02009A8,	"session");
	MakeCode	(x=0XB02009A8);
	OpOff		(x,	1,	0XB02400E8);
	OpOff		(x,	129,	0XB02400E8);
	MakeComm	(0XB02009AC,	"objref");
	MakeComm	(0XB02009B0,	"unused");
	MakeCode	(x=0XB02009B8);
	OpHex		(x,	1);
	MakeComm	(0XB02009C0,	"char *");
	MakeComm	(0XB02009F0,	"char *");
	MakeCode	(0XB02009F0);
	MakeComm	(0XB0200A00,	"char *");
	MakeCode	(0XB0200A00);
	MakeDword	(x=0XB0200A28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200A50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0200A54);
	MakeName	(0XB0200A54,	"close_client");
	MakeComm	(0XB0200A60,	"char *");
	MakeCode	(x=0XB0200A68);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(x=0XB0200A74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0200AAC);
	OpStroffEx	(x,	1,	GetStrucIdByName("tabEnt"),	0);
	MakeCode	(0XB0200AB4);
	MakeCode	(0XB0200B08);
	MakeCode	(0XB0200B18);
	MakeDword	(x=0XB0200B24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200B28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0200B2C);
	OpStkvar	(x,	1);
	MakeName	(0XB0200B2C,	"open_iguana_server_client");
	MakeCode	(x=0XB0200B30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0200B40,	"srvClient.partner = partner");
	MakeCode	(x=0XB0200B40);
	OpStroffEx	(x,	1,	GetStrucIdByName("srvclient"),	0);
	MakeRptCmt	(0XB0200B48,	"wont this always be zero?");
	MakeCode	(x=0XB0200B48);
	OpOff		(x,	1,	0XB0240100);
	OpOff		(x,	129,	0XB0240100);
	MakeCode	(x=0XB0200B4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0200B58);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0200B5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0200B60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0200B64);
	MakeCode	(0XB0200BB4);
	MakeCode	(x=0XB0200BCC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200C18);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200C1C);
	OpHex		(x,	1);
	MakeCode	(0XB0200C40);
	MakeCode	(0XB0200C90);
	MakeCode	(x=0XB0200CA8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200CF4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200CF8);
	OpHex		(x,	1);
	MakeCode	(0XB0200D1C);
	MakeCode	(0XB0200D70);
	MakeCode	(x=0XB0200D88);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200DD4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200DD8);
	OpHex		(x,	1);
	MakeCode	(0XB0200DFC);
	MakeCode	(0XB0200E4C);
	MakeCode	(x=0XB0200E64);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200EB0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200EB4);
	OpHex		(x,	1);
	MakeCode	(0XB0200ED8);
	MakeCode	(0XB0200F2C);
	MakeCode	(x=0XB0200F44);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200F90);
	OpHex		(x,	1);
	MakeCode	(x=0XB0200F94);
	OpHex		(x,	1);
	MakeCode	(0XB0200FB8);
	MakeCode	(0XB0201008);
	MakeCode	(x=0XB0201020);
	OpHex		(x,	1);
	MakeCode	(x=0XB020106C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201070);
	OpHex		(x,	1);
	MakeCode	(0XB0201094);
	MakeCode	(0XB02010E0);
	MakeCode	(x=0XB02010F8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201144);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201148);
	OpHex		(x,	1);
	MakeCode	(0XB020116C);
	MakeName	(0XB020116C,	"msg_is_error");
	MakeCode	(x=0XB0201170);
	OpHex		(x,	1);
	MakeCode	(0XB0201178);
	MakeCode	(x=0XB020117C);
	OpHex		(x,	1);
	MakeCode	(0XB0201184);
	MakeName	(0XB0201184,	"dispatch46");
	MakeCode	(x=0XB020118C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201190);
	OpDecimal	(x,	1);
	MakeComm	(0XB020119C,	"switch 7 cases ");
	MakeComm	(0XB02011A0,	"switch jump");
	MakeComm	(0XB02011A8,	"jump table for switch statement");
	MakeDword	(x=0XB02011A8);
	MakeArray	(x,	0X7);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB02011C4,	"jumptable B02011A0 case 6");
	MakeCode	(0XB02011C4);
	MakeComm	(0XB02011C8,	"partner");
	MakeComm	(0XB02011CC,	"env");
	MakeCode	(x=0XB02011D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02011D8);
	OpHex		(x,	1);
	MakeRptCmt	(0XB02011F4,	"jumptable B02011A0 default case");
	MakeRptCmt	(0XB0201200,	"jumptable B02011A0 case 0");
	MakeCode	(0XB0201200);
	MakeComm	(0XB0201204,	"partner");
	MakeComm	(0XB0201208,	"obj");
	MakeComm	(0XB020120C,	"env");
	MakeCode	(x=0XB020120C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201210);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201218);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0201220,	"jumptable B02011A0 case 1");
	MakeCode	(0XB0201220);
	MakeComm	(0XB0201224,	"partner");
	MakeComm	(0XB0201228,	"obj");
	MakeComm	(0XB020122C,	"env");
	MakeCode	(x=0XB020122C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201230);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201238);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0201240,	"jumptable B02011A0 case 2");
	MakeCode	(x=0XB0201240);
	OpHex		(x,	1);
	MakeComm	(0XB0201248,	"partner");
	MakeComm	(0XB020124C,	"cl");
	MakeComm	(0XB0201250,	"srv");
	MakeCode	(x=0XB0201254);
	OpHex		(x,	1);
	MakeCode	(x=0XB020125C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0201264,	"jumptable B02011A0 case 3");
	MakeCode	(0XB0201264);
	MakeComm	(0XB0201268,	"partner");
	MakeComm	(0XB020126C,	"arg");
	MakeComm	(0XB0201270,	"env");
	MakeCode	(x=0XB0201270);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201274);
	OpHex		(x,	1);
	MakeCode	(x=0XB020127C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0201284,	"jumptable B02011A0 case 4");
	MakeCode	(x=0XB0201284);
	OpHex		(x,	1);
	MakeComm	(0XB020128C,	"partner");
	MakeComm	(0XB0201290,	"arg0");
	MakeComm	(0XB0201294,	"arg1");
	MakeCode	(x=0XB0201298);
	OpHex		(x,	1);
	MakeCode	(x=0XB02012A0);
	OpHex		(x,	1);
	MakeRptCmt	(0XB02012A8,	"jumptable B02011A0 case 5");
	MakeCode	(0XB02012A8);
	MakeComm	(0XB02012AC,	"partner");
	MakeComm	(0XB02012B0,	"arg");
	MakeComm	(0XB02012B4,	"env");
	MakeCode	(x=0XB02012B4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02012B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02012C0);
	OpHex		(x,	1);
	MakeCode	(0XB02012C8);
	MakeName	(0XB02012C8,	"server_loop");
	MakeCode	(x=0XB02012DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02012F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201304);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201308);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201310);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020131C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201320);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201334);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201348,	"char *");
	MakeRptCmt	(0XB0201354,	"uuid = 46");
	MakeCode	(x=0XB0201354);
	OpDecimal	(x,	1);
	MakeComm	(0XB020135C,	"mr");
	MakeComm	(0XB0201360,	"partner");
	MakeCode	(x=0XB0201360);
	OpHex		(x,	1);
	MakeCode	(x=0XB020136C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0201374);
	MakeCode	(x=0XB020137C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0201384);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0201388);
	OpHex		(x,	1);
	MakeName	(0XB0201388,	"memset");
	MakeCode	(x=0XB020138C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201390);
	OpHex		(x,	1);
	MakeCode	(x=0XB02013DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201400);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201408);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020141C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0201420);
	MakeName	(0XB0201420,	"printf");
	MakeCode	(x=0XB0201424);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201428);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB020142C,	"char *");
	MakeCode	(x=0XB020142C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201430,	"FILE *");
	MakeComm	(0XB0201434,	"int **");
	MakeCode	(x=0XB0201434);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020143C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0201448);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020144C);
	MakeName	(0XB020144C,	"puts");
	MakeComm	(0XB0201454,	"int");
	MakeCode	(x=0XB020145C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201464);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0201468,	"FILE *");
	MakeComm	(0XB020147C,	"FILE *");
	MakeComm	(0XB0201480,	"int");
	MakeDword	(x=0XB0201490);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0201494);
	OpStkvar	(x,	1);
	MakeName	(0XB0201494,	"_vfprintf");
	MakeCode	(x=0XB02014BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02014D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02014D8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02014DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02014E0);
	MakeName	(0XB02014E0,	"___lib_init");
	MakeCode	(0XB0201548);
	MakeName	(0XB0201548,	"___sys_entry");
	MakeCode	(0XB0201564);
	MakeCode	(0XB0201568);
	MakeName	(0XB0201568,	"___malloc_init");
	MakeComm	(0XB0201578,	"void *");
	MakeCode	(0XB0201580);
	MakeName	(0XB0201580,	"___morecore_init");
	MakeCode	(x=0XB020158C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02015B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB02015C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02015CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02015D0);
	MakeName	(0XB02015D0,	"_morecore");
	MakeCode	(x=0XB02015E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020160C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201640);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201678);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201680,	"void *");
	MakeCode	(x=0XB0201688);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0201698);
	MakeDword	(x=0XB02016A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02016A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02016A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02016AC);
	MakeName	(0XB02016AC,	"null_write");
	MakeCode	(0XB02016B4);
	MakeName	(0XB02016B4,	"null_read");
	MakeCode	(0XB02016BC);
	MakeName	(0XB02016BC,	"_l4kdb_write");
	MakeCode	(x=0XB02016D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02016DC);
	OpStkvar	(x,	1);
	MakeCode	(0XB02016E8);
	MakeCode	(x=0XB0201714);
	OpHex		(x,	1);
	MakeCode	(0XB0201728);
	MakeCode	(0XB020173C);
	MakeName	(0XB020173C,	"l4kdb_read");
	MakeCode	(x=0XB0201754);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201758);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201784);
	OpHex		(x,	1);
	MakeCode	(0XB02017B8);
	MakeCode	(0XB02017BC);
	MakeCode	(0XB02017C0);
	MakeName	(0XB02017C0,	"init_write");
	MakeCode	(x=0XB02017D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02017DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02017EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02017F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02017F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02017F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02017FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201800);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201804);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201808);
	OpOff		(x,	1,	0XB0240050);
	OpOff		(x,	129,	0XB0240050);
	MakeCode	(x=0XB020180C);
	OpOff		(x,	1,	0XB0240050);
	OpOff		(x,	129,	0XB0240050);
	MakeCode	(x=0XB0201810);
	OpOff		(x,	1,	0XB024000C);
	OpOff		(x,	129,	0XB024000C);
	MakeCode	(x=0XB0201814);
	OpOff		(x,	1,	0XB024000C);
	OpOff		(x,	129,	0XB024000C);
	MakeDword	(x=0XB0201838);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020183C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0201840);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0201844);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0201848);
	MakeName	(0XB0201848,	"init_read");
	MakeCode	(x=0XB020185C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201864);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201874);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201878);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020187C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201880);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0201884);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020188C);
	OpOff		(x,	1,	0XB0240094);
	OpOff		(x,	129,	0XB0240094);
	MakeDword	(x=0XB02018AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02018B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02018B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB02018B8);
	OpStkvar	(x,	1);
	MakeName	(0XB02018B8,	"exit");
	MakeCode	(0XB02018C0);
	MakeName	(0XB02018C0,	"format_string");
	MakeCode	(x=0XB02018CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02018D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02018D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02018E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02018E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02018F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02018F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02018FC);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201900,	"mutex_t");
	MakeCode	(x=0XB0201908);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201920,	"jumptable B0201A10 case 5");
	MakeCode	(x=0XB0201920);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201940);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020194C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201954);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201958);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201964);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201970);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201978);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020197C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201984);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201994);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019B0);
	OpStkvar	(x,	1);
	MakeComm	(0XB02019B8,	"mutex_t");
	MakeCode	(x=0XB02019C0);
	OpStkvar	(x,	1);
	MakeCode	(0XB02019CC);
	MakeCode	(x=0XB02019D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02019F4);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201A0C,	"switch 91 cases ");
	MakeComm	(0XB0201A10,	"switch jump");
	MakeComm	(0XB0201A18,	"jump table for switch statement");
	MakeDword	(x=0XB0201A18);
	MakeArray	(x,	0X5B);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeComm	(0XB0201B84,	"int");
	MakeCode	(0XB0201B84);
	MakeComm	(0XB0201B88,	"FILE *");
	MakeCode	(x=0XB0201B88);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201B94,	"jumptable B0201A10 cases 33,37,39,65,69-71");
	MakeCode	(0XB0201B94);
	MakeCode	(x=0XB0201B98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BB4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201BBC,	"jumptable B0201A10 default case");
	MakeCode	(x=0XB0201BD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201BF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C08);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201C24,	"FILE *");
	MakeCode	(x=0XB0201C24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C44);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201C50,	"int");
	MakeRptCmt	(0XB0201C5C,	"jumptable B0201A10 case 56");
	MakeCode	(0XB0201C5C);
	MakeRptCmt	(0XB0201C60,	"jumptable B0201A10 case 88");
	MakeCode	(x=0XB0201C60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C70);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201C80);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201C88,	"switch 5 cases ");
	MakeComm	(0XB0201C8C,	"switch jump");
	MakeComm	(0XB0201C94,	"jump table for switch statement");
	MakeDword	(x=0XB0201C94);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0201CA8,	"jumptable B0201A10 case 85");
	MakeCode	(0XB0201CA8);
	MakeCode	(x=0XB0201CAC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201CB4,	"jumptable B0201A10 case 83");
	MakeCode	(x=0XB0201CB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201CC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201CCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201CD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201CE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201CF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201CFC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201D04,	"jumptable B0201A10 case 80");
	MakeCode	(0XB0201D04);
	MakeCode	(x=0XB0201D18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D58);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201D6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201DC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201DD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201DE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201DEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201DFC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201E08,	"jumptable B0201A10 case 79");
	MakeCode	(0XB0201E08);
	MakeCode	(x=0XB0201E0C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0201E14,	"jumptable B0201A10 case 78");
	MakeCode	(0XB0201E14);
	MakeComm	(0XB0201E18,	"switch 5 cases ");
	MakeComm	(0XB0201E1C,	"switch jump");
	MakeComm	(0XB0201E24,	"jump table for switch statement");
	MakeDword	(x=0XB0201E24);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0201E38,	"jumptable B0201A10 cases 44,76");
	MakeCode	(0XB0201E38);
	MakeRptCmt	(0XB0201E44,	"jumptable B0201A10 case 74");
	MakeCode	(0XB0201E44);
	MakeRptCmt	(0XB0201E50,	"jumptable B0201A10 cases 68,73");
	MakeCode	(0XB0201E50);
	MakeComm	(0XB0201E54,	"switch 5 cases ");
	MakeComm	(0XB0201E58,	"switch jump");
	MakeComm	(0XB0201E60,	"jump table for switch statement");
	MakeDword	(x=0XB0201E60);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0201E74,	"jumptable B0201A10 case 72");
	MakeCode	(0XB0201E74);
	MakeRptCmt	(0XB0201E80,	"jumptable B0201A10 case 67");
	MakeCode	(0XB0201E80);
	MakeCode	(x=0XB0201E84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201E88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201E9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201ECC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201ED0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201EF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0201F08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F2C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201F30,	"mutex_t");
	MakeCode	(x=0XB0201F38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F50);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201F7C,	"FILE *");
	MakeCode	(x=0XB0201F7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201F84);
	OpStkvar	(x,	1);
	MakeComm	(0XB0201F90,	"int");
	MakeCode	(x=0XB0201FA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201FA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0201FC0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0201FD0);
	MakeComm	(0XB0202000,	"FILE *");
	MakeCode	(x=0XB0202000);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202008);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202014);
	OpHex		(x,	1);
	MakeCode	(x=0XB020202C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202030);
	OpStkvar	(x,	1);
	MakeCode	(0XB0202048);
	MakeComm	(0XB020207C,	"FILE *");
	MakeCode	(x=0XB020207C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202084);
	OpStkvar	(x,	1);
	MakeComm	(0XB0202090,	"int");
	MakeCode	(x=0XB02020A8);
	OpStkvar	(x,	1);
	MakeComm	(0XB02020D4,	"FILE *");
	MakeCode	(x=0XB02020D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02020DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02020F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020210C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202118);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202120);
	OpStkvar	(x,	1);
	MakeComm	(0XB0202124,	"mutex_t");
	MakeCode	(x=0XB020212C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202130);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202140);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202144);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202150,	"jumptable B0201A10 cases 17-25");
	MakeCode	(0XB0202150);
	MakeCode	(x=0XB0202154);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020215C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202170);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202180);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202190);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020219C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02021A4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB02021AC,	"jumptable B0201A10 case 16");
	MakeCode	(0XB02021AC);
	MakeCode	(x=0XB02021B0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB02021BC,	"jumptable B0201A10 case 14");
	MakeCode	(0XB02021BC);
	MakeCode	(x=0XB02021C0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02021D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02021E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02021E4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB02021F0,	"jumptable B0201A10 case 13");
	MakeCode	(0XB02021F0);
	MakeRptCmt	(0XB02021FC,	"jumptable B0201A10 cases 0,11");
	MakeCode	(x=0XB02021FC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202204);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202208);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202214,	"jumptable B0201A10 case 10");
	MakeCode	(0XB0202214);
	MakeCode	(x=0XB020221C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202224);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202230);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202234);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202240,	"jumptable B0201A10 case 3");
	MakeCode	(0XB0202240);
	MakeCode	(x=0XB0202244);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202250,	"jumptable B0201A10 cases 84,90");
	MakeCode	(0XB0202250);
	MakeCode	(0XB020225C);
	MakeComm	(0XB0202264,	"int");
	MakeCode	(0XB0202264);
	MakeCode	(x=0XB0202270);
	OpStkvar	(x,	1);
	MakeComm	(0XB020229C,	"FILE *");
	MakeCode	(x=0XB020229C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02022A4);
	OpStkvar	(x,	1);
	MakeComm	(0XB02022B0,	"int");
	MakeCode	(0XB02022CC);
	MakeComm	(0XB02022D8,	"char *");
	MakeCode	(0XB02022D8);
	MakeCode	(x=0XB02022E0);
	OpStkvar	(x,	1);
	MakeCode	(0XB02022E8);
	MakeCode	(x=0XB02022F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02022FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202318);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202320,	"jumptable B0201C8C cases 2,3");
	MakeCode	(x=0XB0202320);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020232C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202340,	"jumptable B0201C8C cases 0,1");
	MakeCode	(x=0XB0202340);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020234C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB020235C,	"jumptable B0201C8C case 4");
	MakeCode	(0XB020235C);
	MakeCode	(x=0XB0202368);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202370);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202378,	"jumptable B0201E1C case 2");
	MakeCode	(x=0XB0202378);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202380);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202388);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202398,	"jumptable B0201E1C case 1");
	MakeCode	(x=0XB0202398);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02023A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02023A8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB02023B8,	"jumptable B0201E1C case 0");
	MakeCode	(x=0XB02023B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02023C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02023C8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB02023D8,	"jumptable B0201E58 case 4");
	MakeCode	(x=0XB02023D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02023E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02023FC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202404,	"jumptable B0201E58 case 3");
	MakeCode	(x=0XB0202404);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202410);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB020241C,	"jumptable B0201E58 case 2");
	MakeCode	(x=0XB020241C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202428);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202430,	"jumptable B0201E58 case 1");
	MakeCode	(x=0XB0202430);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020243C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202444,	"jumptable B0201E58 case 0");
	MakeCode	(x=0XB0202444);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202450);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202458,	"jumptable B0201E1C case 4");
	MakeCode	(x=0XB0202458);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020245C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202474);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0202480,	"jumptable B0201E1C case 3");
	MakeCode	(x=0XB0202480);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202488);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202490);
	OpStkvar	(x,	1);
	MakeCode	(0XB02024A0);
	MakeCode	(x=0XB02024B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02024B8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02024C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02024C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02024C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02024CC);
	MakeName	(0XB02024CC,	"_fputc");
	MakeCode	(x=0XB02024D4);
	OpStkvar	(x,	1);
	MakeComm	(0XB02024E8,	"mutex_t");
	MakeComm	(0XB020250C,	"mutex_t");
	MakeComm	(0XB0202530,	"mutex_t");
	MakeCode	(0XB0202530);
	MakeCode	(0XB0202540);
	MakeName	(0XB0202540,	"_malloc");
	MakeComm	(0XB020254C,	"mutex_t");
	MakeCode	(x=0XB020254C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202558);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202568);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202578);
	OpOff		(x,	1,	0XB024023C);
	OpOff		(x,	129,	0XB024023C);
	MakeCode	(0XB0202580);
	MakeComm	(0XB02025B0,	"mutex_t");
	MakeCode	(x=0XB02025B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB02025C0);
	MakeComm	(0XB02025D8,	"mutex_t");
	MakeCode	(x=0XB02025D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB02025EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02025F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02025F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02025F8);
	MakeName	(0XB02025F8,	"_free");
	MakeCode	(x=0XB0202604);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0202608,	"mutex_t");
	MakeCode	(x=0XB0202608);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020261C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202624);
	OpOff		(x,	1,	0XB024023C);
	OpOff		(x,	129,	0XB024023C);
	MakeComm	(0XB02026C4,	"mutex_t");
	MakeCode	(x=0XB02026C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB02026E0);
	MakeCode	(0XB02026F0);
	MakeDword	(x=0XB02026F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02026FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0202700);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202704);
	MakeName	(0XB0202704,	"_strlen");
	MakeCode	(x=0XB0202728);
	OpStkvar	(x,	1);
	MakeName	(0XB0202728,	"__Exit");
	MakeCode	(0XB0202748);
	MakeDword	(x=0XB020274C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0202750);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0202754);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202758);
	MakeName	(0XB0202758,	"__umodsi3");
	MakeCode	(0XB0202768);
	MakeCode	(0XB0202778);
	MakeCode	(0XB0202780);
	MakeName	(0XB0202780,	"___udivmodsi4");
	MakeCode	(x=0XB02027A4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02027AC);
	OpHex		(x,	1);
	MakeCode	(0XB02027B4);
	MakeCode	(0XB02027C0);
	MakeCode	(x=0XB02027D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02027E0);
	OpHex		(x,	1);
	MakeCode	(0XB02028FC);
	MakeCode	(x=0XB0202B74);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202B8C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202B98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202BA0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202BBC);
	OpStkvar	(x,	1);
	MakeName	(0XB0202BBC,	"__assert");
	MakeCode	(x=0XB0202BC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202BD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202BD8);
	OpStkvar	(x,	1);
	MakeComm	(0XB0202BDC,	"FILE *");
	MakeDword	(x=0XB0202BF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0202BF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202BF8);
	MakeName	(0XB0202BF8,	"_fprintf");
	MakeCode	(x=0XB0202BFC);
	OpStkvar	(x,	1);
	MakeComm	(0XB0202C00,	"char *");
	MakeCode	(x=0XB0202C00);
	OpStkvar	(x,	1);
	MakeComm	(0XB0202C04,	"int **");
	MakeCode	(x=0XB0202C04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202C0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202C18);
	OpStkvar	(x,	1);
	MakeName	(0XB0202C18,	"abort");
	MakeCode	(0XB0202C24);
	MakeDword	(x=0XB0202C28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202C2C);
	MakeName	(0XB0202C2C,	"strlen_weird");
	MakeCode	(0XB0202C54);
	MakeName	(0XB0202C54,	"strcpy_weird");
	ExtLinA		(0XB0202C68,	0,	"");
	ExtLinA		(0XB0202C68,	1,	"");
	ExtLinA		(0XB0202C68,	2,	"It looks like a section of QDMS client routines starts here.");
	ExtLinA		(0XB0202C68,	3,	"most of them arent used by this program but they might be used");
	ExtLinA		(0XB0202C68,	4,	"elsewhere and might provide some insight...");
	ExtLinA		(0XB0202C68,	5,	"");
	ExtLinA		(0XB0202C68,	6,	"");
	MakeCode	(0XB0202C68);
	MakeName	(0XB0202C68,	"lookupQdms");
	MakeRptCmt	(0XB0202C6C,	"try 100 times");
	MakeCode	(x=0XB0202C6C);
	OpDecimal	(x,	1);
	MakeCode	(0XB0202C74);
	MakeCode	(x=0XB0202C90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0202CA0);
	MakeDword	(x=0XB0202CA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0202CA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202CAC);
	MakeCode	(x=0XB0202CC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202CC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202CF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202D1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202D20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202D2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202D34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202D38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202D40);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202D44);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202D58);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202D74);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0202DA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202DAC);
	MakeCode	(x=0XB0202DD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202DE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202E00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202E04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202E10);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202E14);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202E18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202E1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202E24);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202E28);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202E38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202E50);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0202E64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202E68);
	MakeName	(0XB0202E68,	"retZero");
	MakeCode	(0XB0202E70);
	MakeCode	(x=0XB0202E74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202EC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202EC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202ED0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202ED4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202ED8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202EDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202EE4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202EE8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202EF4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0202F24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0202F28);
	MakeCode	(x=0XB0202F4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0202F58);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202F84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202F88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202F94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202F98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202F9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202FA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0202FA8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202FAC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0202FBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203008);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020300C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203018);
	OpHex		(x,	1);
	MakeCode	(x=0XB020301C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203020);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203024);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020302C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203030);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203040);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB020306C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0203070);
	MakeCode	(x=0XB0203084);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB02030C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02030C8);
	MakeName	(0XB02030C8,	"retZero2");
	MakeCode	(0XB02030D0);
	MakeCode	(x=0XB02030DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0203114);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203118);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203124);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203128);
	OpHex		(x,	1);
	MakeCode	(x=0XB020312C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203130);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203138);
	OpHex		(x,	1);
	MakeCode	(x=0XB020313C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203148);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020314C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020315C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020317C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02031B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02031B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02031C0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02031C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02031C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02031CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02031D4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02031D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02031E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203214);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB020322C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0203230);
	MakeCode	(x=0XB020323C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0203270);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203274);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203280);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203284);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203288);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020328C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203294);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203298);
	OpHex		(x,	1);
	MakeCode	(x=0XB02032A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02032AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02032F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02032F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203300);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203304);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203308);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020330C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203314);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203318);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203328);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0203350);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0203354);
	MakeComm	(0XB0203374,	"zero buf[0..sz]");
	MakeCode	(0XB02033B0);
	MakeCode	(0XB02033C4);
	MakeCode	(0XB02033D8);
	MakeCode	(x=0XB02033F4);
	OpHex		(x,	1);
	MakeCode	(0XB0203458);
	MakeCode	(0XB02034A0);
	MakeCode	(0XB02034B8);
	MakeCode	(0XB02034C0);
	MakeCode	(0XB0203518);
	MakeCode	(0XB0203520);
	MakeCode	(0XB0203530);
	MakeCode	(x=0XB0203584);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203588);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203590);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203598);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020359C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02035A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02035A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02035AC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02035B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02035B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02035C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02035C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02035D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203608);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020360C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203614);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203618);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203630);
	OpStkvar	(x,	1);
	MakeCode	(0XB0203644);
	MakeCode	(0XB0203664);
	MakeCode	(0XB020366C);
	MakeCode	(0XB0203698);
	MakeCode	(x=0XB0203740);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203750);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203758);
	OpHex		(x,	1);
	MakeCode	(x=0XB020375C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0203780);
	OpHex		(x,	1);
	MakeCode	(x=0XB02037C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02037C8);
	OpHex		(x,	1);
	MakeCode	(0XB02037F4);
	MakeCode	(0XB02037FC);
	MakeCode	(0XB0203808);
	MakeCode	(0XB020382C);
	MakeCode	(0XB020383C);
	MakeCode	(0XB02038C8);
	MakeCode	(0XB02038D4);
	MakeCode	(0XB02038F0);
	MakeCode	(0XB0203994);
	MakeCode	(0XB02039D8);
	MakeCode	(0XB02039F4);
	MakeCode	(0XB0203A14);
	MakeCode	(0XB0203A1C);
	MakeCode	(0XB0203A2C);
	MakeCode	(x=0XB0203A44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203A4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203A50);
	OpStkvar	(x,	1);
	MakeCode	(0XB0203A64);
	MakeCode	(x=0XB0203AAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203AC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203AD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203B2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203B38);
	OpStkvar	(x,	1);
	MakeCode	(0XB0203B5C);
	MakeCode	(0XB0203B64);
	MakeCode	(0XB0203B98);
	MakeCode	(0XB0203BF8);
	MakeCode	(0XB0203C44);
	MakeName	(0XB0203C44,	"_L4_KDB_Enter");
	MakeCode	(0XB0203C5C);
	MakeCode	(0XB0203C74);
	MakeCode	(0XB0203C8C);
	MakeName	(0XB0203C8C,	"_L4_KDB_ReadChar_ASM");
	MakeCode	(0XB0203CA4);
	MakeName	(0XB0203CA4,	"_L4_KDB_PrintChar_ASM");
	MakeCode	(0XB0203CBC);
	MakeCode	(0XB0203CD4);
	MakeCode	(0XB0203CEC);
	MakeCode	(0XB0203D04);
	MakeCode	(0XB0203D1C);
	MakeCode	(0XB0203D34);
	MakeCode	(0XB0203D4C);
	MakeCode	(0XB0203D64);
	MakeCode	(0XB0203D7C);
	MakeCode	(0XB0203DA4);
	MakeName	(0XB0203DA4,	"_L4_KernelInterface");
	MakeCode	(0XB0203DDC);
	MakeName	(0XB0203DDC,	"_L4_ExchangeRegisters");
	MakeCode	(x=0XB0203DE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203DE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203DE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203DF8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0203E1C);
	MakeCode	(0XB0203E3C);
	MakeName	(0XB0203E3C,	"_L4_ThreadSwitch");
	MakeCode	(0XB0203E50);
	MakeCode	(0XB0203E84);
	MakeName	(0XB0203E84,	"_L4_Ipc");
	MakeCode	(0XB0203EEC);
	MakeCode	(0XB0203F10);
	MakeName	(0XB0203F10,	"_L4_WaitNotify");
	MakeCode	(x=0XB0203F14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0203F30);
	OpStkvar	(x,	1);
	MakeCode	(0XB0203F40);
	MakeCode	(0XB0203FB4);
	MakeCode	(0XB0203FC8);
	MakeCode	(0XB0203FE8);
	MakeCode	(0XB0203FFC);
	MakeCode	(0XB0204010);
	MakeCode	(0XB0204024);
	MakeName	(0XB0204024,	"mutex_init");
	MakeCode	(0XB0204038);
	MakeName	(0XB0204038,	"_mutex_count_lock");
	MakeCode	(0XB0204054);
	MakeName	(0XB0204054,	"_mutex_count_unlock");
	MakeCode	(0XB0204088);
	MakeName	(0XB0204088,	"mutex_lock");
	MakeCode	(x=0XB0204098);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB02040E8);
	MakeCode	(0XB02040FC);
	MakeCode	(0XB0204108);
	MakeName	(0XB0204108,	"_l4e_min_pagebits");
	MakeCode	(x=0XB020410C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB020412C);
	MakeCode	(x=0XB0204130);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204134);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204140);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204144);
	OpHex		(x,	1);
	MakeCode	(0XB020414C);
	MakeCode	(x=0XB0204158);
	OpHex		(x,	1);
	MakeDword	(x=0XB0204168);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB020416C);
	OpStkvar	(x,	1);
	MakeName	(0XB020416C,	"l4e_min_pagesize");
	MakeCode	(x=0XB020417C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0204180);
	MakeName	(0XB0204180,	"_l4e_biggest_fpage");
	MakeCode	(0XB02041A0);
	MakeCode	(x=0XB0204200);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204204);
	OpHex		(x,	1);
	MakeCode	(x=0XB020420C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204214);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0204214,	"__naming_init");
	MakeDword	(x=0XB0204220);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204224);
	MakeName	(0XB0204224,	"___naming_thread_init");
	MakeCode	(x=0XB0204228);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0204260);
	MakeCode	(0XB02042DC);
	MakeCode	(0XB02042E0);
	MakeDword	(x=0XB02042E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02042E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02042EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02042F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02042F4);
	MakeName	(0XB02042F4,	"__naming_thread_free");
	MakeComm	(0XB0204300,	"void *");
	MakeCode	(0XB0204308);
	MakeName	(0XB0204308,	"___naming_thread_free_tls");
	MakeCode	(x=0XB020430C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0204360,	"void *");
	MakeCode	(0XB020436C);
	MakeCode	(0XB0204370);
	MakeCode	(0XB0204378);
	MakeCode	(0XB020437C);
	MakeDword	(x=0XB0204380);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204384);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204388);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020438C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204390);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204394);
	MakeName	(0XB0204394,	"naming_init_buf_size");
	MakeCode	(0XB020439C);
	MakeName	(0XB020439C,	"_naming_insert");
	MakeCode	(x=0XB02043B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204424);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204428);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204430);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204434);
	OpHex		(x,	1);
	MakeCode	(x=0XB020443C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204440);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204448);
	OpHex		(x,	1);
	MakeCode	(x=0XB020444C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204464);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204478);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204480);
	OpStkvar	(x,	1);
	MakeCode	(0XB020449C);
	MakeCode	(x=0XB0204534);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204538);
	OpHex		(x,	1);
	MakeCode	(x=0XB020454C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204550);
	OpHex		(x,	1);
	MakeCode	(0XB02045A0);
	MakeCode	(x=0XB0204634);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204638);
	OpHex		(x,	1);
	MakeCode	(x=0XB020464C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204650);
	OpHex		(x,	1);
	MakeCode	(0XB02046A0);
	MakeName	(0XB02046A0,	"_naming_lookup");
	MakeCode	(x=0XB02046B8);
	OpDecimal	(x,	1);
	MakeCode	(x=0XB0204718);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020471C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204724);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204728);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204730);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204734);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020473C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204740);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204758);
	OpStkvar	(x,	1);
	MakeCode	(0XB0204774);
	MakeCode	(x=0XB0204870);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204874);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204888);
	OpHex		(x,	1);
	MakeCode	(x=0XB020488C);
	OpHex		(x,	1);
	MakeCode	(0XB02048F4);
	MakeCode	(0XB0204918);
	MakeCode	(0XB0204928);
	MakeCode	(x=0XB020497C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204990);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204994);
	OpHex		(x,	1);
	MakeCode	(0XB02049E0);
	MakeCode	(0XB02049FC);
	MakeCode	(0XB0204A18);
	MakeName	(0XB0204A18,	"___asynch_thread_init");
	MakeDword	(x=0XB0204A64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204A68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204A6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204A70);
	MakeName	(0XB0204A70,	"__async_thread_free");
	MakeComm	(0XB0204A7C,	"void *");
	MakeCode	(0XB0204A84);
	MakeName	(0XB0204A84,	"___asynch_thread_free_tls");
	MakeComm	(0XB0204AAC,	"void *");
	MakeCode	(0XB0204AB8);
	MakeCode	(0XB0204ABC);
	MakeDword	(x=0XB0204AC4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204AC8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204ACC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204AD0);
	MakeName	(0XB0204AD0,	"_asynch_get_bit");
	MakeCode	(0XB0204AFC);
	MakeCode	(0XB0204B24);
	MakeCode	(0XB0204B28);
	MakeName	(0XB0204B28,	"_asynch_free_bit");
	MakeCode	(0XB0204B48);
	MakeName	(0XB0204B48,	"asynch_insert");
	MakeCode	(0XB0204BE0);
	MakeCode	(0XB0204BE4);
	MakeDword	(x=0XB0204C00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204C04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204C08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204C0C);
	MakeName	(0XB0204C0C,	"_asynch_remove");
	MakeCode	(0XB0204C80);
	MakeName	(0XB0204C80,	"asynch_check_mask");
	MakeCode	(x=0XB0204C90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204CCC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0204CE8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0204D14);
	MakeCode	(0XB0204D5C);
	MakeComm	(0XB0204D60,	"char *");
	MakeCode	(x=0XB0204D60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204D7C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0204D80,	"char *");
	MakeCode	(x=0XB0204D80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204D88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204D8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204D90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0204D9C);
	MakeCode	(0XB0204DA4);
	MakeComm	(0XB0204DA8,	"char *");
	MakeCode	(x=0XB0204DA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204DC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204DC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204DC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0204DD4);
	MakeDword	(x=0XB0204DD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204DDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204DE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204DE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204DE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204DEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204DF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204DF4);
	MakeName	(0XB0204DF4,	"___cap_init");
	MakeCode	(x=0XB0204E18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204E24);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204E28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204E38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204E3C);
	OpOff		(x,	1,	0XB0240278);
	OpOff		(x,	129,	0XB0240278);
	MakeCode	(x=0XB0204E48);
	OpOff		(x,	1,	0XB0240278);
	OpOff		(x,	129,	0XB0240278);
	MakeCode	(x=0XB0204E50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0204E7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204E80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204E84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204E88);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204E8C);
	MakeName	(0XB0204E8C,	"_iguana_cap_set");
	MakeComm	(0XB0204EBC,	"mutex_t");
	MakeCode	(x=0XB0204EBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0204EC8,	"mutex_t");
	MakeCode	(x=0XB0204EC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0204EDC);
	MakeCode	(0XB0204EE0);
	MakeDword	(x=0XB0204EE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204EE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204EEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0204EF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0204EF4);
	MakeName	(0XB0204EF4,	"_iguana_cap_get_slot");
	MakeCode	(x=0XB0204EF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0204F2C,	"mutex_t");
	MakeCode	(x=0XB0204F2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204F34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0204F38);
	OpOff		(x,	1,	0XB0240254);
	OpOff		(x,	129,	0XB0240254);
	MakeComm	(0XB0204F68,	"mutex_t");
	MakeCode	(x=0XB0204F68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0204F74);
	MakeCode	(0XB0204F90);
	MakeCode	(0XB0204F94);
	MakeCode	(x=0XB0204FA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204FB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204FB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0204FD4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0204FE0);
	MakeCode	(x=0XB0204FE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205008);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205010);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205014);
	OpStkvar	(x,	1);
	MakeCode	(0XB0205030);
	MakeCode	(x=0XB0205038);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020504C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020506C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205070);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020507C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205080);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205084);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205088);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205090);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205094);
	OpHex		(x,	1);
	MakeCode	(x=0XB02050A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02050A8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02050C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02050C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02050CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02050D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02050D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02050D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02050DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02050E0);
	MakeName	(0XB02050E0,	"_lookup_clist");
	MakeCode	(x=0XB02050E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02050EC,	"mutex_t");
	MakeCode	(x=0XB02050EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0205150,	"mutex_t");
	MakeCode	(x=0XB0205150);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0205170);
	MakeComm	(0XB0205184,	"mutex_t");
	MakeCode	(x=0XB0205184);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB02051A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02051A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02051A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02051AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02051B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02051B4);
	MakeName	(0XB02051B4,	"_iguana_cap_free_slot");
	MakeComm	(0XB02051C4,	"mutex_t");
	MakeCode	(x=0XB02051C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0205210,	"mutex_t");
	MakeCode	(x=0XB0205210);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB020521C);
	MakeDword	(x=0XB0205248);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020524C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205250);
	MakeName	(0XB0205250,	"_iguana_get_cap");
	MakeComm	(0XB020525C,	"mutex_t");
	MakeCode	(x=0XB020525C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205270);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB02052E4,	"mutex_t");
	MakeCode	(x=0XB02052E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB02052F8);
	MakeCode	(0XB0205300);
	MakeDword	(x=0XB0205308);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020530C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205310);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205314);
	MakeName	(0XB0205314,	"_cap_matches");
	MakeCode	(0XB0205334);
	MakeCode	(0XB0205340);
	MakeName	(0XB0205340,	"_iguana_get_clist");
	MakeCode	(x=0XB0205344);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0205348,	"mutex_t");
	MakeCode	(x=0XB0205350);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0205354,	"mutex_t");
	MakeDword	(x=0XB0205368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020536C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205370);
	MakeName	(0XB0205370,	"_cap_clist_list_delete");
	MakeCode	(x=0XB0205374);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB020537C,	"mutex_t");
	MakeComm	(0XB020538C,	"mutex_t");
	MakeDword	(x=0XB0205398);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020539C);
	MakeName	(0XB020539C,	"__cap_memsection_create");
	MakeCode	(x=0XB02053A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02053F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02053FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205404);
	OpHex		(x,	1);
	MakeCode	(x=0XB020540C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205410);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205418);
	OpHex		(x,	1);
	MakeCode	(x=0XB020541C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205434);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0205464);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205468);
	MakeName	(0XB0205468,	"_memsection_create");
	MakeCode	(x=0XB0205488);
	OpStkvar	(x,	1);
	MakeCode	(0XB0205498);
	MakeCode	(0XB02054C8);
	MakeCode	(0XB02054F8);
	MakeCode	(0XB020552C);
	MakeCode	(0XB0205560);
	MakeName	(0XB0205560,	"_memsection_register_server");
	MakeCode	(x=0XB0205564);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020559C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02055A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02055AC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02055B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02055B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02055C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02055DC);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02055F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02055FC);
	MakeName	(0XB02055FC,	"_memsection_lookup");
	MakeCode	(x=0XB0205600);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205638);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020563C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205644);
	OpHex		(x,	1);
	MakeCode	(x=0XB020564C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205650);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205658);
	OpHex		(x,	1);
	MakeCode	(x=0XB020565C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205678);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB020569C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02056A0);
	MakeName	(0XB02056A0,	"_memsection_delete");
	MakeComm	(0XB02056AC,	"mutex_t");
	MakeCode	(x=0XB02056AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02056B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02056C0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0205708);
	MakeCode	(x=0XB020570C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020573C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205740);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020574C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205750);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205754);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205758);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205760);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205764);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205778);
	OpStkvar	(x,	1);
	MakeComm	(0XB02057C8,	"mutex_t");
	MakeCode	(x=0XB02057C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB02057D8);
	MakeCode	(0XB02057EC);
	MakeCode	(0XB02057F4);
	MakeDword	(x=0XB0205820);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205824);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205828);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020582C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205830);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205834);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205838);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020583C);
	MakeCode	(x=0XB0205840);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205888);
	OpHex		(x,	1);
	MakeCode	(x=0XB020589C);
	OpHex		(x,	1);
	MakeCode	(x=0XB02058A0);
	OpHex		(x,	1);
	MakeDword	(x=0XB02058D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02058D4);
	MakeName	(0XB02058D4,	"memsection_base");
	MakeCode	(x=0XB02058D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205910);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205914);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020591C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205924);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205928);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205930);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205934);
	OpHex		(x,	1);
	MakeCode	(x=0XB020594C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0205968);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020596C);
	MakeName	(0XB020596C,	"memsection_size");
	MakeCode	(x=0XB0205970);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02059A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02059AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02059B4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02059BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02059C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02059C8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02059CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02059E4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0205A00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205A04);
	MakeName	(0XB0205A04,	"_memsection_page_map");
	MakeCode	(x=0XB0205A08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205A48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205A4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205A54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205A5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205A60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205A68);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205A6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205A84);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0205AA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205AA4);
	MakeCode	(x=0XB0205AA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205AF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205B04);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205B08);
	OpHex		(x,	1);
	MakeDword	(x=0XB0205B3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205B40);
	MakeCode	(x=0XB0205C1C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205C2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205C40);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205C94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205C98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205CA0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205CC0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205CE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205CEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205D00);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205D54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205D58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205D60);
	OpHex		(x,	1);
	MakeCode	(0XB0205D84);
	MakeCode	(0XB0205D9C);
	MakeCode	(0XB0205DCC);
	MakeCode	(0XB0205DD0);
	MakeCode	(0XB0205DE8);
	MakeCode	(0XB0205DEC);
	MakeCode	(0XB0205E00);
	MakeDword	(x=0XB0205E04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205E08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205E0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205E10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205E14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205E18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205E1C);
	MakeName	(0XB0205E1C,	"_object_get_interface");
	MakeComm	(0XB0205E24,	"size_t");
	MakeCode	(0XB0205E58);
	MakeCode	(0XB0205EB8);
	MakeDword	(x=0XB0205ECC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0205ED0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0205ED0,	"_iguana_getenv");
	MakeCode	(0XB0205F00);
	MakeDword	(x=0XB0205F08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205F0C);
	MakeName	(0XB0205F0C,	"_pd_myself");
	MakeCode	(x=0XB0205F10);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0205F3C);
	MakeCode	(x=0XB0205F40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0205F5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205F60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205F6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205F74);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205F78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0205F80);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205F84);
	OpHex		(x,	1);
	MakeCode	(x=0XB0205F94);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0205FB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0205FB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0205FB8);
	MakeCode	(x=0XB0205FBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206004);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206018);
	OpHex		(x,	1);
	MakeCode	(x=0XB020601C);
	OpHex		(x,	1);
	MakeDword	(x=0XB0206050);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206054);
	MakeCode	(x=0XB0206058);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020609C);
	OpHex		(x,	1);
	MakeCode	(x=0XB02060B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02060B4);
	OpHex		(x,	1);
	MakeDword	(x=0XB02060E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02060EC);
	MakeCode	(x=0XB02060F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206138);
	OpHex		(x,	1);
	MakeCode	(x=0XB020614C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206150);
	OpHex		(x,	1);
	MakeDword	(x=0XB0206184);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206188);
	MakeCode	(x=0XB020618C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02061D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02061E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02061E8);
	OpHex		(x,	1);
	MakeDword	(x=0XB020621C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206220);
	MakeName	(0XB0206220,	"_pd_delete");
	MakeCode	(x=0XB0206224);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020625C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206260);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206268);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206270);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206274);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020627C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206280);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206294);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02062AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02062B0);
	MakeCode	(x=0XB02062B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206300);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206314);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206318);
	OpHex		(x,	1);
	MakeDword	(x=0XB0206358);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020635C);
	MakeCode	(x=0XB0206360);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02063A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02063BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02063C0);
	OpHex		(x,	1);
	MakeDword	(x=0XB0206400);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206404);
	MakeName	(0XB0206404,	"__pd_create_memsection");
	MakeCode	(x=0XB020640C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206414);
	OpStkvar	(x,	1);
	MakeComm	(0XB0206418,	"mutex_t");
	MakeCode	(x=0XB0206418);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020642C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206434);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206440);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020644C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0206460,	"mutex_t");
	MakeCode	(x=0XB0206460);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206474);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206484);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206488);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02064B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02064B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02064C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02064C8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02064CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02064D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02064D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02064DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02064EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206500);
	OpStkvar	(x,	1);
	MakeCode	(0XB0206544);
	MakeDword	(x=0XB020654C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0206550);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0206554);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206558);
	MakeCode	(0XB0206578);
	MakeCode	(0XB0206598);
	MakeCode	(0XB02065B8);
	MakeCode	(x=0XB02065BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206604);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206618);
	OpHex		(x,	1);
	MakeCode	(x=0XB020661C);
	OpHex		(x,	1);
	MakeDword	(x=0XB020664C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206650);
	MakeName	(0XB0206650,	"_pd_add_clist");
	MakeCode	(x=0XB0206654);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206690);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206694);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020669C);
	OpHex		(x,	1);
	MakeCode	(x=0XB02066A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02066A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02066B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02066B4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02066CC);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02066E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02066EC);
	MakeName	(0XB02066EC,	"_pd_release_clist");
	MakeCode	(x=0XB02066F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206730);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206734);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020673C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206744);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206748);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206750);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206754);
	OpHex		(x,	1);
	MakeCode	(x=0XB020676C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0206784);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206788);
	MakeName	(0XB0206788,	"__session_create");
	MakeCode	(x=0XB02067A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02067A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02067D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02067F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206820);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206824);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206830);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206834);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206838);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020683C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206844);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206848);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206854);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206860);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206888);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206890);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02068CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02068D0);
	MakeName	(0XB02068D0,	"_session_create_with_clist");
	MakeComm	(0XB02068D8,	"size_t");
	MakeComm	(0XB020690C,	"void *");
	MakeCode	(0XB0206920);
	MakeCode	(0XB020692C);
	MakeName	(0XB020692C,	"_session_create");
	MakeCode	(0XB0206988);
	MakeCode	(0XB0206990);
	MakeName	(0XB0206990,	"_session_create_full_share");
	MakeCode	(0XB02069C8);
	MakeName	(0XB02069C8,	"_session_add_async");
	MakeCode	(x=0XB02069CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206A10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206A14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206A1C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206A24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206A28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206A30);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206A34);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206A48);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0206A60);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206A64);
	MakeName	(0XB0206A64,	"_session_provide_access");
	MakeCode	(0XB0206AB8);
	MakeCode	(0XB0206AF0);
	MakeCode	(0XB0206AF4);
	MakeCode	(0XB0206AF8);
	MakeDword	(x=0XB0206B04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0206B08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0206B0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0206B10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206B14);
	MakeCode	(0XB0206B54);
	MakeName	(0XB0206B54,	"_session_revoke_access");
	MakeCode	(0XB0206BA0);
	MakeCode	(x=0XB0206BBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206BE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206C28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206C5C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206C60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206C6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206C70);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206C84);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0206CB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0206CB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206CB8);
	MakeName	(0XB0206CB8,	"_session_delete");
	MakeCode	(x=0XB0206CD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206CD8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206D08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206D0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206D18);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206D20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206D24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206D2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206D30);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206D44);
	OpStkvar	(x,	1);
	MakeComm	(0XB0206D50,	"void *");
	MakeCode	(0XB0206D64);
	MakeDword	(x=0XB0206D74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206D78);
	MakeName	(0XB0206D78,	"_session_delete_2");
	MakeCode	(x=0XB0206D94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206DF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206E08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206E0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206E18);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206E20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206E24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206E2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206E30);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206E3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206E44);
	OpStkvar	(x,	1);
	MakeCode	(0XB0206E5C);
	MakeCode	(x=0XB0206E6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0206E6C,	"__lib_iguana_init_env");
	MakeDword	(x=0XB0206E78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206E7C);
	MakeName	(0XB0206E7C,	"___lib_iguana_init_pager");
	MakeCode	(x=0XB0206E94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206EC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206ED0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206ED4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0206EE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0206EE8);
	OpStkvar	(x,	1);
	MakeName	(0XB0206EE8,	"__lib_iguana_init");
	MakeCode	(x=0XB0206EF0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0206EF8);
	MakeName	(0XB0206EF8,	"_thread_myself");
	MakeCode	(x=0XB0206F04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206F34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206F38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206F44);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206F4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206F50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206F58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206F5C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206F70);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0206F8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0206F90);
	MakeName	(0XB0206F90,	"_thread_l4tid");
	MakeCode	(x=0XB0206F94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0206FCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206FD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206FD8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206FE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206FE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0206FEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0206FF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207008);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0207024);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0207028);
	MakeName	(0XB0207028,	"_thread_id");
	MakeCode	(x=0XB020702C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0207060);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207064);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207070);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207078);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020707C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207084);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207088);
	OpHex		(x,	1);
	MakeCode	(x=0XB020709C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02070B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02070BC);
	MakeName	(0XB02070BC,	"_thread_create_priority");
	MakeCode	(x=0XB02070C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0207108);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020710C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207114);
	OpHex		(x,	1);
	MakeCode	(x=0XB020711C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207120);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207128);
	OpHex		(x,	1);
	MakeCode	(x=0XB020712C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207144);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0207168);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020716C);
	MakeCode	(0XB0207178);
	MakeName	(0XB0207178,	"_thread_start");
	MakeCode	(x=0XB020717C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02071BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02071C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02071C8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02071D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02071D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02071DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02071E0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02071F8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0207210);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0207214);
	MakeCode	(0XB0207250);
	MakeCode	(x=0XB0207270);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0207288);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020728C);
	MakeName	(0XB020728C,	"_thread_delete");
	MakeCode	(x=0XB0207298);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB02072C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02072C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02072D4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02072DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02072E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02072E8);
	OpHex		(x,	1);
	MakeCode	(x=0XB02072EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB02072FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207304);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207330);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207334);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020733C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207344);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207348);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207350);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207354);
	OpHex		(x,	1);
	MakeCode	(x=0XB020736C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0207388);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB020738C);
	MakeCode	(x=0XB0207424);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207438);
	OpHex		(x,	1);
	MakeCode	(x=0XB020743C);
	OpHex		(x,	1);
	MakeCode	(0XB0207468);
	MakeCode	(x=0XB02074F8);
	OpHex		(x,	1);
	MakeCode	(x=0XB020750C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207510);
	OpHex		(x,	1);
	MakeCode	(0XB0207540);
	MakeCode	(x=0XB02075D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB02075E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02075E8);
	OpHex		(x,	1);
	MakeCode	(0XB0207618);
	MakeCode	(0XB0207628);
	MakeCode	(x=0XB0207634);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB020767C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207690);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207694);
	OpHex		(x,	1);
	MakeDword	(x=0XB02076C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02076C8);
	MakeName	(0XB02076C8,	"___tls_init");
	MakeCode	(0XB02076F0);
	MakeName	(0XB02076F0,	"___tls_init_malloc");
	MakeComm	(0XB02076F4,	"size_t");
	MakeComm	(0XB02076F8,	"size_t");
	MakeComm	(0XB0207718,	"size_t");
	MakeComm	(0XB020771C,	"size_t");
	MakeComm	(0XB0207740,	"size_t");
	MakeComm	(0XB0207744,	"size_t");
	MakeCode	(0XB0207778);
	MakeCode	(0XB020777C);
	MakeCode	(0XB0207780);
	MakeCode	(0XB0207784);
	MakeCode	(0XB0207788);
	MakeCode	(0XB020778C);
	MakeDword	(x=0XB0207790);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0207794);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0207798);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB020779C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB02077A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02077A4);
	MakeCode	(x=0XB02077C8);
	OpStkvar	(x,	1);
	MakeName	(0XB02077C8,	"__tls_free");
	MakeComm	(0XB02077DC,	"void *");
	MakeCode	(x=0XB02077E0);
	OpStkvar	(x,	1);
	MakeCode	(0XB02077E8);
	MakeName	(0XB02077E8,	"__thread_stub");
	MakeCode	(x=0XB02077FC);
	OpStkvar	(x,	1);
	MakeName	(0XB02077FC,	"___udivdi3");
	MakeCode	(x=0XB0207808);
	OpStkvar	(x,	1);
	MakeCode	(0XB0207818);
	MakeCode	(x=0XB0207830);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020783C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207890);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02078B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB02078C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020790C);
	OpStkvar	(x,	1);
	MakeCode	(0XB020791C);
	MakeCode	(x=0XB0207920);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB020792C);
	OpStkvar	(x,	1);
	MakeName	(0XB020792C,	"___umoddi3");
	MakeCode	(x=0XB0207934);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207938);
	OpStkvar	(x,	1);
	MakeCode	(0XB020794C);
	MakeName	(0XB020794C,	"___divide_error");
	MakeComm	(0XB0207960,	"char *");
	MakeCode	(x=0XB0207974);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207978);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0207980);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207984);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207998);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB02079A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB02079AC);
	MakeName	(0XB02079AC,	"_calloc");
	MakeComm	(0XB02079B4,	"size_t");
	MakeComm	(0XB02079BC,	"size_t");
	MakeComm	(0XB02079C4,	"int");
	MakeCode	(x=0XB02079D4);
	OpHex		(x,	1);
	MakeCode	(x=0XB02079DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0207A04);
	OpHex		(x,	1);
	MakeCode	(0XB0207A30);
	MakeName	(0XB0207A30,	"_strcpy");
	MakeCode	(0XB0207A5C);
	MakeCode	(0XB0207A80);
	MakeCode	(0XB0207AB4);
	MakeName	(0XB0207AB4,	"ll_delete");
	MakeCode	(0XB0207AD8);
	MakeName	(0XB0207AD8,	"dl_list_init");
	MakeCode	(0XB0207AE4);
	MakeName	(0XB0207AE4,	"_dl_list_create_back");
	MakeComm	(0XB0207AEC,	"size_t");
	MakeCode	(0XB0207B20);
	MakeName	(0XB0207B20,	"_cb_new_withmem");
	MakeComm	(0XB0207B28,	"size_t");
	MakeStr		(0XB0207B68,	0XB0207BA3);
	MakeName	(0XB0207B68,	"aQdms_server_sh");
	MakeByte	(0XB0207BA3);
	MakeStr		(0XB0207BA4,	0XB0207BB0);
	MakeName	(0XB0207BA4,	"aQdms_server");
	MakeStr		(0XB0207BB0,	0XB0207BDF);
	MakeName	(0XB0207BB0,	"aQdms_server_in");
	MakeByte	(0XB0207BDF);
	MakeStr		(0XB0207BE0,	0XB0207C18);
	MakeName	(0XB0207BE0,	"aQdms_server__0");
	MakeStr		(0XB0207C18,	0XB0207C47);
	MakeName	(0XB0207C18,	"aQdms_server__1");
	MakeByte	(0XB0207C47);
	MakeStr		(0XB0207C48,	0XB0207C80);
	MakeName	(0XB0207C48,	"aQdms_server__2");
	MakeStr		(0XB0207C80,	0XB0207CB8);
	MakeName	(0XB0207C80,	"aQdms_server__3");
	MakeStr		(0XB0207CB8,	0XB0207CE7);
	MakeName	(0XB0207CB8,	"aQdms_server__4");
	MakeByte	(0XB0207CE7);
	MakeStr		(0XB0207CE8,	0XB0207D21);
	MakeName	(0XB0207CE8,	"aQdms_server_re");
	MakeByte	(0XB0207D21);
	MakeArray	(0XB0207D21,	0X3);
	MakeStr		(0XB0207D24,	0XB0207D64);
	MakeName	(0XB0207D24,	"aQdms_server__5");
	MakeStr		(0XB0207D64,	0XB0207DA3);
	MakeName	(0XB0207D64,	"aQdms_server__6");
	MakeByte	(0XB0207DA3);
	MakeStr		(0XB0207DA4,	0XB0207DEC);
	MakeName	(0XB0207DA4,	"aQdms_server__7");
	MakeStr		(0XB0207DEC,	0XB0207E20);
	MakeName	(0XB0207DEC,	"aQdms_server__8");
	MakeStr		(0XB0207E20,	0XB0207E57);
	MakeName	(0XB0207E20,	"aQdms_server__9");
	MakeByte	(0XB0207E57);
	MakeStr		(0XB0207E58,	0XB0207E9E);
	MakeName	(0XB0207E58,	"aQdms_server_10");
	MakeWord	(0XB0207E9E);
	MakeStr		(0XB0207EA0,	0XB0207EE1);
	MakeName	(0XB0207EA0,	"aQdms_server_11");
	MakeByte	(0XB0207EE1);
	MakeArray	(0XB0207EE1,	0X3);
	MakeStr		(0XB0207EE4,	0XB0207F1C);
	MakeName	(0XB0207EE4,	"aQdms_server_12");
	MakeStr		(0XB0207F1C,	0XB0207F5F);
	MakeName	(0XB0207F1C,	"aQdms_server_13");
	MakeByte	(0XB0207F5F);
	MakeStr		(0XB0207F60,	0XB0207FA4);
	MakeName	(0XB0207F60,	"aQdms_server_14");
	MakeStr		(0XB0207FA4,	0XB0207FE7);
	MakeName	(0XB0207FA4,	"aQdms_server_15");
	MakeByte	(0XB0207FE7);
	MakeStr		(0XB0207FE8,	0XB0208028);
	MakeName	(0XB0207FE8,	"aQdms_server_16");
	MakeStr		(0XB0208028,	0XB0208064);
	MakeName	(0XB0208028,	"aQdms_server_17");
	MakeStr		(0XB0208064,	0XB0208098);
	MakeName	(0XB0208064,	"aQdms_server_18");
	MakeStr		(0XB0208098,	0XB02080CA);
	MakeName	(0XB0208098,	"aQdms_server_19");
	MakeWord	(0XB02080CA);
	MakeStr		(0XB02080CC,	0XB0208103);
	MakeName	(0XB02080CC,	"aQdms_server_20");
	MakeByte	(0XB0208103);
	MakeStr		(0XB0208104,	0XB020813D);
	MakeName	(0XB0208104,	"aQdms_server_de");
	MakeByte	(0XB020813D);
	MakeArray	(0XB020813D,	0X3);
	MakeStr		(0XB0208140,	0XB0208183);
	MakeName	(0XB0208140,	"aQdms_server_op");
	MakeByte	(0XB0208183);
	MakeStr		(0XB0208184,	0XB02081C7);
	MakeName	(0XB0208184,	"aQdms_server_21");
	MakeByte	(0XB02081C7);
	MakeStr		(0XB02081C8,	0XB020820C);
	MakeName	(0XB02081C8,	"aQdms_server_22");
	MakeStr		(0XB020820C,	0XB0208250);
	MakeName	(0XB020820C,	"aQdms_server_23");
	MakeStr		(0XB0208250,	0XB020828B);
	MakeName	(0XB0208250,	"aQdms_server_24");
	MakeByte	(0XB020828B);
	MakeStr		(0XB020828C,	0XB02082D3);
	MakeName	(0XB020828C,	"aQdms_server_25");
	MakeByte	(0XB02082D3);
	MakeStr		(0XB02082D4,	0XB0208304);
	MakeName	(0XB02082D4,	"aQdms_server_26");
	MakeStr		(0XB0208304,	0XB0208346);
	MakeName	(0XB0208304,	"aQdms_server_27");
	MakeWord	(0XB0208346);
	MakeStr		(0XB0208348,	0XB0208379);
	MakeName	(0XB0208348,	"aQdms_server_cl");
	MakeByte	(0XB0208379);
	MakeArray	(0XB0208379,	0X3);
	MakeStr		(0XB020837C,	0XB02083BF);
	MakeName	(0XB020837C,	"aQdms_server_28");
	MakeByte	(0XB02083BF);
	MakeStr		(0XB02083C0,	0XB02083E0);
	MakeName	(0XB02083C0,	"aServerErrorSen");
	MakeStr		(0XB02083E0,	0XB0208406);
	MakeName	(0XB02083E0,	"a0123456789abcd");
	MakeWord	(0XB0208406);
	MakeStr		(0XB0208408,	0XB020840E);
	MakeName	(0XB0208408,	"a_exit");
	MakeWord	(0XB020840E);
	MakeStr		(0XB0208410,	0XB020843A);
	MakeName	(0XB0208410,	"aWeHaveExitedSh");
	MakeWord	(0XB020843A);
	MakeStr		(0XB020843C,	0XB020845D);
	MakeName	(0XB020843C,	"aLibsCSrcSysIgu");
	MakeByte	(0XB020845D);
	MakeArray	(0XB020845D,	0X3);
	MakeStr		(0XB0208460,	0XB0208496);
	MakeName	(0XB0208460,	"aAssertionFaile");
	MakeWord	(0XB0208496);
	MakeStr		(0XB0208498,	0XB02084A9);
	MakeName	(0XB0208498,	"aThreadAbortEd");
	MakeByte	(0XB02084A9);
	MakeArray	(0XB02084A9,	0X3);
	MakeStr		(0XB02084AC,	0XB02084BE);
	MakeName	(0XB02084AC,	"aQdms_mutex_cre");
	MakeWord	(0XB02084BE);
	MakeStr		(0XB02084C0,	0XB02084D5);
	MakeName	(0XB02084C0,	"a__naming_threa");
	MakeByte	(0XB02084D5);
	MakeArray	(0XB02084D5,	0X3);
	MakeStr		(0XB02084D8,	0XB02084F1);
	MakeName	(0XB02084D8,	"a__naming_thr_0");
	MakeByte	(0XB02084F1);
	MakeArray	(0XB02084F1,	0X3);
	MakeStr		(0XB02084F4,	0XB020850D);
	MakeName	(0XB02084F4,	"aLibsNamingSrcN");
	MakeByte	(0XB020850D);
	MakeArray	(0XB020850D,	0X3);
	MakeDword	(0XB0208510);
	MakeArray	(0XB0208510,	0X12);
	MakeStr		(0XB0208558,	0XB0208571);
	MakeName	(0XB0208558,	"a__asynch_threa");
	MakeByte	(0XB0208571);
	MakeArray	(0XB0208571,	0X3);
	MakeStr		(0XB0208574,	0XB0208582);
	MakeName	(0XB0208574,	"aAsynch_insert");
	MakeWord	(0XB0208582);
	MakeStr		(0XB0208584,	0XB0208596);
	MakeName	(0XB0208584,	"aAsynch_check_m");
	MakeWord	(0XB0208596);
	MakeStr		(0XB0208598,	0XB02085B1);
	MakeName	(0XB0208598,	"aLibsIguanaSrcA");
	MakeByte	(0XB02085B1);
	MakeArray	(0XB02085B1,	0X3);
	MakeStr		(0XB02085B4,	0XB02085CB);
	MakeName	(0XB02085B4,	"aAsynch_objects");
	MakeByte	(0XB02085CB);
	MakeStr		(0XB02085CC,	0XB02085E6);
	MakeName	(0XB02085CC,	"aAsynch_objec_0");
	MakeWord	(0XB02085E6);
	MakeStr		(0XB02085E8,	0XB0208613);
	MakeName	(0XB02085E8,	"aAsynch_objec_1");
	MakeByte	(0XB0208613);
	MakeDword	(0XB0208614);
	MakeArray	(0XB0208614,	0X21);
	MakeStr		(0XB0208698,	0XB02086A7);
	MakeName	(0XB0208698,	"aIguana_cap_set");
	MakeByte	(0XB02086A7);
	MakeStr		(0XB02086A8,	0XB02086BC);
	MakeName	(0XB02086A8,	"aIguana_cap_get");
	MakeStr		(0XB02086BC,	0XB02086C9);
	MakeName	(0XB02086BC,	"aLookup_clist");
	MakeByte	(0XB02086C9);
	MakeArray	(0XB02086C9,	0X3);
	MakeDword	(0XB02086CC);
	MakeArray	(0XB02086CC,	0X2);
	MakeStr		(0XB02086D4,	0XB02086EA);
	MakeName	(0XB02086D4,	"aLibsIguanaSrcC");
	MakeWord	(0XB02086EA);
	MakeStr		(0XB02086EC,	0XB02086FE);
	MakeName	(0XB02086EC,	"aIs_valid_capCa");
	MakeWord	(0XB02086FE);
	MakeStr		(0XB0208700,	0XB0208728);
	MakeName	(0XB0208700,	"aSlot_pos1Slot_");
	MakeStr		(0XB0208728,	0XB020875C);
	MakeName	(0XB0208728,	"aLookup_clistCa");
	MakeStr		(0XB020875C,	0XB020876E);
	MakeName	(0XB020875C,	"aMemsection_del");
	MakeWord	(0XB020876E);
	MakeDword	(0XB0208770);
	MakeArray	(0XB0208770,	0X2);
	MakeStr		(0XB0208778,	0XB020878E);
	MakeName	(0XB0208778,	"aMemsection_bac");
	MakeWord	(0XB020878E);
	MakeStr		(0XB0208790,	0XB02087C8);
	MakeName	(0XB0208790,	"aMemsectSlot_li");
	MakeStr		(0XB02087C8,	0XB02087E5);
	MakeName	(0XB02087C8,	"aLibsIguanaSrcM");
	MakeByte	(0XB02087E5);
	MakeArray	(0XB02087E5,	0X3);
	MakeStr		(0XB02087E8,	0XB0208809);
	MakeName	(0XB02087E8,	"aSlot_posSlot_l");
	MakeByte	(0XB0208809);
	MakeArray	(0XB0208809,	0X3);
	MakeStr		(0XB020880C,	0XB0208833);
	MakeName	(0XB020880C,	"aBaseUintptr_tM");
	MakeByte	(0XB0208833);
	MakeStr		(0XB0208834,	0XB0208858);
	MakeName	(0XB0208834,	"aEnd1L4e_min_pa");
	MakeStr		(0XB0208858,	0XB0208877);
	MakeName	(0XB0208858,	"aBaseL4e_min_pa");
	MakeByte	(0XB0208877);
	MakeStr		(0XB0208878,	0XB02088B8);
	MakeName	(0XB0208878,	"aEndUintptr_tMe");
	MakeStr		(0XB02088B8,	0XB02088E1);
	MakeName	(0XB02088B8,	"aInstancePServe");
	MakeByte	(0XB02088E1);
	MakeArray	(0XB02088E1,	0X3);
	MakeDword	(0XB02088E4);
	MakeArray	(0XB02088E4,	0X2);
	MakeStr		(0XB02088EC,	0XB0208903);
	MakeName	(0XB02088EC,	"aSession_provid");
	MakeByte	(0XB0208903);
	MakeDword	(0XB0208904);
	MakeArray	(0XB0208904,	0X2);
	MakeStr		(0XB020890C,	0XB0208926);
	MakeName	(0XB020890C,	"aLibsIguanaSrcS");
	MakeWord	(0XB0208926);
	MakeStr		(0XB0208928,	0XB020893D);
	MakeName	(0XB0208928,	"aSCapIsInvalid_");
	MakeByte	(0XB020893D);
	MakeArray	(0XB020893D,	0X3);
	MakeStr		(0XB0208940,	0XB0208952);
	MakeName	(0XB0208940,	"a__tls_init_mal");
	MakeWord	(0XB0208952);
	MakeStr		(0XB0208954,	0XB020895F);
	MakeName	(0XB0208954,	"aTls_buffer");
	MakeByte	(0XB020895F);
	MakeStr		(0XB0208960,	0XB0208976);
	MakeName	(0XB0208960,	"aLibsIguanaSrcT");
	MakeWord	(0XB0208976);
	MakeStr		(0XB0208978,	0XB0208986);
	MakeName	(0XB0208978,	"aAsynch_buffer");
	MakeWord	(0XB0208986);
	MakeStr		(0XB0208988,	0XB0208996);
	MakeName	(0XB0208988,	"aNaming_buffer");
	MakeWord	(0XB0208996);
	MakeStr		(0XB0208998,	0XB02089B3);
	MakeName	(0XB0208998,	"a__LxDivideBy0E");
	MakeDword	(0XB0240000);
	MakeDword	(0XB0240004);
	MakeDword	(x=0XB0240008);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB024000C,	"__stdin");
	MakeDword	(0XB0240014);
	MakeArray	(0XB0240018,	0X8);
	MakeName	(0XB0240050,	"__stdout");
	MakeDword	(0XB0240058);
	MakeArray	(0XB024005C,	0X4);
	MakeDword	(0XB0240098);
	MakeArray	(0XB024009C,	0X4);
	MakeDword	(0XB02400D8);
	MakeName	(0XB02400D8,	"upstream_shared_queue");
	MakeDword	(0XB02400DC);
	MakeName	(0XB02400DC,	"upstream_queue_sz");
	MakeDword	(0XB02400E0);
	MakeName	(0XB02400E0,	"iguana_server_queue");
	MakeDword	(0XB02400E4);
	MakeName	(0XB02400E4,	"iguana_queue_sz");
	MakeStruct	(0XB02400E8,	"server");
	MakeName	(0XB02400E8,	"registeredServer");
	MakeStruct	(0XB0240100,	"srvclient");
	MakeName	(0XB0240100,	"srvClient");
	MakeStruct	(0XB0240110,	"tabEnt");
	MakeArray	(0XB0240110,	0XA);
	MakeName	(0XB0240110,	"clientTable");
	MakeDword	(0XB02401B0);
	MakeDword	(0XB0240234);
	MakeDword	(0XB0240238);
	MakeDword	(0XB024023C);
	MakeDword	(0XB0240240);
	MakeDword	(0XB0240244);
	MakeName	(0XB0240244,	"qdmsServerHandle");
	MakeDword	(0XB0240248);
	MakeDword	(0XB024024C);
	MakeDword	(0XB0240250);
	MakeDword	(0XB0240254);
	MakeDword	(0XB0240258);
	MakeDword	(0XB024025C);
	MakeDword	(0XB0240260);
	MakeDword	(0XB0240264);
	MakeName	(0XB0240264,	"__sys_stack_size");
	MakeName	(0XB0240268,	"__sys_stack");
	MakeDword	(0XB0240278);
	MakeDword	(0XB024027C);
	MakeDword	(0XB0240280);
	MakeDword	(0XB0240284);
	MakeName	(0XB0240284,	"__iguana_pager");
	MakeDword	(0XB0240288);
}

static Functions_0(void) {

	MakeFunction    (0XB0200000,0XB020004C);
	SetFunctionFlags(0XB0200000,0x1);
	MakeFrame(0XB0200000, 0, 0, 0);
	MakeFunction    (0XB020005C,0XB0200060);
	SetFunctionFlags(0XB020005C,0x80);
	MakeFunction    (0XB0200060,0XB0200088);
	SetFunctionFlags(0XB0200060,0);
	SetType(0XB0200060, "int __cdecl share_queue(struct session *session, int objref, int unused);");
	MakeFrame(0XB0200060, 0X8, 0, 0);
	MakeFunction    (0XB020008C,0XB0200094);
	SetFunctionFlags(0XB020008C,0);
	MakeFunction    (0XB0200094,0XB0200264);
	SetFunctionFlags(0XB0200094,0);
	MakeFrame(0XB0200094, 0X24, 0, 0);
	MakeFunction    (0XB020029C,0XB02002B0);
	SetFunctionFlags(0XB020029C,0x1);
	MakeFrame(0XB020029C, 0X4, 0, 0);
	MakeFunction    (0XB02002B0,0XB0200480);
	SetFunctionFlags(0XB02002B0,0);
	SetType(0XB02002B0, "void __cdecl register_server(int partner, int obj, struct idl4_server_environment *env);");
	MakeFrame(0XB02002B0, 0X24, 0, 0);
	MakeFunction    (0XB02004B0,0XB02005E4);
	SetFunctionFlags(0XB02004B0,0);
	SetType(0XB02004B0, "void __cdecl register_cmd_server(int partner, int obj, struct idl4_server_environment *env);");
	MakeFrame(0XB02004B0, 0X1C, 0, 0);
	MakeFunction    (0XB0200600,0XB020063C);
	SetFunctionFlags(0XB0200600,0);
	SetType(0XB0200600, "struct tabEnt *__cdecl findInTable(int partner, int key);");
	MakeFrame(0XB0200600, 0X4, 0, 0);
	MakeFunction    (0XB0200640,0XB02007C0);
	SetFunctionFlags(0XB0200640,0);
	SetType(0XB0200640, "void __cdecl register_client(int partner, int cl, int srv, struct idl4_server_environment *env);");
	MakeFrame(0XB0200640, 0X1C, 0, 0);
	MakeFunction    (0XB02007D8,0XB0200834);
	SetFunctionFlags(0XB02007D8,0);
	SetType(0XB02007D8, "void __cdecl deregister_client(int partner, int arg, struct idl4_server_environment *env);");
	MakeFrame(0XB02007D8, 0X8, 0, 0);
	MakeFunction    (0XB0200838,0XB0200A28);
	SetFunctionFlags(0XB0200838,0);
	SetType(0XB0200838, "void __cdecl open_client(int partner, int arg0, int arg1, struct idl4_server_environment *env);");
	MakeFrame(0XB0200838, 0X24, 0, 0);
	MakeFunction    (0XB0200A54,0XB0200B24);
	SetFunctionFlags(0XB0200A54,0);
	SetType(0XB0200A54, "void __cdecl close_client(int partner, int arg, struct idl4_server_environment *env);");
	MakeFrame(0XB0200A54, 0X10, 0, 0);
	MakeFunction    (0XB0200B2C,0XB0200B5C);
	SetFunctionFlags(0XB0200B2C,0);
	SetType(0XB0200B2C, "void __cdecl open_iguana_server_client(int partner, struct idl4_server_environment *env);");
	MakeFrame(0XB0200B2C, 0X4, 0, 0);
	MakeFunction    (0XB020116C,0XB0201178);
	SetFunctionFlags(0XB020116C,0);
	MakeFunction    (0XB0201184,0XB02012C8);
	SetFunctionFlags(0XB0201184,0);
	SetType(0XB0201184, "int __cdecl dispatch46(int *partner, int *mr);");
	MakeFrame(0XB0201184, 0X48, 0, 0);
	MakeFunction    (0XB02012C8,0XB0201384);
	SetFunctionFlags(0XB02012C8,0x1);
	MakeFrame(0XB02012C8, 0X18, 0, 0);
	MakeFunction    (0XB0201388,0XB0201420);
	SetFunctionFlags(0XB0201388,0);
	SetType(0XB0201388, "void *memset(void *, int, size_t);");
	MakeFrame(0XB0201388, 0X4, 0, 0);
	MakeFunction    (0XB0201420,0XB0201448);
	SetFunctionFlags(0XB0201420,0);
	SetType(0XB0201420, "int printf(const char *, ...);");
	MakeFrame(0XB0201420, 0X14, 0, 0);
	MakeLocal(0XB0201420, 0XB0201448, "[bp-0X10]", "varg_r0");
	MakeLocal(0XB0201420, 0XB0201448, "[bp-0XC]", "varg_r1");
	MakeLocal(0XB0201420, 0XB0201448, "[bp-0X8]", "varg_r2");
	MakeLocal(0XB0201420, 0XB0201448, "[bp-0X4]", "varg_r3");
	MakeFunction    (0XB020144C,0XB0201490);
	SetFunctionFlags(0XB020144C,0);
	SetType(0XB020144C, "int puts(const char *);");
	MakeFrame(0XB020144C, 0XC, 0, 0);
	MakeFunction    (0XB0201494,0XB02014BC);
	SetFunctionFlags(0XB0201494,0);
	SetType(0XB0201494, "int vfprintf(FILE *, const char *, __va_list);");
	MakeFrame(0XB0201494, 0XC, 0, 0);
	MakeFunction    (0XB02014BC,0XB02014DC);
	SetFunctionFlags(0XB02014BC,0);
	MakeFrame(0XB02014BC, 0X4, 0, 0);
	MakeFunction    (0XB02014E0,0XB0201548);
	SetFunctionFlags(0XB02014E0,0);
	MakeFrame(0XB02014E0, 0X10, 0, 0);
	MakeFunction    (0XB0201548,0XB0201568);
	SetFunctionFlags(0XB0201548,0x1);
	MakeFrame(0XB0201548, 0XC, 0, 0);
	MakeFunction    (0XB0201568,0XB0201580);
	SetFunctionFlags(0XB0201568,0);
	MakeFunction    (0XB0201580,0XB02015C8);
	SetFunctionFlags(0XB0201580,0);
	MakeFrame(0XB0201580, 0X14, 0, 0);
	MakeFunction    (0XB02015D0,0XB02016A0);
	SetFunctionFlags(0XB02015D0,0);
	MakeFrame(0XB02015D0, 0X20, 0, 0);
	MakeFunction    (0XB02016BC,0XB020173C);
	SetFunctionFlags(0XB02016BC,0);
	MakeFrame(0XB02016BC, 0X2C, 0, 0);
	MakeFunction    (0XB020173C,0XB02017BC);
	SetFunctionFlags(0XB020173C,0);
	MakeFrame(0XB020173C, 0X28, 0, 0);
	MakeFunction    (0XB02017C0,0XB0201838);
	SetFunctionFlags(0XB02017C0,0);
	MakeFrame(0XB02017C0, 0X20, 0, 0);
	MakeFunction    (0XB0201848,0XB02018AC);
	SetFunctionFlags(0XB0201848,0);
	MakeFrame(0XB0201848, 0X20, 0, 0);
	MakeFunction    (0XB02018B8,0XB02018C0);
	SetFunctionFlags(0XB02018B8,0x1);
	MakeFrame(0XB02018B8, 0X4, 0, 0);
	MakeFunction    (0XB02018C0,0XB02024C0);
	SetFunctionFlags(0XB02018C0,0);
	MakeFrame(0XB02018C0, 0X7C, 0, 0);
	MakeFunction    (0XB02024CC,0XB0202540);
	SetFunctionFlags(0XB02024CC,0);
	SetType(0XB02024CC, "int fputc(int, FILE *);");
	MakeFrame(0XB02024CC, 0X18, 0, 0);
	MakeFunction    (0XB0202540,0XB02025EC);
	SetFunctionFlags(0XB0202540,0);
	SetType(0XB0202540, "void *malloc(size_t);");
	MakeFrame(0XB0202540, 0X10, 0, 0);
	MakeFunction    (0XB02025F8,0XB02026F8);
	SetFunctionFlags(0XB02025F8,0);
	SetType(0XB02025F8, "void free(void *);");
	MakeFrame(0XB02025F8, 0XC, 0, 0);
	MakeFunction    (0XB0202704,0XB0202728);
	SetFunctionFlags(0XB0202704,0);
	SetType(0XB0202704, "size_t strlen(const char *);");
	MakeFunction    (0XB0202728,0XB020274C);
	SetFunctionFlags(0XB0202728,0x1);
	MakeFrame(0XB0202728, 0X4, 0, 0);
	MakeFunction    (0XB0202758,0XB0202768);
	SetFunctionFlags(0XB0202758,0);
	MakeFrame(0XB0202758, 0X4, 0, 0);
	MakeFunction    (0XB0202780,0XB0202BBC);
	SetFunctionFlags(0XB0202780,0);
	MakeFunction    (0XB0202BBC,0XB0202BF0);
	SetFunctionFlags(0XB0202BBC,0x1);
	MakeFrame(0XB0202BBC, 0XC, 0, 0);
	MakeFunction    (0XB0202BF8,0XB0202C18);
	SetFunctionFlags(0XB0202BF8,0);
	SetType(0XB0202BF8, "int fprintf(FILE *, const char *, ...);");
	MakeFrame(0XB0202BF8, 0X10, 0, 0);
	MakeLocal(0XB0202BF8, 0XB0202C18, "[bp-0XC]", "varg_r1");
	MakeLocal(0XB0202BF8, 0XB0202C18, "[bp-0X8]", "varg_r2");
	MakeLocal(0XB0202BF8, 0XB0202C18, "[bp-0X4]", "varg_r3");
	MakeFunction    (0XB0202C18,0XB0202C28);
	SetFunctionFlags(0XB0202C18,0x1);
	MakeFrame(0XB0202C18, 0X4, 0, 0);
	MakeFunction    (0XB0202C2C,0XB0202C54);
	SetFunctionFlags(0XB0202C2C,0);
	MakeFunction    (0XB0202C54,0XB0202C68);
	SetFunctionFlags(0XB0202C54,0);
	MakeFunction    (0XB0202C68,0XB0202CA4);
	SetFunctionFlags(0XB0202C68,0);
	MakeFrame(0XB0202C68, 0X8, 0, 0);
	MakeFunction    (0XB0202CAC,0XB0202DA8);
	SetFunctionFlags(0XB0202CAC,0);
	MakeFrame(0XB0202CAC, 0X28, 0, 0);
	MakeFunction    (0XB0202DAC,0XB0202E64);
	SetFunctionFlags(0XB0202DAC,0);
	MakeFrame(0XB0202DAC, 0X1C, 0, 0);
	MakeFunction    (0XB0202E68,0XB0202E70);
	SetFunctionFlags(0XB0202E68,0);
	MakeFunction    (0XB0202E70,0XB0202F24);
	SetFunctionFlags(0XB0202E70,0);
	MakeFrame(0XB0202E70, 0X24, 0, 0);
	MakeFunction    (0XB0202F28,0XB020306C);
	SetFunctionFlags(0XB0202F28,0);
	MakeFrame(0XB0202F28, 0X34, 0, 0);
	MakeFunction    (0XB0203070,0XB02030C4);
	SetFunctionFlags(0XB0203070,0);
	MakeFrame(0XB0203070, 0XC, 0, 0);
	MakeFunction    (0XB02030C8,0XB02030D0);
	SetFunctionFlags(0XB02030C8,0);
	MakeFunction    (0XB02030D0,0XB020322C);
	SetFunctionFlags(0XB02030D0,0);
	MakeFrame(0XB02030D0, 0X38, 0, 0);
	MakeFunction    (0XB0203230,0XB0203350);
	SetFunctionFlags(0XB0203230,0);
	MakeFrame(0XB0203230, 0X34, 0, 0);
	MakeFunction    (0XB0203354,0XB02033C4);
	SetFunctionFlags(0XB0203354,0);
	MakeFrame(0XB0203354, 0X8, 0, 0);
	MakeFunction    (0XB02033C4,0XB02033D8);
	SetFunctionFlags(0XB02033C4,0);
	MakeFunction    (0XB02033D8,0XB02034C0);
	SetFunctionFlags(0XB02033D8,0);
	MakeFrame(0XB02033D8, 0X1C, 0, 0);
	MakeFunction    (0XB02034C0,0XB0203530);
	SetFunctionFlags(0XB02034C0,0);
	MakeFrame(0XB02034C0, 0XC, 0, 0);
	MakeFunction    (0XB0203530,0XB0203698);
	SetFunctionFlags(0XB0203530,0);
	MakeFrame(0XB0203530, 0X98, 0, 0);
	MakeFunction    (0XB0203A2C,0XB0203B64);
	SetFunctionFlags(0XB0203A2C,0);
	MakeFrame(0XB0203A2C, 0X28, 0, 0);
	MakeFunction    (0XB0203C44,0XB0203C5C);
	SetFunctionFlags(0XB0203C44,0x1);
	MakeFunction    (0XB0203C8C,0XB0203CA4);
	SetFunctionFlags(0XB0203C8C,0x1);
	MakeFunction    (0XB0203CA4,0XB0203CBC);
	SetFunctionFlags(0XB0203CA4,0x1);
	MakeFunction    (0XB0203DA4,0XB0203DDC);
	SetFunctionFlags(0XB0203DA4,0);
	MakeFrame(0XB0203DA4, 0X10, 0, 0);
	MakeFunction    (0XB0203DDC,0XB0203E1C);
	SetFunctionFlags(0XB0203DDC,0);
	MakeFrame(0XB0203DDC, 0X24, 0, 0);
	MakeFunction    (0XB0203E3C,0XB0203E50);
	SetFunctionFlags(0XB0203E3C,0);
	MakeFrame(0XB0203E3C, 0X24, 0, 0);
	MakeFunction    (0XB0203E84,0XB0203EEC);
	SetFunctionFlags(0XB0203E84,0);
	MakeFrame(0XB0203E84, 0X2C, 0, 0);
	MakeFunction    (0XB0203F10,0XB0203F40);
	SetFunctionFlags(0XB0203F10,0);
	MakeFrame(0XB0203F10, 0X28, 0, 0);
	MakeFunction    (0XB0204024,0XB0204038);
	SetFunctionFlags(0XB0204024,0);
	MakeFunction    (0XB0204038,0XB0204054);
	SetFunctionFlags(0XB0204038,0);
	SetType(0XB0204038, "void __cdecl mutex_count_lock(mutex_t);");
	MakeFrame(0XB0204038, 0X8, 0, 0);
	MakeFunction    (0XB0204054,0XB0204088);
	SetFunctionFlags(0XB0204054,0);
	SetType(0XB0204054, "void __cdecl mutex_count_unlock(mutex_t);");
	MakeFunction    (0XB0204088,0XB0204108);
	SetFunctionFlags(0XB0204088,0);
	MakeFrame(0XB0204088, 0XC, 0, 0);
	MakeFunction    (0XB0204108,0XB0204168);
	SetFunctionFlags(0XB0204108,0);
	MakeFrame(0XB0204108, 0X14, 0, 0);
	MakeFunction    (0XB020416C,0XB0204180);
	SetFunctionFlags(0XB020416C,0);
	MakeFrame(0XB020416C, 0X4, 0, 0);
	MakeFunction    (0XB0204180,0XB0204214);
	SetFunctionFlags(0XB0204180,0);
	MakeFrame(0XB0204180, 0X14, 0, 0);
	MakeFunction    (0XB0204214,0XB0204220);
	SetFunctionFlags(0XB0204214,0);
	MakeFunction    (0XB0204224,0XB02042E4);
	SetFunctionFlags(0XB0204224,0);
	MakeFrame(0XB0204224, 0X10, 0, 0);
	MakeFunction    (0XB02042F4,0XB0204308);
	SetFunctionFlags(0XB02042F4,0);
	MakeFunction    (0XB0204308,0XB020437C);
	SetFunctionFlags(0XB0204308,0);
	MakeFrame(0XB0204308, 0X8, 0, 0);
	MakeFunction    (0XB0204394,0XB020439C);
	SetFunctionFlags(0XB0204394,0);
	MakeFunction    (0XB020439C,0XB020449C);
	SetFunctionFlags(0XB020439C,0x10);
	MakeFrame(0XB020439C, 0XC, 24, 0);
	MakeFunction    (0XB02046A0,0XB0204774);
	SetFunctionFlags(0XB02046A0,0);
	MakeFrame(0XB02046A0, 0X1C, 0, 0);
	MakeFunction    (0XB0204A18,0XB0204A64);
	SetFunctionFlags(0XB0204A18,0);
	MakeFrame(0XB0204A18, 0XC, 0, 0);
	MakeFunction    (0XB0204A70,0XB0204A84);
	SetFunctionFlags(0XB0204A70,0);
	MakeFunction    (0XB0204A84,0XB0204ABC);
	SetFunctionFlags(0XB0204A84,0);
	MakeFrame(0XB0204A84, 0X8, 0, 0);
	MakeFunction    (0XB0204AD0,0XB0204B28);
	SetFunctionFlags(0XB0204AD0,0);
	MakeFunction    (0XB0204B28,0XB0204B48);
	SetFunctionFlags(0XB0204B28,0);
	MakeFunction    (0XB0204B48,0XB0204BE4);
	SetFunctionFlags(0XB0204B48,0);
	MakeFrame(0XB0204B48, 0X18, 0, 0);
	MakeFunction    (0XB0204C0C,0XB0204C80);
	SetFunctionFlags(0XB0204C0C,0);
	MakeFrame(0XB0204C0C, 0XC, 0, 0);
	MakeFunction    (0XB0204C80,0XB0204DD4);
	SetFunctionFlags(0XB0204C80,0);
	MakeFrame(0XB0204C80, 0X1C, 0, 0);
	MakeFunction    (0XB0204DF4,0XB0204E7C);
	SetFunctionFlags(0XB0204DF4,0);
	MakeFrame(0XB0204DF4, 0X14, 0, 0);
	MakeFunction    (0XB0204E8C,0XB0204EE4);
	SetFunctionFlags(0XB0204E8C,0);
	MakeFrame(0XB0204E8C, 0X14, 0, 0);
	MakeFunction    (0XB0204EF4,0XB02050C4);
	SetFunctionFlags(0XB0204EF4,0);
	MakeFrame(0XB0204EF4, 0X44, 0, 0);
	MakeFunction    (0XB02050E0,0XB02051A0);
	SetFunctionFlags(0XB02050E0,0);
	MakeFrame(0XB02050E0, 0X18, 0, 0);
	MakeFunction    (0XB02051B4,0XB0205248);
	SetFunctionFlags(0XB02051B4,0);
	MakeFrame(0XB02051B4, 0X1C, 0, 0);
	MakeFunction    (0XB0205250,0XB0205308);
	SetFunctionFlags(0XB0205250,0);
	MakeFrame(0XB0205250, 0X1C, 0, 0);
	MakeFunction    (0XB0205314,0XB0205340);
	SetFunctionFlags(0XB0205314,0);
	MakeFunction    (0XB0205340,0XB0205368);
	SetFunctionFlags(0XB0205340,0);
	MakeFrame(0XB0205340, 0XC, 0, 0);
	MakeFunction    (0XB0205370,0XB0205398);
	SetFunctionFlags(0XB0205370,0);
	MakeFrame(0XB0205370, 0XC, 0, 0);
	MakeFunction    (0XB020539C,0XB0205464);
	SetFunctionFlags(0XB020539C,0);
	MakeFrame(0XB020539C, 0X24, 0, 0);
	MakeFunction    (0XB0205468,0XB0205498);
	SetFunctionFlags(0XB0205468,0);
	MakeFrame(0XB0205468, 0X10, 0, 0);
	MakeFunction    (0XB0205560,0XB02055F8);
	SetFunctionFlags(0XB0205560,0);
	MakeFrame(0XB0205560, 0X18, 0, 0);
	MakeFunction    (0XB02055FC,0XB020569C);
	SetFunctionFlags(0XB02055FC,0);
	MakeFrame(0XB02055FC, 0X1C, 0, 0);
	MakeFunction    (0XB02056A0,0XB0205820);
	SetFunctionFlags(0XB02056A0,0);
	MakeFrame(0XB02056A0, 0X2C, 0, 0);
	MakeFunction    (0XB02058D4,0XB0205968);
	SetFunctionFlags(0XB02058D4,0);
	MakeFrame(0XB02058D4, 0X18, 0, 0);
	MakeFunction    (0XB020596C,0XB0205A00);
	SetFunctionFlags(0XB020596C,0);
	MakeFrame(0XB020596C, 0X18, 0, 0);
	MakeFunction    (0XB0205A04,0XB0205AA0);
	SetFunctionFlags(0XB0205A04,0);
	MakeFrame(0XB0205A04, 0X18, 0, 0);
	MakeFunction    (0XB0205E1C,0XB0205E58);
	SetFunctionFlags(0XB0205E1C,0);
	MakeFrame(0XB0205E1C, 0XC, 0, 0);
	MakeFunction    (0XB0205ED0,0XB0205F08);
	SetFunctionFlags(0XB0205ED0,0);
	MakeFunction    (0XB0205F0C,0XB0205FB0);
	SetFunctionFlags(0XB0205F0C,0);
	MakeFrame(0XB0205F0C, 0X1C, 0, 0);
	MakeFunction    (0XB0206220,0XB02062AC);
	SetFunctionFlags(0XB0206220,0);
	MakeFrame(0XB0206220, 0X14, 0, 0);
	MakeFunction    (0XB0206404,0XB020654C);
	SetFunctionFlags(0XB0206404,0);
	MakeFrame(0XB0206404, 0X3C, 0, 0);
	MakeFunction    (0XB0206650,0XB02066E8);
	SetFunctionFlags(0XB0206650,0);
	MakeFrame(0XB0206650, 0X18, 0, 0);
	MakeFunction    (0XB02066EC,0XB0206784);
	SetFunctionFlags(0XB02066EC,0);
	MakeFrame(0XB02066EC, 0X18, 0, 0);
	MakeFunction    (0XB0206788,0XB02068CC);
	SetFunctionFlags(0XB0206788,0);
	MakeFrame(0XB0206788, 0X34, 0, 0);
	MakeFunction    (0XB02068D0,0XB020692C);
	SetFunctionFlags(0XB02068D0,0);
	MakeFrame(0XB02068D0, 0X10, 0, 0);
	MakeFunction    (0XB020692C,0XB0206990);
	SetFunctionFlags(0XB020692C,0);
	MakeFrame(0XB020692C, 0X10, 0, 0);
	MakeFunction    (0XB0206990,0XB02069C8);
	SetFunctionFlags(0XB0206990,0);
	MakeFrame(0XB0206990, 0X10, 0, 0);
	MakeFunction    (0XB02069C8,0XB0206A60);
	SetFunctionFlags(0XB02069C8,0);
	MakeFrame(0XB02069C8, 0X18, 0, 0);
	MakeFunction    (0XB0206A64,0XB0206B04);
	SetFunctionFlags(0XB0206A64,0);
	MakeFrame(0XB0206A64, 0X18, 0, 0);
	MakeFunction    (0XB0206B54,0XB0206CB0);
	SetFunctionFlags(0XB0206B54,0);
	MakeFrame(0XB0206B54, 0X3C, 0, 0);
	MakeFunction    (0XB0206CB8,0XB0206D74);
	SetFunctionFlags(0XB0206CB8,0);
	MakeFrame(0XB0206CB8, 0X20, 0, 0);
	MakeFunction    (0XB0206D78,0XB0206E6C);
	SetFunctionFlags(0XB0206D78,0);
	MakeFrame(0XB0206D78, 0X4C, 0, 0);
	MakeFunction    (0XB0206E6C,0XB0206E78);
	SetFunctionFlags(0XB0206E6C,0);
	MakeFunction    (0XB0206E7C,0XB0206EE4);
	SetFunctionFlags(0XB0206E7C,0);
	MakeFrame(0XB0206E7C, 0X34, 0, 0);
	MakeFunction    (0XB0206EE8,0XB0206EF8);
	SetFunctionFlags(0XB0206EE8,0);
	MakeFrame(0XB0206EE8, 0X4, 0, 0);
	MakeFunction    (0XB0206EF8,0XB0206F8C);
	SetFunctionFlags(0XB0206EF8,0);
	MakeFrame(0XB0206EF8, 0X18, 0, 0);
	MakeFunction    (0XB0206F90,0XB0207024);
	SetFunctionFlags(0XB0206F90,0);
	MakeFrame(0XB0206F90, 0X18, 0, 0);
	MakeFunction    (0XB0207028,0XB02070B8);
	SetFunctionFlags(0XB0207028,0);
	MakeFrame(0XB0207028, 0X18, 0, 0);
	MakeFunction    (0XB02070BC,0XB0207168);
	SetFunctionFlags(0XB02070BC,0);
	MakeFrame(0XB02070BC, 0X20, 0, 0);
	MakeFunction    (0XB0207178,0XB0207210);
	SetFunctionFlags(0XB0207178,0);
	MakeFrame(0XB0207178, 0X18, 0, 0);
	MakeFunction    (0XB020728C,0XB0207388);
	SetFunctionFlags(0XB020728C,0);
	MakeFrame(0XB020728C, 0X2C, 0, 0);
	MakeFunction    (0XB02076C8,0XB02076F0);
	SetFunctionFlags(0XB02076C8,0);
	MakeFrame(0XB02076C8, 0X8, 0, 0);
	MakeFunction    (0XB02076F0,0XB0207790);
	SetFunctionFlags(0XB02076F0,0);
	MakeFrame(0XB02076F0, 0X10, 0, 0);
	MakeFunction    (0XB02077C8,0XB02077E8);
	SetFunctionFlags(0XB02077C8,0);
	MakeFrame(0XB02077C8, 0X4, 0, 0);
	MakeFunction    (0XB02077E8,0XB02077FC);
	SetFunctionFlags(0XB02077E8,0);
	MakeFunction    (0XB02077FC,0XB0207818);
	SetFunctionFlags(0XB02077FC,0);
	MakeFrame(0XB02077FC, 0X8, 0, 0);
	MakeFunction    (0XB0207818,0XB0207914);
	SetFunctionFlags(0XB0207818,0);
	MakeFrame(0XB0207818, 0X30, 0, 0);
	MakeFunction    (0XB0207914,0XB020791C);
	SetFunctionFlags(0XB0207914,0);
	MakeFunction    (0XB020792C,0XB020794C);
	SetFunctionFlags(0XB020792C,0);
	MakeFrame(0XB020792C, 0X10, 0, 0);
	MakeFunction    (0XB020794C,0XB02079A8);
	SetFunctionFlags(0XB020794C,0);
	MakeFrame(0XB020794C, 0XC, 0, 0);
	MakeFunction    (0XB02079AC,0XB02079D4);
	SetFunctionFlags(0XB02079AC,0);
	SetType(0XB02079AC, "void *calloc(size_t, size_t);");
	MakeFrame(0XB02079AC, 0X8, 0, 0);
	MakeFunction    (0XB02079D4,0XB0207A30);
	SetFunctionFlags(0XB02079D4,0);
	MakeFunction    (0XB0207A30,0XB0207A5C);
	SetFunctionFlags(0XB0207A30,0);
	SetType(0XB0207A30, "char *strcpy(char *, const char *);");
	MakeFunction    (0XB0207AB4,0XB0207AD8);
	SetFunctionFlags(0XB0207AB4,0);
	MakeFrame(0XB0207AB4, 0X8, 0, 0);
	MakeFunction    (0XB0207AD8,0XB0207AE4);
	SetFunctionFlags(0XB0207AD8,0);
	MakeFunction    (0XB0207AE4,0XB0207B20);
	SetFunctionFlags(0XB0207AE4,0);
	MakeFrame(0XB0207AE4, 0X8, 0, 0);
	MakeFunction    (0XB0207B20,0XB0207B68);
	SetFunctionFlags(0XB0207B20,0);
	MakeFrame(0XB0207B20, 0XC, 0, 0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetRegEx(0XB0200000,"T",0,3);
	SetRegEx(0XB0200000,"DS",0X2,3);
	SetRegEx(0XB0200014,"T",0,3);
	SetRegEx(0XB0200028,"T",0,3);
	SetRegEx(0XB0200034,"T",0,3);
	SetRegEx(0XB0200038,"T",0,3);
	SetRegEx(0XB020005C,"T",0,3);
	SetRegEx(0XB0200060,"T",0,3);
	SetRegEx(0XB020008C,"T",0,3);
	SetRegEx(0XB0200094,"T",0,3);
	SetRegEx(0XB0200154,"T",0,3);
	SetRegEx(0XB0200158,"T",0,3);
	SetRegEx(0XB0200160,"T",0,3);
	SetRegEx(0XB020020C,"T",0,3);
	SetRegEx(0XB0200224,"T",0,3);
	SetRegEx(0XB0200248,"T",0,3);
	SetRegEx(0XB020029C,"T",0,3);
	SetRegEx(0XB02002B0,"T",0,3);
	SetRegEx(0XB02002E0,"T",0,3);
	SetRegEx(0XB02002E8,"T",0,3);
	SetRegEx(0XB0200348,"T",0,3);
	SetRegEx(0XB0200370,"T",0,3);
	SetRegEx(0XB020041C,"T",0,3);
	SetRegEx(0XB0200444,"T",0,3);
	SetRegEx(0XB020046C,"T",0,3);
	SetRegEx(0XB0200470,"T",0,3);
	SetRegEx(0XB02004B0,"T",0,3);
	SetRegEx(0XB02004E0,"T",0,3);
	SetRegEx(0XB02004E8,"T",0,3);
	SetRegEx(0XB0200518,"T",0,3);
	SetRegEx(0XB020053C,"T",0,3);
	SetRegEx(0XB0200544,"T",0,3);
	SetRegEx(0XB02005A0,"T",0,3);
	SetRegEx(0XB02005BC,"T",0,3);
	SetRegEx(0XB02005C4,"T",0,3);
	SetRegEx(0XB0200600,"T",0,3);
	SetRegEx(0XB0200614,"T",0,3);
	SetRegEx(0XB0200640,"T",0,3);
	SetRegEx(0XB0200664,"T",0,3);
	SetRegEx(0XB020066C,"T",0,3);
	SetRegEx(0XB020067C,"T",0,3);
	SetRegEx(0XB02006A0,"T",0,3);
	SetRegEx(0XB020074C,"T",0,3);
	SetRegEx(0XB0200750,"T",0,3);
	SetRegEx(0XB0200754,"T",0,3);
	SetRegEx(0XB020077C,"T",0,3);
	SetRegEx(0XB0200788,"T",0,3);
	SetRegEx(0XB0200798,"T",0,3);
	SetRegEx(0XB02007D8,"T",0,3);
	SetRegEx(0XB0200828,"T",0,3);
	SetRegEx(0XB0200838,"T",0,3);
	SetRegEx(0XB020085C,"T",0,3);
	SetRegEx(0XB0200864,"T",0,3);
	SetRegEx(0XB0200868,"T",0,3);
	SetRegEx(0XB0200870,"T",0,3);
	SetRegEx(0XB02008FC,"T",0,3);
	SetRegEx(0XB0200910,"T",0,3);
	SetRegEx(0XB0200948,"T",0,3);
	SetRegEx(0XB020097C,"T",0,3);
	SetRegEx(0XB020098C,"T",0,3);
	SetRegEx(0XB02009C4,"T",0,3);
	SetRegEx(0XB02009F0,"T",0,3);
	SetRegEx(0XB0200A00,"T",0,3);
	SetRegEx(0XB0200A54,"T",0,3);
	SetRegEx(0XB0200A88,"T",0,3);
	SetRegEx(0XB0200AB4,"T",0,3);
	SetRegEx(0XB0200ACC,"T",0,3);
	SetRegEx(0XB0200AF4,"T",0,3);
	SetRegEx(0XB0200B08,"T",0,3);
	SetRegEx(0XB0200B18,"T",0,3);
	SetRegEx(0XB0200B2C,"T",0,3);
	SetRegEx(0XB0200B64,"T",0,3);
	SetRegEx(0XB0200BB4,"T",0,3);
	SetRegEx(0XB0200BEC,"T",0,3);
	SetRegEx(0XB0200C00,"T",0,3);
	SetRegEx(0XB0200C40,"T",0,3);
	SetRegEx(0XB0200C90,"T",0,3);
	SetRegEx(0XB0200CC8,"T",0,3);
	SetRegEx(0XB0200CDC,"T",0,3);
	SetRegEx(0XB0200D1C,"T",0,3);
	SetRegEx(0XB0200D70,"T",0,3);
	SetRegEx(0XB0200DA8,"T",0,3);
	SetRegEx(0XB0200DBC,"T",0,3);
	SetRegEx(0XB0200DFC,"T",0,3);
	SetRegEx(0XB0200E4C,"T",0,3);
	SetRegEx(0XB0200E84,"T",0,3);
	SetRegEx(0XB0200E98,"T",0,3);
	SetRegEx(0XB0200ED8,"T",0,3);
	SetRegEx(0XB0200F2C,"T",0,3);
	SetRegEx(0XB0200F64,"T",0,3);
	SetRegEx(0XB0200F78,"T",0,3);
	SetRegEx(0XB0200FB8,"T",0,3);
	SetRegEx(0XB0201008,"T",0,3);
	SetRegEx(0XB0201040,"T",0,3);
	SetRegEx(0XB0201054,"T",0,3);
	SetRegEx(0XB0201094,"T",0,3);
	SetRegEx(0XB02010E0,"T",0,3);
	SetRegEx(0XB0201118,"T",0,3);
	SetRegEx(0XB020112C,"T",0,3);
	SetRegEx(0XB020116C,"T",0,3);
	SetRegEx(0XB0201178,"T",0,3);
	SetRegEx(0XB0201184,"T",0,3);
	SetRegEx(0XB02011DC,"T",0,3);
	SetRegEx(0XB02011F4,"T",0,3);
	SetRegEx(0XB02012C8,"T",0,3);
	SetRegEx(0XB02012EC,"T",0,3);
	SetRegEx(0XB0201374,"T",0,3);
	SetRegEx(0XB0201388,"T",0,3);
	SetRegEx(0XB02013B8,"T",0,3);
	SetRegEx(0XB02013C8,"T",0,3);
	SetRegEx(0XB02013DC,"T",0,3);
	SetRegEx(0XB0201400,"T",0,3);
	SetRegEx(0XB020140C,"T",0,3);
	SetRegEx(0XB0201420,"T",0,3);
	SetRegEx(0XB020144C,"T",0,3);
	SetRegEx(0XB0201468,"T",0,3);
	SetRegEx(0XB020147C,"T",0,3);
	SetRegEx(0XB0201494,"T",0,3);
	SetRegEx(0XB02014BC,"T",0,3);
	SetRegEx(0XB02014E0,"T",0,3);
	SetRegEx(0XB0201548,"T",0,3);
	SetRegEx(0XB0201568,"T",0,3);
	SetRegEx(0XB0201580,"T",0,3);
	SetRegEx(0XB0201598,"T",0,3);
	SetRegEx(0XB02015D0,"T",0,3);
	SetRegEx(0XB0201690,"T",0,3);
	SetRegEx(0XB0201698,"T",0,3);
	SetRegEx(0XB02016AC,"T",0,3);
	SetRegEx(0XB02016B4,"T",0,3);
	SetRegEx(0XB02016BC,"T",0,3);
	SetRegEx(0XB02016E8,"T",0,3);
	SetRegEx(0XB02016F0,"T",0,3);
	SetRegEx(0XB0201730,"T",0,3);
	SetRegEx(0XB020173C,"T",0,3);
	SetRegEx(0XB0201764,"T",0,3);
	SetRegEx(0XB0201790,"T",0,3);
	SetRegEx(0XB02017AC,"T",0,3);
	SetRegEx(0XB02017B8,"T",0,3);
	SetRegEx(0XB02017C0,"T",0,3);
	SetRegEx(0XB0201848,"T",0,3);
	SetRegEx(0XB02018B8,"T",0,3);
	SetRegEx(0XB02018C0,"T",0,3);
	SetRegEx(0XB0201918,"T",0,3);
	SetRegEx(0XB0201958,"T",0,3);
	SetRegEx(0XB020197C,"T",0,3);
	SetRegEx(0XB0201988,"T",0,3);
	SetRegEx(0XB020198C,"T",0,3);
	SetRegEx(0XB0201994,"T",0,3);
	SetRegEx(0XB02019B0,"T",0,3);
	SetRegEx(0XB02019CC,"T",0,3);
	SetRegEx(0XB0201A08,"T",0,3);
	SetRegEx(0XB0201B84,"T",0,3);
	SetRegEx(0XB0201BBC,"T",0,3);
	SetRegEx(0XB0201BC8,"T",0,3);
	SetRegEx(0XB0201BD8,"T",0,3);
	SetRegEx(0XB0201BF0,"T",0,3);
	SetRegEx(0XB0201C00,"T",0,3);
	SetRegEx(0XB0201C44,"T",0,3);
	SetRegEx(0XB0201C84,"T",0,3);
	SetRegEx(0XB0201CDC,"T",0,3);
	SetRegEx(0XB0201D58,"T",0,3);
	SetRegEx(0XB0201D78,"T",0,3);
	SetRegEx(0XB0201DB8,"T",0,3);
	SetRegEx(0XB0201DC0,"T",0,3);
	SetRegEx(0XB0201DE8,"T",0,3);
	SetRegEx(0XB0201EB4,"T",0,3);
	SetRegEx(0XB0201EBC,"T",0,3);
	SetRegEx(0XB0201EE0,"T",0,3);
	SetRegEx(0XB0201F10,"T",0,3);
	SetRegEx(0XB0201F14,"T",0,3);
	SetRegEx(0XB0201F60,"T",0,3);
	SetRegEx(0XB0201FA4,"T",0,3);
	SetRegEx(0XB0201FC0,"T",0,3);
	SetRegEx(0XB0201FD0,"T",0,3);
	SetRegEx(0XB0201FE4,"T",0,3);
	SetRegEx(0XB020202C,"T",0,3);
	SetRegEx(0XB0202048,"T",0,3);
	SetRegEx(0XB0202060,"T",0,3);
	SetRegEx(0XB02020A8,"T",0,3);
	SetRegEx(0XB02020B8,"T",0,3);
	SetRegEx(0XB02020F8,"T",0,3);
	SetRegEx(0XB020210C,"T",0,3);
	SetRegEx(0XB0202118,"T",0,3);
	SetRegEx(0XB0202170,"T",0,3);
	SetRegEx(0XB0202198,"T",0,3);
	SetRegEx(0XB020225C,"T",0,3);
	SetRegEx(0XB0202264,"T",0,3);
	SetRegEx(0XB0202270,"T",0,3);
	SetRegEx(0XB0202278,"T",0,3);
	SetRegEx(0XB02022CC,"T",0,3);
	SetRegEx(0XB02022D8,"T",0,3);
	SetRegEx(0XB02022E8,"T",0,3);
	SetRegEx(0XB02022F8,"T",0,3);
	SetRegEx(0XB0202338,"T",0,3);
	SetRegEx(0XB0202378,"T",0,3);
	SetRegEx(0XB02023EC,"T",0,3);
	SetRegEx(0XB02023F8,"T",0,3);
	SetRegEx(0XB0202414,"T",0,3);
	SetRegEx(0XB020241C,"T",0,3);
	SetRegEx(0XB02024A0,"T",0,3);
	SetRegEx(0XB02024CC,"T",0,3);
	SetRegEx(0XB0202528,"T",0,3);
	SetRegEx(0XB0202530,"T",0,3);
	SetRegEx(0XB0202540,"T",0,3);
	SetRegEx(0XB0202580,"T",0,3);
	SetRegEx(0XB0202588,"T",0,3);
	SetRegEx(0XB02025C0,"T",0,3);
	SetRegEx(0XB02025F8,"T",0,3);
	SetRegEx(0XB020263C,"T",0,3);
	SetRegEx(0XB0202640,"T",0,3);
	SetRegEx(0XB0202650,"T",0,3);
	SetRegEx(0XB0202658,"T",0,3);
	SetRegEx(0XB0202684,"T",0,3);
	SetRegEx(0XB02026E0,"T",0,3);
	SetRegEx(0XB02026F0,"T",0,3);
	SetRegEx(0XB0202704,"T",0,3);
	SetRegEx(0XB0202714,"T",0,3);
	SetRegEx(0XB0202720,"T",0,3);
	SetRegEx(0XB0202728,"T",0,3);
	SetRegEx(0XB0202748,"T",0,3);
	SetRegEx(0XB0202758,"T",0,3);
	SetRegEx(0XB0202768,"T",0,3);
	SetRegEx(0XB0202778,"T",0,3);
	SetRegEx(0XB0202780,"T",0,3);
	SetRegEx(0XB02027B4,"T",0,3);
	SetRegEx(0XB02027C0,"T",0,3);
	SetRegEx(0XB02027F0,"T",0,3);
	SetRegEx(0XB02028FC,"T",0,3);
	SetRegEx(0XB02029F4,"T",0,3);
	SetRegEx(0XB0202A00,"T",0,3);
	SetRegEx(0XB0202A0C,"T",0,3);
	SetRegEx(0XB0202A18,"T",0,3);
	SetRegEx(0XB0202A24,"T",0,3);
	SetRegEx(0XB0202A30,"T",0,3);
	SetRegEx(0XB0202A3C,"T",0,3);
	SetRegEx(0XB0202A48,"T",0,3);
	SetRegEx(0XB0202A54,"T",0,3);
	SetRegEx(0XB0202A60,"T",0,3);
	SetRegEx(0XB0202A6C,"T",0,3);
	SetRegEx(0XB0202A78,"T",0,3);
	SetRegEx(0XB0202A84,"T",0,3);
	SetRegEx(0XB0202A90,"T",0,3);
	SetRegEx(0XB0202A9C,"T",0,3);
	SetRegEx(0XB0202AA8,"T",0,3);
	SetRegEx(0XB0202AB4,"T",0,3);
	SetRegEx(0XB0202AC0,"T",0,3);
	SetRegEx(0XB0202ACC,"T",0,3);
	SetRegEx(0XB0202AD8,"T",0,3);
	SetRegEx(0XB0202AE4,"T",0,3);
	SetRegEx(0XB0202AF0,"T",0,3);
	SetRegEx(0XB0202AFC,"T",0,3);
	SetRegEx(0XB0202B08,"T",0,3);
	SetRegEx(0XB0202B14,"T",0,3);
	SetRegEx(0XB0202B20,"T",0,3);
	SetRegEx(0XB0202B2C,"T",0,3);
	SetRegEx(0XB0202B38,"T",0,3);
	SetRegEx(0XB0202B44,"T",0,3);
	SetRegEx(0XB0202B50,"T",0,3);
	SetRegEx(0XB0202B5C,"T",0,3);
	SetRegEx(0XB0202B68,"T",0,3);
	SetRegEx(0XB0202B74,"T",0,3);
	SetRegEx(0XB0202B98,"T",0,3);
	SetRegEx(0XB0202BBC,"T",0,3);
	SetRegEx(0XB0202BF8,"T",0,3);
	SetRegEx(0XB0202C18,"T",0,3);
	SetRegEx(0XB0202C24,"T",0,3);
	SetRegEx(0XB0202C2C,"T",0,3);
	SetRegEx(0XB0202C3C,"T",0,3);
	SetRegEx(0XB0202C4C,"T",0,3);
	SetRegEx(0XB0202C54,"T",0,3);
	SetRegEx(0XB0202C68,"T",0,3);
	SetRegEx(0XB0202C74,"T",0,3);
	SetRegEx(0XB0202C7C,"T",0,3);
	SetRegEx(0XB0202CA0,"T",0,3);
	SetRegEx(0XB0202CAC,"T",0,3);
	SetRegEx(0XB0202D9C,"T",0,3);
	SetRegEx(0XB0202DAC,"T",0,3);
	SetRegEx(0XB0202E5C,"T",0,3);
	SetRegEx(0XB0202E68,"T",0,3);
	SetRegEx(0XB0202E70,"T",0,3);
	SetRegEx(0XB0202F18,"T",0,3);
	SetRegEx(0XB0202F28,"T",0,3);
	SetRegEx(0XB0203064,"T",0,3);
	SetRegEx(0XB0203070,"T",0,3);
	SetRegEx(0XB02030B8,"T",0,3);
	SetRegEx(0XB02030C8,"T",0,3);
	SetRegEx(0XB02030D0,"T",0,3);
	SetRegEx(0XB0203224,"T",0,3);
	SetRegEx(0XB0203230,"T",0,3);
	SetRegEx(0XB0203348,"T",0,3);
	SetRegEx(0XB0203354,"T",0,3);
	SetRegEx(0XB0203374,"T",0,3);
	SetRegEx(0XB0203384,"T",0,3);
	SetRegEx(0XB02033B0,"T",0,3);
	SetRegEx(0XB02033C4,"T",0,3);
	SetRegEx(0XB02033D8,"T",0,3);
	SetRegEx(0XB0203458,"T",0,3);
	SetRegEx(0XB0203464,"T",0,3);
	SetRegEx(0XB0203468,"T",0,3);
	SetRegEx(0XB02034A0,"T",0,3);
	SetRegEx(0XB02034B8,"T",0,3);
	SetRegEx(0XB02034C0,"T",0,3);
	SetRegEx(0XB02034D8,"T",0,3);
	SetRegEx(0XB0203510,"T",0,3);
	SetRegEx(0XB0203518,"T",0,3);
	SetRegEx(0XB0203520,"T",0,3);
	SetRegEx(0XB0203530,"T",0,3);
	SetRegEx(0XB0203550,"T",0,3);
	SetRegEx(0XB020356C,"T",0,3);
	SetRegEx(0XB02035E8,"T",0,3);
	SetRegEx(0XB02035FC,"T",0,3);
	SetRegEx(0XB020363C,"T",0,3);
	SetRegEx(0XB0203644,"T",0,3);
	SetRegEx(0XB0203664,"T",0,3);
	SetRegEx(0XB020366C,"T",0,3);
	SetRegEx(0XB0203690,"T",0,3);
	SetRegEx(0XB0203698,"T",0,3);
	SetRegEx(0XB02036BC,"T",0,3);
	SetRegEx(0XB02036E8,"T",0,3);
	SetRegEx(0XB02036FC,"T",0,3);
	SetRegEx(0XB020371C,"T",0,3);
	SetRegEx(0XB0203798,"T",0,3);
	SetRegEx(0XB02037AC,"T",0,3);
	SetRegEx(0XB02037EC,"T",0,3);
	SetRegEx(0XB02037F4,"T",0,3);
	SetRegEx(0XB02037FC,"T",0,3);
	SetRegEx(0XB0203808,"T",0,3);
	SetRegEx(0XB0203824,"T",0,3);
	SetRegEx(0XB020382C,"T",0,3);
	SetRegEx(0XB020383C,"T",0,3);
	SetRegEx(0XB0203858,"T",0,3);
	SetRegEx(0XB020389C,"T",0,3);
	SetRegEx(0XB02038B8,"T",0,3);
	SetRegEx(0XB02038C8,"T",0,3);
	SetRegEx(0XB02038D4,"T",0,3);
	SetRegEx(0XB02038F0,"T",0,3);
	SetRegEx(0XB0203908,"T",0,3);
	SetRegEx(0XB0203910,"T",0,3);
	SetRegEx(0XB020391C,"T",0,3);
	SetRegEx(0XB0203964,"T",0,3);
	SetRegEx(0XB020396C,"T",0,3);
	SetRegEx(0XB020398C,"T",0,3);
	SetRegEx(0XB0203994,"T",0,3);
	SetRegEx(0XB02039CC,"T",0,3);
	SetRegEx(0XB02039D8,"T",0,3);
	SetRegEx(0XB02039E8,"T",0,3);
	SetRegEx(0XB02039F4,"T",0,3);
	SetRegEx(0XB0203A14,"T",0,3);
	SetRegEx(0XB0203A1C,"T",0,3);
	SetRegEx(0XB0203A2C,"T",0,3);
	SetRegEx(0XB0203A64,"T",0,3);
	SetRegEx(0XB0203A78,"T",0,3);
	SetRegEx(0XB0203A84,"T",0,3);
	SetRegEx(0XB0203A94,"T",0,3);
	SetRegEx(0XB0203AA0,"T",0,3);
	SetRegEx(0XB0203AFC,"T",0,3);
	SetRegEx(0XB0203B14,"T",0,3);
	SetRegEx(0XB0203B54,"T",0,3);
	SetRegEx(0XB0203B5C,"T",0,3);
	SetRegEx(0XB0203B64,"T",0,3);
	SetRegEx(0XB0203B98,"T",0,3);
	SetRegEx(0XB0203BF0,"T",0,3);
	SetRegEx(0XB0203BF8,"T",0,3);
	SetRegEx(0XB0203C3C,"T",0,3);
	SetRegEx(0XB0203C44,"T",0,3);
	SetRegEx(0XB0203C48,"T",0,3);
	SetRegEx(0XB0203C5C,"T",0,3);
	SetRegEx(0XB0203C60,"T",0,3);
	SetRegEx(0XB0203C74,"T",0,3);
	SetRegEx(0XB0203C78,"T",0,3);
	SetRegEx(0XB0203C8C,"T",0,3);
	SetRegEx(0XB0203C90,"T",0,3);
	SetRegEx(0XB0203CA4,"T",0,3);
	SetRegEx(0XB0203CA8,"T",0,3);
	SetRegEx(0XB0203CBC,"T",0,3);
	SetRegEx(0XB0203CC0,"T",0,3);
	SetRegEx(0XB0203CD4,"T",0,3);
	SetRegEx(0XB0203CD8,"T",0,3);
	SetRegEx(0XB0203CEC,"T",0,3);
	SetRegEx(0XB0203CF0,"T",0,3);
	SetRegEx(0XB0203D04,"T",0,3);
	SetRegEx(0XB0203D08,"T",0,3);
	SetRegEx(0XB0203D1C,"T",0,3);
	SetRegEx(0XB0203D20,"T",0,3);
	SetRegEx(0XB0203D34,"T",0,3);
	SetRegEx(0XB0203D38,"T",0,3);
	SetRegEx(0XB0203D4C,"T",0,3);
	SetRegEx(0XB0203D50,"T",0,3);
	SetRegEx(0XB0203D64,"T",0,3);
	SetRegEx(0XB0203D68,"T",0,3);
	SetRegEx(0XB0203D7C,"T",0,3);
	SetRegEx(0XB0203D90,"T",0,3);
	SetRegEx(0XB0203DA4,"T",0,3);
	SetRegEx(0XB0203DB4,"T",0,3);
	SetRegEx(0XB0203DDC,"T",0,3);
	SetRegEx(0XB0203DEC,"T",0,3);
	SetRegEx(0XB0203E1C,"T",0,3);
	SetRegEx(0XB0203E2C,"T",0,3);
	SetRegEx(0XB0203E3C,"T",0,3);
	SetRegEx(0XB0203E40,"T",0,3);
	SetRegEx(0XB0203E50,"T",0,3);
	SetRegEx(0XB0203E5C,"T",0,3);
	SetRegEx(0XB0203E84,"T",0,3);
	SetRegEx(0XB0203EAC,"T",0,3);
	SetRegEx(0XB0203EEC,"T",0,3);
	SetRegEx(0XB0203EFC,"T",0,3);
	SetRegEx(0XB0203F10,"T",0,3);
	SetRegEx(0XB0203F24,"T",0,3);
	SetRegEx(0XB0203F40,"T",0,3);
	SetRegEx(0XB0203F70,"T",0,3);
	SetRegEx(0XB0203FB4,"T",0,3);
	SetRegEx(0XB0203FB8,"T",0,3);
	SetRegEx(0XB0203FC8,"T",0,3);
	SetRegEx(0XB0203FCC,"T",0,3);
	SetRegEx(0XB0203FE8,"T",0,3);
	SetRegEx(0XB0203FEC,"T",0,3);
	SetRegEx(0XB0203FFC,"T",0,3);
	SetRegEx(0XB0204000,"T",0,3);
	SetRegEx(0XB0204010,"T",0,3);
	SetRegEx(0XB0204014,"T",0,3);
	SetRegEx(0XB0204024,"T",0,3);
	SetRegEx(0XB0204038,"T",0,3);
	SetRegEx(0XB0204054,"T",0,3);
	SetRegEx(0XB0204088,"T",0,3);
	SetRegEx(0XB02040A0,"T",0,3);
	SetRegEx(0XB02040D4,"T",0,3);
	SetRegEx(0XB02040E8,"T",0,3);
	SetRegEx(0XB02040FC,"T",0,3);
	SetRegEx(0XB0204108,"T",0,3);
	SetRegEx(0XB0204120,"T",0,3);
	SetRegEx(0XB020412C,"T",0,3);
	SetRegEx(0XB020414C,"T",0,3);
	SetRegEx(0XB0204158,"T",0,3);
	SetRegEx(0XB020416C,"T",0,3);
	SetRegEx(0XB0204180,"T",0,3);
	SetRegEx(0XB0204198,"T",0,3);
	SetRegEx(0XB02041A0,"T",0,3);
	SetRegEx(0XB02041C4,"T",0,3);
	SetRegEx(0XB02041F8,"T",0,3);
	SetRegEx(0XB0204214,"T",0,3);
	SetRegEx(0XB0204224,"T",0,3);
	SetRegEx(0XB0204258,"T",0,3);
	SetRegEx(0XB0204260,"T",0,3);
	SetRegEx(0XB02042C4,"T",0,3);
	SetRegEx(0XB02042DC,"T",0,3);
	SetRegEx(0XB02042F4,"T",0,3);
	SetRegEx(0XB0204308,"T",0,3);
	SetRegEx(0XB020433C,"T",0,3);
	SetRegEx(0XB0204358,"T",0,3);
	SetRegEx(0XB020436C,"T",0,3);
	SetRegEx(0XB0204370,"T",0,3);
	SetRegEx(0XB0204378,"T",0,3);
	SetRegEx(0XB0204394,"T",0,3);
	SetRegEx(0XB020439C,"T",0,3);
	SetRegEx(0XB02043EC,"T",0,3);
	SetRegEx(0XB02043FC,"T",0,3);
	SetRegEx(0XB020449C,"T",0,3);
	SetRegEx(0XB02044EC,"T",0,3);
	SetRegEx(0XB02044FC,"T",0,3);
	SetRegEx(0XB02045A0,"T",0,3);
	SetRegEx(0XB02045EC,"T",0,3);
	SetRegEx(0XB02045FC,"T",0,3);
	SetRegEx(0XB02046A0,"T",0,3);
	SetRegEx(0XB02046E0,"T",0,3);
	SetRegEx(0XB02046F0,"T",0,3);
	SetRegEx(0XB0204774,"T",0,3);
	SetRegEx(0XB0204828,"T",0,3);
	SetRegEx(0XB0204838,"T",0,3);
	SetRegEx(0XB02048E8,"T",0,3);
	SetRegEx(0XB02048EC,"T",0,3);
	SetRegEx(0XB02048F4,"T",0,3);
	SetRegEx(0XB0204918,"T",0,3);
	SetRegEx(0XB0204928,"T",0,3);
	SetRegEx(0XB02049E0,"T",0,3);
	SetRegEx(0XB02049FC,"T",0,3);
	SetRegEx(0XB0204A18,"T",0,3);
	SetRegEx(0XB0204A70,"T",0,3);
	SetRegEx(0XB0204A84,"T",0,3);
	SetRegEx(0XB0204AAC,"T",0,3);
	SetRegEx(0XB0204AB8,"T",0,3);
	SetRegEx(0XB0204AD0,"T",0,3);
	SetRegEx(0XB0204AFC,"T",0,3);
	SetRegEx(0XB0204B08,"T",0,3);
	SetRegEx(0XB0204B24,"T",0,3);
	SetRegEx(0XB0204B28,"T",0,3);
	SetRegEx(0XB0204B48,"T",0,3);
	SetRegEx(0XB0204BE0,"T",0,3);
	SetRegEx(0XB0204BE4,"T",0,3);
	SetRegEx(0XB0204C0C,"T",0,3);
	SetRegEx(0XB0204C80,"T",0,3);
	SetRegEx(0XB0204CE0,"T",0,3);
	SetRegEx(0XB0204CF8,"T",0,3);
	SetRegEx(0XB0204D14,"T",0,3);
	SetRegEx(0XB0204D20,"T",0,3);
	SetRegEx(0XB0204D54,"T",0,3);
	SetRegEx(0XB0204D5C,"T",0,3);
	SetRegEx(0XB0204D9C,"T",0,3);
	SetRegEx(0XB0204DA4,"T",0,3);
	SetRegEx(0XB0204DC0,"T",0,3);
	SetRegEx(0XB0204DF4,"T",0,3);
	SetRegEx(0XB0204E8C,"T",0,3);
	SetRegEx(0XB0204EBC,"T",0,3);
	SetRegEx(0XB0204EDC,"T",0,3);
	SetRegEx(0XB0204EF4,"T",0,3);
	SetRegEx(0XB0204F1C,"T",0,3);
	SetRegEx(0XB0204F2C,"T",0,3);
	SetRegEx(0XB0204F60,"T",0,3);
	SetRegEx(0XB0204F68,"T",0,3);
	SetRegEx(0XB0204F74,"T",0,3);
	SetRegEx(0XB0204F94,"T",0,3);
	SetRegEx(0XB0204FD8,"T",0,3);
	SetRegEx(0XB0204FE0,"T",0,3);
	SetRegEx(0XB0205030,"T",0,3);
	SetRegEx(0XB02050E0,"T",0,3);
	SetRegEx(0XB0205110,"T",0,3);
	SetRegEx(0XB0205124,"T",0,3);
	SetRegEx(0XB020513C,"T",0,3);
	SetRegEx(0XB0205150,"T",0,3);
	SetRegEx(0XB0205184,"T",0,3);
	SetRegEx(0XB02051B4,"T",0,3);
	SetRegEx(0XB02051F8,"T",0,3);
	SetRegEx(0XB0205210,"T",0,3);
	SetRegEx(0XB020521C,"T",0,3);
	SetRegEx(0XB0205250,"T",0,3);
	SetRegEx(0XB0205288,"T",0,3);
	SetRegEx(0XB020529C,"T",0,3);
	SetRegEx(0XB02052CC,"T",0,3);
	SetRegEx(0XB02052E4,"T",0,3);
	SetRegEx(0XB02052F8,"T",0,3);
	SetRegEx(0XB0205300,"T",0,3);
	SetRegEx(0XB0205314,"T",0,3);
	SetRegEx(0XB0205334,"T",0,3);
	SetRegEx(0XB0205340,"T",0,3);
	SetRegEx(0XB0205370,"T",0,3);
	SetRegEx(0XB020539C,"T",0,3);
	SetRegEx(0XB0205468,"T",0,3);
	SetRegEx(0XB0205498,"T",0,3);
	SetRegEx(0XB02054C8,"T",0,3);
	SetRegEx(0XB02054F8,"T",0,3);
	SetRegEx(0XB020552C,"T",0,3);
	SetRegEx(0XB0205560,"T",0,3);
	SetRegEx(0XB02055FC,"T",0,3);
	SetRegEx(0XB02056A0,"T",0,3);
	SetRegEx(0XB02056D8,"T",0,3);
	SetRegEx(0XB0205708,"T",0,3);
	SetRegEx(0XB02057B0,"T",0,3);
	SetRegEx(0XB02057C8,"T",0,3);
	SetRegEx(0XB02057D8,"T",0,3);
	SetRegEx(0XB02057F4,"T",0,3);
	SetRegEx(0XB020583C,"T",0,3);
	SetRegEx(0XB02058D4,"T",0,3);
	SetRegEx(0XB020596C,"T",0,3);
	SetRegEx(0XB0205A04,"T",0,3);
	SetRegEx(0XB0205AA4,"T",0,3);
	SetRegEx(0XB0205B40,"T",0,3);
	SetRegEx(0XB0205B6C,"T",0,3);
	SetRegEx(0XB0205B94,"T",0,3);
	SetRegEx(0XB0205BB8,"T",0,3);
	SetRegEx(0XB0205BF0,"T",0,3);
	SetRegEx(0XB0205C74,"T",0,3);
	SetRegEx(0XB0205C80,"T",0,3);
	SetRegEx(0XB0205C84,"T",0,3);
	SetRegEx(0XB0205CA4,"T",0,3);
	SetRegEx(0XB0205CBC,"T",0,3);
	SetRegEx(0XB0205CD4,"T",0,3);
	SetRegEx(0XB0205CD8,"T",0,3);
	SetRegEx(0XB0205CE0,"T",0,3);
	SetRegEx(0XB0205D34,"T",0,3);
	SetRegEx(0XB0205D40,"T",0,3);
	SetRegEx(0XB0205D44,"T",0,3);
	SetRegEx(0XB0205D7C,"T",0,3);
	SetRegEx(0XB0205D84,"T",0,3);
	SetRegEx(0XB0205DB4,"T",0,3);
	SetRegEx(0XB0205DD0,"T",0,3);
	SetRegEx(0XB0205DEC,"T",0,3);
	SetRegEx(0XB0205E1C,"T",0,3);
	SetRegEx(0XB0205E50,"T",0,3);
	SetRegEx(0XB0205E58,"T",0,3);
	SetRegEx(0XB0205EB8,"T",0,3);
	SetRegEx(0XB0205ED0,"T",0,3);
	SetRegEx(0XB0205EE4,"T",0,3);
	SetRegEx(0XB0205EF8,"T",0,3);
	SetRegEx(0XB0205F00,"T",0,3);
	SetRegEx(0XB0205F0C,"T",0,3);
	SetRegEx(0XB0205F30,"T",0,3);
	SetRegEx(0XB0205F3C,"T",0,3);
	SetRegEx(0XB0205FB8,"T",0,3);
	SetRegEx(0XB0206054,"T",0,3);
	SetRegEx(0XB02060EC,"T",0,3);
	SetRegEx(0XB0206188,"T",0,3);
	SetRegEx(0XB0206220,"T",0,3);
	SetRegEx(0XB02062B0,"T",0,3);
	SetRegEx(0XB020635C,"T",0,3);
	SetRegEx(0XB0206404,"T",0,3);
	SetRegEx(0XB0206460,"T",0,3);
	SetRegEx(0XB0206474,"T",0,3);
	SetRegEx(0XB0206544,"T",0,3);
	SetRegEx(0XB0206558,"T",0,3);
	SetRegEx(0XB0206578,"T",0,3);
	SetRegEx(0XB0206598,"T",0,3);
	SetRegEx(0XB02065B8,"T",0,3);
	SetRegEx(0XB0206650,"T",0,3);
	SetRegEx(0XB02066EC,"T",0,3);
	SetRegEx(0XB0206788,"T",0,3);
	SetRegEx(0XB02068C0,"T",0,3);
	SetRegEx(0XB02068D0,"T",0,3);
	SetRegEx(0XB0206914,"T",0,3);
	SetRegEx(0XB0206918,"T",0,3);
	SetRegEx(0XB0206920,"T",0,3);
	SetRegEx(0XB020692C,"T",0,3);
	SetRegEx(0XB0206978,"T",0,3);
	SetRegEx(0XB020697C,"T",0,3);
	SetRegEx(0XB0206988,"T",0,3);
	SetRegEx(0XB0206990,"T",0,3);
	SetRegEx(0XB02069C8,"T",0,3);
	SetRegEx(0XB0206A64,"T",0,3);
	SetRegEx(0XB0206A8C,"T",0,3);
	SetRegEx(0XB0206AAC,"T",0,3);
	SetRegEx(0XB0206AB8,"T",0,3);
	SetRegEx(0XB0206AF0,"T",0,3);
	SetRegEx(0XB0206AF8,"T",0,3);
	SetRegEx(0XB0206B14,"T",0,3);
	SetRegEx(0XB0206B28,"T",0,3);
	SetRegEx(0XB0206B54,"T",0,3);
	SetRegEx(0XB0206BA0,"T",0,3);
	SetRegEx(0XB0206BAC,"T",0,3);
	SetRegEx(0XB0206CA4,"T",0,3);
	SetRegEx(0XB0206CA8,"T",0,3);
	SetRegEx(0XB0206CB8,"T",0,3);
	SetRegEx(0XB0206CD8,"T",0,3);
	SetRegEx(0XB0206D64,"T",0,3);
	SetRegEx(0XB0206D78,"T",0,3);
	SetRegEx(0XB0206D9C,"T",0,3);
	SetRegEx(0XB0206E5C,"T",0,3);
	SetRegEx(0XB0206E6C,"T",0,3);
	SetRegEx(0XB0206E7C,"T",0,3);
	SetRegEx(0XB0206EE8,"T",0,3);
	SetRegEx(0XB0206EF8,"T",0,3);
	SetRegEx(0XB0206F90,"T",0,3);
	SetRegEx(0XB0207028,"T",0,3);
	SetRegEx(0XB02070BC,"T",0,3);
	SetRegEx(0XB020716C,"T",0,3);
	SetRegEx(0XB0207178,"T",0,3);
	SetRegEx(0XB0207214,"T",0,3);
	SetRegEx(0XB0207244,"T",0,3);
	SetRegEx(0XB0207250,"T",0,3);
	SetRegEx(0XB020728C,"T",0,3);
	SetRegEx(0XB020738C,"T",0,3);
	SetRegEx(0XB0207468,"T",0,3);
	SetRegEx(0XB0207540,"T",0,3);
	SetRegEx(0XB0207618,"T",0,3);
	SetRegEx(0XB0207628,"T",0,3);
	SetRegEx(0XB02076C8,"T",0,3);
	SetRegEx(0XB02076F0,"T",0,3);
	SetRegEx(0XB0207718,"T",0,3);
	SetRegEx(0XB020773C,"T",0,3);
	SetRegEx(0XB0207764,"T",0,3);
	SetRegEx(0XB0207778,"T",0,3);
	SetRegEx(0XB0207780,"T",0,3);
	SetRegEx(0XB0207788,"T",0,3);
	SetRegEx(0XB02077C8,"T",0,3);
	SetRegEx(0XB02077E8,"T",0,3);
	SetRegEx(0XB02077FC,"T",0,3);
	SetRegEx(0XB0207818,"T",0,3);
	SetRegEx(0XB0207858,"T",0,3);
	SetRegEx(0XB0207888,"T",0,3);
	SetRegEx(0XB0207890,"T",0,3);
	SetRegEx(0XB02078BC,"T",0,3);
	SetRegEx(0XB02078E0,"T",0,3);
	SetRegEx(0XB0207900,"T",0,3);
	SetRegEx(0XB0207914,"T",0,3);
	SetRegEx(0XB020791C,"T",0,3);
	SetRegEx(0XB020792C,"T",0,3);
	SetRegEx(0XB020794C,"T",0,3);
	SetRegEx(0XB02079AC,"T",0,3);
	SetRegEx(0XB02079D4,"T",0,3);
	SetRegEx(0XB02079E4,"T",0,3);
	SetRegEx(0XB02079F0,"T",0,3);
	SetRegEx(0XB0207A04,"T",0,3);
	SetRegEx(0XB0207A1C,"T",0,3);
	SetRegEx(0XB0207A30,"T",0,3);
	SetRegEx(0XB0207A44,"T",0,3);
	SetRegEx(0XB0207A5C,"T",0,3);
	SetRegEx(0XB0207A80,"T",0,3);
	SetRegEx(0XB0207AB4,"T",0,3);
	SetRegEx(0XB0207AD8,"T",0,3);
	SetRegEx(0XB0207AE4,"T",0,3);
	SetRegEx(0XB0207B20,"T",0,3);
	SetRegEx(0XB0207B60,"T",0,3);
	SetRegEx(0XB0240000,"T",0,3);
	SetRegEx(0XB0240000,"DS",0X2,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
        EndTypeUpdating(UTP_STRUCT);
}

// End of file.
