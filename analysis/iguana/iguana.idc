
#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, INFFL_LOADIDC|GetCharPrm(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, ~INFFL_LOADIDC&GetCharPrm(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("ARM");
	SetCharPrm(INF_COMPILER, 6);
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
	LoadTil("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0);
	SetSelector(0X2,0);
	;
	SegCreate(0XB0000000,0XB000E3FF,0X1,1,1,2);
	SegRename(0XB0000000,"LOAD");
	SegClass (0XB0000000,"CODE");
	SegDefReg(0xB0000000,"T",0x0);
	SegDefReg(0xB0000000,"DS",0x2);
	SetSegmentType(0XB0000000,2);
	SegCreate(0XB0040000,0XB0057000,0X2,1,1,2);
	SegRename(0XB0040000,"LOAD");
	SegClass (0XB0040000,"DATA");
	SegDefReg(0xB0040000,"T",0x0);
	SegDefReg(0xB0040000,"DS",0x2);
	SetSegmentType(0XB0040000,3);
	LowVoids(0xB0000000);
	HighVoids(0xB0057000);
}

static Enums_0(id) {

	id = AddEnum(-1,"syscalls",0x1100000);
	AddConstEx(id,"SYSCALL_ipc",	0,	-1);
	AddConstEx(id,"SYSCALL_thread_switch",	0X4,	-1);
	AddConstEx(id,"SYSCALL_thread_control",	0X8,	-1);
	AddConstEx(id,"SYSCALL_exchange_registers",	0XC,	-1);
	AddConstEx(id,"SYSCALL_schedule",	0X10,	-1);
	AddConstEx(id,"SYSCALL_map_control",	0X14,	-1);
	AddConstEx(id,"SYSCALL_space_control",	0X18,	-1);
	AddConstEx(id,"SYSCALL_processor_control",	0X1C,	-1);
	AddConstEx(id,"SYSCALL_cache_control",	0X20,	-1);
	AddConstEx(id,"SYSCALL_ipc_control",	0X24,	-1);
	AddConstEx(id,"SYSCALL_lipc",	0X28,	-1);
	AddConstEx(id,"SWINUM_ipc",	0X1400,	-1);
	AddConstEx(id,"SWINUM_thread_switch",	0X1404,	-1);
	AddConstEx(id,"SWINUM_thread_control",	0X1408,	-1);
	AddConstEx(id,"SWINUM_exchange_registers",	0X140C,	-1);
	AddConstEx(id,"SWINUM_schedule",	0X1410,	-1);
	AddConstEx(id,"SWINUM_map_control",	0X1414,	-1);
	AddConstEx(id,"SWINUM_space_control",	0X1418,	-1);
	AddConstEx(id,"SWINUM_processor_control",	0X141C,	-1);
	AddConstEx(id,"SWINUM_cache_control",	0X1420,	-1);
	AddConstEx(id,"SWINUM_ipc_control",	0X1424,	-1);
	AddConstEx(id,"SWINUM_lipc",	0X1428,	-1);
	AddConstEx(id,"SYSNUM_ipc",	0XFFFFFF00,	-1);
	AddConstEx(id,"SYSNUM_thread_switch",	0XFFFFFF04,	-1);
	AddConstEx(id,"SYSNUM_thread_control",	0XFFFFFF08,	-1);
	AddConstEx(id,"SYSNUM_exchange_registers",	0XFFFFFF0C,	-1);
	AddConstEx(id,"SYSNUM_schedule",	0XFFFFFF10,	-1);
	AddConstEx(id,"SYSNUM_map_control",	0XFFFFFF14,	-1);
	AddConstEx(id,"SYSNUM_space_control",	0XFFFFFF18,	-1);
	AddConstEx(id,"SYSNUM_processor_control",	0XFFFFFF1C,	-1);
	AddConstEx(id,"SYSNUM_cache_control",	0XFFFFFF20,	-1);
	AddConstEx(id,"SYSNUM_ipc_control",	0XFFFFFF24,	-1);
	AddConstEx(id,"SYSNUM_lipc",	0XFFFFFF28,	-1);
	id = AddEnum(-1,"trapenum",0x1100000);
	AddConstEx(id,"USER_UTCB_REF",	0XFF000FF0,	-1);
	AddConstEx(id,"L4_TRAP_KPUTC",	0XFFFFFFA0,	-1);
	AddConstEx(id,"L4_TRAP_KGETC",	0XFFFFFFA4,	-1);
	AddConstEx(id,"L4_TRAP_KGETC_NB",	0XFFFFFFA8,	-1);
	AddConstEx(id,"L4_TRAP_KDEBUG",	0XFFFFFFAC,	-1);
	AddConstEx(id,"L4_TRAP_GETUTCB",	0XFFFFFFB0,	-1);
	AddConstEx(id,"L4_TRAP_KIP",	0XFFFFFFB4,	-1);
	AddConstEx(id,"L4_TRAP_KSET_THRD_NAME",	0XFFFFFFB8,	-1);
	AddConstEx(id,"L4_TRAP_GETCOUNTER",	0XFFFFFFBC,	-1);
	AddConstEx(id,"L4_TRAP_GETNUMTPS",	0XFFFFFFC0,	-1);
	AddConstEx(id,"L4_TRAP_GETTPNAME",	0XFFFFFFC4,	-1);
	AddConstEx(id,"L4_TRAP_TCCTRL",	0XFFFFFFC8,	-1);
	AddConstEx(id,"L4_TRAP_PMU_RESET",	0XFFFFFFCC,	-1);
	AddConstEx(id,"L4_TRAP_PMU_STOP",	0XFFFFFFD0,	-1);
	AddConstEx(id,"L4_TRAP_PMU_READ",	0XFFFFFFD4,	-1);
	AddConstEx(id,"L4_TRAP_PMU_CONFIG",	0XFFFFFFD8,	-1);
	AddConstEx(id,"L4_TRAP_GETTICK",	0XFFFFFFE0,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        BeginTypeUpdating(UTP_ENUM);
	id = Enums_0(id);
        EndTypeUpdating(UTP_ENUM);
}

static Structures_0(id) {
        auto mid;

	id = AddStrucEx(-1,"mutex",0);
	id = AddStrucEx(-1,"__file",0);
	id = AddStrucEx(-1,"thrTabEnt",0);
	id = AddStrucEx(-1,"something",0);
	id = AddStrucEx(-1,"btree",0);
	id = AddStrucEx(-1,"ll",0);
	
	id = GetStrucIdByName("mutex");
	mid = AddStrucMember(id,"holder",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"needed",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"count",	0X8,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("__file");
	mid = AddStrucMember(id,"handle",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"read_fn",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"write_fn",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"close_fn",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"eof_fn",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"buffering_mode",	0X14,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"buffer",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"unget_pos",	0X1C,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"current_pos",	0X20,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"mutex",	0X24,	0x60000400,	GetStrucIdByName("mutex"),	12);
	mid = AddStrucMember(id,"eof",	0X30,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"error",	0X34,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"unget_stack",	0X38,	0x000400,	-1,	10);
	mid = AddStrucMember(id,"_padding",	0X42,	0x000400,	-1,	2);
	
	id = GetStrucIdByName("thrTabEnt");
	mid = AddStrucMember(id,"id",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"str",	0X4,	0x000400,	-1,	40);
	
	id = GetStrucIdByName("something");
	mid = AddStrucMember(id,"field_0",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_4",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_8",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"field_C",	0XC,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("btree");
	mid = AddStrucMember(id,"depth",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"root",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"pool",	0X8,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("ll");
	mid = AddStrucMember(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"data",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        BeginTypeUpdating(UTP_STRUCT);	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0XB0000000,	0,	"; File Name   : C:\\Documents and Settings\\Administrator\\Desktop\\iguana\\iguana");
	ExtLinA		(0XB0000000,	1,	"; Format      : ELF for ARM (Executable)");
	ExtLinA		(0XB0000000,	2,	"; Imagebase   : B0000000");
	ExtLinA		(0XB0000000,	3,	"; ");
	ExtLinA		(0XB0000000,	4,	"; Options     : EF_ARM_SOFT_FLOAT");
	ExtLinA		(0XB0000000,	5,	"; ");
	MakeCode	(0XB0000000);
	MakeName	(0XB0000000,	"start");
	MakeCode	(x=0XB0000008);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000000C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000010);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000014);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000038);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000003C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000004C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB0000050);
	MakeDword	(x=0XB0000054);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0000058);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000005C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000070);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00000A8);
	MakeDword	(x=0XB00000B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00000B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB00000B8);
	MakeCode	(x=0XB00000BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00000CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00000EC);
	OpStkvar	(x,	1);
	MakeCode	(0XB00000F0);
	MakeCode	(0XB0000184);
	MakeComm	(0XB00001FC,	"env");
	MakeCode	(0XB00001FC);
	MakeName	(0XB00001FC,	"_bi_execute");
	MakeCode	(x=0XB0000204);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000020C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000224);
	OpOff		(x,	1,	0XB0041008);
	OpOff		(x,	129,	0XB0041008);
	MakeCode	(x=0XB0000228);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000022C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000234);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000238);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000023C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0000244,	"jumptable B0000270 default case");
	MakeRptCmt	(0XB0000250,	"jumptable B0000270 case 6");
	MakeCode	(x=0XB0000250);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000258);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000025C,	"jumptable B0000270 cases 4,5,7-15");
	MakeComm	(0XB000026C,	"switch 16 cases ");
	MakeComm	(0XB0000270,	"switch jump");
	MakeComm	(0XB0000278,	"jump table for switch statement");
	MakeDword	(x=0XB0000278);
	MakeArray	(x,	0X10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB00002B8,	"jumptable B0000270 case 3");
	MakeCode	(0XB00002B8);
	MakeRptCmt	(0XB00002C8,	"jumptable B0000270 case 2");
	MakeCode	(x=0XB00002C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00002D0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00002E0,	"jumptable B0000270 case 1");
	MakeCode	(x=0XB00002E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00002E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00002F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000300);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000304);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000318);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000031C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000328);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000032C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000330);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000354);
	OpStkvar	(x,	1);
	MakeComm	(0XB0000364,	"switch 16 cases ");
	MakeComm	(0XB0000368,	"switch jump");
	MakeComm	(0XB0000370,	"jump table for switch statement");
	MakeDword	(x=0XB0000370);
	MakeArray	(x,	0X10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB00003B0,	"jumptable B0000270 case 0");
	MakeCode	(0XB00003B0);
	MakeRptCmt	(0XB00003E0,	"jumptable B0000368 case 9");
	MakeCode	(0XB00003E0);
	MakeCode	(x=0XB00003FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000404);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000041C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000046C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB00004B8,	"jumptable B0000368 case 1");
	MakeCode	(x=0XB00004B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00004C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00004CC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00004DC,	"jumptable B0000368 case 0");
	MakeCode	(x=0XB00004DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000510);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB000052C,	"jumptable B0000368 default case");
	MakeCode	(0XB000052C);
	MakeRptCmt	(0XB0000534,	"jumptable B0000368 case 15");
	MakeCode	(x=0XB0000534);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000054C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000059C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB00005E8,	"jumptable B0000368 case 14");
	MakeCode	(x=0XB00005E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000608);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0000640,	"jumptable B0000368 case 13");
	MakeCode	(x=0XB0000640);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000654);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00006A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB00006DC,	"jumptable B0000368 case 12");
	MakeCode	(x=0XB00006DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00006F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB00007A0,	"jumptable B0000368 case 11");
	MakeCode	(x=0XB00007A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00007B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000824);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB000086C,	"jumptable B0000368 case 10");
	MakeCode	(0XB000086C);
	MakeCode	(x=0XB00008A4);
	OpHex		(x,	1);
	MakeCode	(x=0XB00008AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00008D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00008E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000090C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0000914);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0000940,	"jumptable B0000368 case 8");
	MakeCode	(0XB0000940);
	MakeCode	(x=0XB000095C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000970);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000097C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000098C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000994);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000099C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00009A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00009B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00009E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00009FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000A00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000A10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000A18);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0000A28,	"jumptable B0000368 case 7");
	MakeCode	(x=0XB0000A28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000A40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0000AAC,	"sp");
	MakeComm	(0XB0000AC0,	"ip");
	MakeComm	(0XB0000AC8,	"caller");
	MakeComm	(0XB0000ACC,	"thread");
	MakeRptCmt	(0XB0000AE0,	"jumptable B0000368 case 6");
	MakeCode	(0XB0000AE0);
	MakeCode	(x=0XB0000B28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B64);
	OpStkvar	(x,	1);
	MakeComm	(0XB0000B68,	"int");
	MakeComm	(0XB0000B74,	"void *");
	MakeComm	(0XB0000B78,	"size_t");
	MakeCode	(x=0XB0000B94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000B98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000BF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000BF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000C04);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0000C28,	"jumptable B0000368 case 5");
	MakeCode	(x=0XB0000C28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0000C38,	"jumptable B0000368 case 3");
	MakeCode	(x=0XB0000C38);
	OpStkvar	(x,	1);
	MakeComm	(0XB0000C4C,	"size");
	MakeComm	(0XB0000C50,	"pd");
	MakeComm	(0XB0000C54,	"base");
	MakeComm	(0XB0000C58,	"pool");
	MakeCode	(x=0XB0000C74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000C78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000C84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000CA0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0000CA8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0000CE8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0000CF0);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0000D0C,	"jumptable B0000368 case 2");
	MakeCode	(0XB0000D0C);
	MakeComm	(0XB0000D1C,	"self");
	MakeComm	(0XB0000D20,	"maxthreads");
	MakeCode	(x=0XB0000D30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000D34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000D3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000D48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000D5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000D60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000D6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0000D74);
	OpStkvar	(x,	1);
	MakeCode	(0XB0000DA8);
	MakeRptCmt	(0XB0000DAC,	"jumptable B0000368 case 4");
	MakeCode	(x=0XB0000DAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0000DB4);
	MakeCode	(0XB0000DCC);
	MakeCode	(0XB0000DD4);
	MakeCode	(0XB0000DDC);
	MakeCode	(0XB0000DE4);
	MakeCode	(0XB0000DEC);
	MakeCode	(0XB0000DF4);
	MakeComm	(0XB0000DFC,	"pool");
	MakeCode	(x=0XB0000DFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0000E00,	"size");
	MakeComm	(0XB0000E04,	"base");
	MakeComm	(0XB0000E08,	"pd");
	MakeCode	(0XB0000E50);
	MakeCode	(0XB0000E64);
	MakeCode	(0XB0000E68);
	MakeCode	(0XB0000E70);
	MakeCode	(0XB0000E88);
	MakeCode	(0XB0000E8C);
	MakeCode	(0XB0000EA4);
	MakeCode	(x=0XB0000EA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0000ED4);
	MakeCode	(x=0XB0000EE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0000F30);
	MakeCode	(x=0XB0000F38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0000F44);
	OpStkvar	(x,	1);
	MakeCode	(0XB0000F4C);
	MakeCode	(0XB0000F54);
	MakeCode	(0XB0000F5C);
	MakeCode	(0XB0000F68);
	MakeCode	(0XB0000F70);
	MakeCode	(0XB0000F78);
	MakeCode	(0XB0000F88);
	MakeCode	(0XB0000F90);
	MakeCode	(0XB0000F98);
	MakeCode	(0XB0000FA0);
	MakeCode	(0XB0000FA8);
	MakeCode	(0XB0000FB0);
	MakeCode	(0XB0000FB8);
	MakeCode	(0XB0000FC0);
	MakeCode	(0XB0000FC8);
	MakeCode	(0XB0000FD0);
	MakeCode	(0XB0000FE0);
	MakeDword	(x=0XB0000FE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0000FEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0000FF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0000FF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0000FF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0000FFC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001000);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001004);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001008);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000100C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001010);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001014);
	MakeCode	(0XB0001048);
	MakeCode	(0XB0001080);
	MakeCode	(0XB0001098);
	MakeCode	(0XB00010D0);
	MakeCode	(0XB0001108);
	MakeName	(0XB0001108,	"dump_memsections");
	MakeCode	(x=0XB0001114);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001170);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00011E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000125C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001288);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0001288,	"debug_dump_info");
	MakeDword	(x=0XB0001294);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001298);
	MakeCode	(x=0XB000129C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00012B0);
	MakeDword	(x=0XB00012B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00012B8);
	MakeCode	(0XB00012EC);
	MakeCode	(0XB0001324);
	MakeName	(0XB0001324,	"_eas_create_thread");
	MakeCode	(x=0XB00013C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00013C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00013C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00013D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001408);
	OpStkvar	(x,	1);
	MakeCode	(0XB000144C);
	MakeCode	(0XB0001454);
	MakeCode	(x=0XB0001478);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000147C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001480);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00014A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00014A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00014A8);
	OpStkvar	(x,	1);
	MakeCode	(0XB00014CC);
	MakeCode	(0XB00014E8);
	MakeCode	(0XB00014FC);
	MakeCode	(0XB0001504);
	MakeCode	(x=0XB000150C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001518);
	OpStkvar	(x,	1);
	MakeCode	(0XB000154C);
	MakeCode	(0XB0001558);
	MakeCode	(0XB000156C);
	MakeDword	(x=0XB0001570);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001574);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001578);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000157C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001580);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001584);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001588);
	MakeName	(0XB0001588,	"eas_delete_thread");
	MakeCode	(0XB00015B8);
	MakeCode	(x=0XB00015C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00015F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001608);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0001614);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000162C);
	OpOff		(x,	1,	0XB000D4C0);
	OpOff		(x,	129,	0XB000D4C0);
	MakeDword	(x=0XB0001664);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001668);
	MakeComm	(0XB000166C,	"arg4");
	MakeCode	(x=0XB0001670);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001694);
	OpHex		(x,	1);
	MakeComm	(0XB00016B4,	"addr");
	MakeCode	(x=0XB00016D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00016E0);
	OpStkvar	(x,	1);
	MakeCode	(0XB00016E8);
	MakeComm	(0XB0001700,	"arg1");
	MakeComm	(0XB0001704,	"px");
	MakeCode	(x=0XB0001704);
	OpStkvar	(x,	1);
	MakeComm	(0XB0001708,	"py");
	MakeCode	(x=0XB0001708);
	OpStkvar	(x,	1);
	MakeComm	(0XB000170C,	"arg0");
	MakeCode	(x=0XB0001720);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001730);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000173C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001744);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001748);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000175C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001760);
	OpStkvar	(x,	1);
	MakeCode	(0XB0001780);
	MakeCode	(0XB0001788);
	MakeCode	(0XB00017A0);
	MakeName	(0XB00017A0,	"sometimesCallFunc");
	MakeCode	(x=0XB00017A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00017A8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00017B0,	"call arg3");
	MakeCode	(x=0XB00017B4);
	OpStkvar	(x,	1);
	MakeCode	(0XB00017B8);
	MakeName	(0XB00017B8,	"extension_init");
	MakeDword	(x=0XB00017C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00017C8);
	MakeCode	(x=0XB0001818);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001834);
	OpHex		(x,	1);
	MakeCode	(0XB00018D0);
	MakeCode	(0XB00018D8);
	MakeCode	(0XB00018E0);
	MakeCode	(x=0XB0001904);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0001938);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001958);
	OpHex		(x,	1);
	MakeCode	(x=0XB00019BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00019C0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00019CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00019EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001A18);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001A2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001A34);
	OpHex		(x,	1);
	MakeCode	(0XB0001A70);
	MakeCode	(x=0XB0001A8C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001AAC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001AC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001AE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001AE4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001AEC);
	OpHex		(x,	1);
	MakeCode	(0XB0001AF8);
	MakeDword	(x=0XB0001B04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001B08);
	MakeCode	(0XB0001B58);
	MakeCode	(0XB0001B60);
	MakeCode	(0XB0001B98);
	MakeCode	(0XB0001BA0);
	MakeCode	(0XB0001C1C);
	MakeCode	(x=0XB0001C68);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001C78);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001C90);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001C94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001C9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0001CA0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001CB4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001D04);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001D38);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001D40);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001D50);
	OpHex		(x,	1);
	MakeCode	(0XB0001D70);
	MakeCode	(0XB0001D7C);
	MakeCode	(x=0XB0001D80);
	OpHex		(x,	1);
	MakeCode	(0XB0001DA0);
	MakeCode	(x=0XB0001DA4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001DB8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001DBC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001DC4);
	OpHex		(x,	1);
	MakeDword	(x=0XB0001DCC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001DD0);
	MakeCode	(x=0XB0001DF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001E08);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001E3C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001E4C);
	OpHex		(x,	1);
	MakeCode	(0XB0001E80);
	MakeCode	(x=0XB0001E8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0001E9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0001EC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0001EDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001EE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0001EE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0001EE8);
	MakeCode	(x=0XB0001F04);
	OpStkvar	(x,	1);
	MakeCode	(0XB0001F14);
	MakeCode	(x=0XB0001F38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001F44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0001F60);
	OpStkvar	(x,	1);
	MakeCode	(0XB0001F78);
	MakeCode	(x=0XB0001FB0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0001FC8);
	OpHex		(x,	1);
	MakeCode	(0XB0002000);
	MakeCode	(0XB0002018);
	MakeCode	(x=0XB0002028);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002034);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002044);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002054);
	MakeCode	(x=0XB00020A4);
	OpHex		(x,	1);
	MakeCode	(x=0XB00020E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000210C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002120);
	OpHex		(x,	1);
	MakeCode	(x=0XB000214C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002158);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002168);
	MakeCode	(x=0XB000216C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002178);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002180);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000218C);
	MakeDword	(x=0XB0002198);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000219C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00021A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00021A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00021A8);
	MakeName	(0XB00021A8,	"get_pd");
	MakeDword	(0XB00021C8);
	MakeCode	(0XB00021CC);
	MakeName	(0XB00021CC,	"_iguana_pd_mypd_impl");
	MakeCode	(x=0XB00021EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00021F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00021F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000220C);
	MakeCode	(x=0XB000221C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002220);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002224);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0002240);
	MakeDword	(x=0XB0002248);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000224C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002250);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002254);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB0002258);
	MakeComm	(0XB000225C,	"flags");
	MakeCode	(0XB000225C);
	MakeName	(0XB000225C,	"iguana_pd_create_memsection_impl");
	MakeRptCmt	(0XB0002270,	"get_pd(caller, pd)");
	MakeCode	(x=0XB0002274);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0002278,	"flags and pool");
	MakeComm	(0XB0002280,	"size");
	MakeComm	(0XB0002284,	"pd");
	MakeRptCmt	(0XB0002288,	"mask flags");
	MakeCode	(x=0XB0002288);
	OpHex		(x,	1);
	MakeComm	(0XB000228C,	"base");
	MakeCode	(x=0XB000228C);
	OpStkvar	(x,	1);
	MakeCode	(0XB00022C4);
	MakeName	(0XB00022C4,	"iguana_pd_create_thread_impl");
	MakeCode	(x=0XB00022DC);
	OpStkvar	(x,	1);
	MakeComm	(0XB000231C,	"retSpaceId");
	MakeCode	(0XB000231C);
	MakeName	(0XB000231C,	"iguana_pd_create_eas");
	MakeCode	(x=0XB0002334);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002338,	"kip");
	MakeComm	(0XB000233C,	"utcb");
	MakeComm	(0XB0002340,	"pid");
	MakeCode	(x=0XB0002340);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0002358,	"return cap");
	MakeCode	(0XB0002360);
	MakeName	(0XB0002360,	"iguana_pd_create_pd_impl");
	MakeComm	(0XB0002374,	"maxthreads");
	MakeCode	(0XB0002394);
	MakeName	(0XB0002394,	"iguana_pd_create_restricted_pd_impl");
	MakeCode	(0XB0002444);
	MakeCode	(0XB0002494);
	MakeCode	(0XB000249C);
	MakeName	(0XB000249C,	"iguana_pd_create_session_impl");
	MakeCode	(x=0XB00024A0);
	OpStkvar	(x,	1);
	MakeCode	(0XB00024D4);
	MakeComm	(0XB00024D8,	"client");
	MakeComm	(0XB00024DC,	"server");
	MakeComm	(0XB00024E0,	"clist");
	MakeCode	(x=0XB00024E0);
	OpStkvar	(x,	1);
	MakeCode	(0XB00024F8);
	MakeName	(0XB00024F8,	"iguana_pd_set_callback_impl");
	MakeCode	(0XB0002504);
	MakeName	(0XB0002504,	"iguana_pd_add_clist_impl");
	MakeComm	(0XB0002508,	"clist->base");
	MakeCode	(0XB0002510);
	MakeName	(0XB0002510,	"iguana_pd_release_clist_impl");
	MakeCode	(0XB000251C);
	MakeName	(0XB000251C,	"iguana_pd_delete_impl");
	MakeRptCmt	(0XB0002544,	"set env for no response");
	MakeCode	(0XB000254C);
	MakeName	(0XB000254C,	"iguana_eas_create_thread_impl");
	MakeCode	(x=0XB0002554);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002564);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002598);
	MakeCode	(0XB00025B4);
	MakeCode	(x=0XB00025C0);
	OpStkvar	(x,	1);
	MakeCode	(0XB00025C8);
	MakeCode	(0XB00025D4);
	MakeName	(0XB00025D4,	"iguana_thread_id_impl");
	MakeCode	(0XB00025DC);
	MakeName	(0XB00025DC,	"iguana_thread_l4id_impl");
	MakeRptCmt	(0XB00025E4,	"thread->id");
	MakeCode	(0XB00025EC);
	MakeName	(0XB00025EC,	"iguana_thread_start_impl");
	MakeCode	(0XB00025FC);
	MakeName	(0XB00025FC,	"iguana_thread_delete_impl");
	MakeCode	(0XB0002644);
	MakeCode	(0XB0002658);
	MakeName	(0XB0002658,	"thr_meth2");
	MakeRptCmt	(0XB000265C,	"64 entries at 0x2c bytes each (11 fields?)");
	MakeCode	(x=0XB000265C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002668);
	OpStroffEx	(x,	1,	GetStrucIdByName("thrTabEnt"),	0);
	MakeComm	(0XB000266C,	"src");
	MakeCode	(0XB0002678);
	MakeComm	(0XB0002680,	"dst");
	MakeRptCmt	(0XB0002688,	"is tab[i].id zero?");
	MakeRptCmt	(0XB0002698,	"store str");
	MakeCode	(x=0XB000269C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB00026A0,	"store id");
	MakeCode	(0XB00026A8);
	MakeDword	(x=0XB00026AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00026B0);
	MakeName	(0XB00026B0,	"thr_meth3");
	MakeCode	(x=0XB00026B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00026CC);
	MakeComm	(0XB00026E0,	"is tab[i].str == arg1?");
	MakeCode	(x=0XB00026F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB00026F8,	"fetch tab[i].id");
	MakeDword	(x=0XB0002704);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002708);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000270C);
	MakeName	(0XB000270C,	"iguana_ex_pagefault_impl");
	MakeComm	(0XB0002710,	"arg4");
	MakeCode	(x=0XB0002720);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002724);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002728);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002730);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002748,	"addr");
	MakeCode	(x=0XB0002764);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00027AC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00027B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00027CC);
	OpHex		(x,	1);
	MakeComm	(0XB0002800,	"arg0");
	MakeCode	(x=0XB0002804);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002808,	"arg1");
	MakeComm	(0XB000280C,	"px");
	MakeCode	(x=0XB000280C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002810,	"py");
	MakeCode	(x=0XB0002810);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002814,	"arg4");
	MakeCode	(x=0XB0002814);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002818,	"caller");
	MakeCode	(x=0XB0002818);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002830);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002834);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002838);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002840);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002850);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002854);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002858);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000285C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002860);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002864);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002868);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000286C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002870);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000287C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000288C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000289C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00028A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00028A4);
	OpStkvar	(x,	1);
	MakeComm	(0XB00028A8,	"flags");
	MakeCode	(x=0XB00028A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00028AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00028B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00028D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00028E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00028E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00028EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00028F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000291C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000292C);
	OpStkvar	(x,	1);
	MakeComm	(0XB000293C,	"size");
	MakeComm	(0XB0002940,	"pd");
	MakeCode	(x=0XB0002940);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0002944,	"base");
	MakeComm	(0XB0002948,	"pool");
	MakeCode	(x=0XB0002948);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000294C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002960);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002964);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002974);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0002980);
	MakeCode	(x=0XB0002994);
	OpHex		(x,	1);
	MakeCode	(0XB000299C);
	MakeCode	(x=0XB00029A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00029E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0002A30);
	MakeCode	(x=0XB0002A38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002A4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A58);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002A64);
	MakeCode	(x=0XB0002A68);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002A9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002AB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002AC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002AE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002AF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002AF8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002B04);
	MakeCode	(0XB0002B18);
	MakeCode	(0XB0002B20);
	MakeCode	(x=0XB0002B2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B58);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002B88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BB4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002BC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002BEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002C00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002C28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002C2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002C34);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002C38);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002C58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002C60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002C68);
	OpStkvar	(x,	1);
	MakeComm	(0XB0002C78,	"caller");
	MakeCode	(0XB0002C78);
	MakeCode	(x=0XB0002C7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0002C80,	"env");
	MakeCode	(x=0XB0002CA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002CAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002CB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002CC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002CD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002CDC);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002D08);
	MakeDword	(x=0XB0002D10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D14);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D18);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0002D28,	"pd");
	MakeDword	(x=0XB0002D2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002D40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0002D40,	"str");
	MakeCode	(0XB0002D44);
	MakeName	(0XB0002D44,	"thr_meth4");
	MakeCode	(x=0XB0002D48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0002D68);
	MakeComm	(0XB0002D70,	"dst");
	MakeCode	(x=0XB0002D88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0002DA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0002DA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0002DA4,	"src");
	MakeCode	(0XB0002DA8);
	MakeName	(0XB0002DA8,	"iguana_set_exception_impl");
	MakeCode	(x=0XB0002DAC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0002DB0,	"thr->exception[exc].ip = ip");
	MakeRptCmt	(0XB0002DB4,	"thr->exception[exc].sp = sp");
	MakeCode	(0XB0002DBC);
	MakeName	(0XB0002DBC,	"iguana_hardware_register_interrupt_impl");
	MakeCode	(x=0XB0002DC0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002DC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002DC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002DE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002DEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002DF0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0002E0C);
	MakeName	(0XB0002E0C,	"_iguana_hardware_back_memsection_impl");
	MakeCode	(x=0XB0002E28);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002E30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002E3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002E78);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002E8C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002E9C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002EDC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002EE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002EE8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002F14);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002F2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0002F50);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002F5C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002F6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002FB4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002FB8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002FC0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002FC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0002FE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002FEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0002FF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0002FFC);
	MakeDword	(x=0XB0003000);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003004);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003008);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000300C);
	MakeName	(0XB000300C,	"memsection_register_server_impl");
	MakeCode	(x=0XB0003014);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003024);
	OpStkvar	(x,	1);
	MakeCode	(0XB0003028);
	MakeCode	(x=0XB0003030);
	OpStkvar	(x,	1);
	MakeCode	(0XB0003034);
	MakeName	(0XB0003034,	"iguana_memsection_lookup_impl");
	MakeComm	(0XB0003038,	"addr");
	MakeCode	(0XB0003064);
	MakeName	(0XB0003064,	"iguana_memsection_delete_impl");
	MakeCode	(0XB000306C);
	MakeName	(0XB000306C,	"iguana_memsection_info_impl");
	MakeRptCmt	(0XB000307C,	"store size");
	MakeRptCmt	(0XB0003080,	"return base");
	MakeCode	(0XB0003088);
	MakeName	(0XB0003088,	"iguana_memsection_set_attributes_impl");
	MakeCode	(x=0XB000308C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00030A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00030A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00030AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00030B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00030B4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB00030BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00030C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00030C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00030C8);
	MakeName	(0XB00030C8,	"iguana_memsection_map_impl");
	MakeComm	(0XB00030D8,	"msect");
	MakeCode	(0XB00030D8);
	MakeName	(0XB00030D8,	"iguana_memsection_unmap_impl");
	MakeComm	(0XB00030DC,	"sz");
	MakeCode	(0XB00030E4);
	MakeName	(0XB00030E4,	"iguana_session_delete_impl");
	MakeCode	(0XB00030EC);
	MakeName	(0XB00030EC,	"iguana_session_revoke_impl");
	MakeCode	(x=0XB00030F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00030FC);
	OpStkvar	(x,	1);
	MakeCode	(0XB0003100);
	MakeName	(0XB0003100,	"iguana_session_add_buffer_impl");
	MakeCode	(0XB0003110);
	MakeName	(0XB0003110,	"iguana_debug_dump_info_impl");
	MakeCode	(x=0XB0003114);
	OpStkvar	(x,	1);
	MakeName	(0XB0003114,	"iguana_debug_meth1");
	MakeComm	(0XB0003118,	"arg4");
	MakeComm	(0XB000311C,	"caller");
	MakeCode	(x=0XB000311C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003120);
	OpStkvar	(x,	1);
	MakeComm	(0XB0003124,	"arg0");
	MakeComm	(0XB0003128,	"arg1");
	MakeComm	(0XB000312C,	"px");
	MakeCode	(x=0XB000312C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0003130,	"arg4");
	MakeCode	(x=0XB0003130);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003140);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0003140,	"iguana_xxx_meth0");
	MakeCode	(x=0XB0003150);
	OpOff		(x,	1,	0XB0045CD8);
	OpOff		(x,	129,	0XB0045CD8);
	MakeDword	(x=0XB0003160);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003164);
	MakeName	(0XB0003164,	"nullsub_1");
	MakeCode	(x=0XB0003168);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0003170);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0003174);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003178);
	OpOff		(x,	1,	0XB0045CD8);
	OpOff		(x,	129,	0XB0045CD8);
	MakeDword	(x=0XB0003180);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003184);
	MakeCode	(x=0XB0003188);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000318C);
	OpOff		(x,	1,	0XB0045CD8);
	OpOff		(x,	129,	0XB0045CD8);
	MakeDword	(x=0XB0003198);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000319C);
	MakeCode	(x=0XB00031B8);
	OpHex		(x,	1);
	MakeCode	(0XB00031FC);
	MakeCode	(x=0XB0003238);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0003260);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003264);
	MakeCode	(0XB0003278);
	MakeCode	(0XB00032B4);
	MakeCode	(0XB00032F8);
	MakeCode	(0XB00032FC);
	MakeCode	(0XB000330C);
	MakeComm	(0XB0003314,	"switch 6 cases ");
	MakeComm	(0XB0003318,	"switch jump");
	MakeComm	(0XB0003320,	"jump table for switch statement");
	MakeDword	(x=0XB0003320);
	MakeArray	(x,	0X6);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0003338,	"jumptable B0003318 case 5");
	MakeCode	(0XB0003338);
	MakeRptCmt	(0XB0003340,	"jumptable B0003318 default case");
	MakeCode	(0XB0003340);
	MakeRptCmt	(0XB0003350,	"jumptable B0003318 case 0");
	MakeCode	(0XB0003350);
	MakeRptCmt	(0XB0003354,	"jumptable B0003318 case 1");
	MakeCode	(0XB0003354);
	MakeRptCmt	(0XB000335C,	"jumptable B0003318 case 2");
	MakeCode	(0XB000335C);
	MakeRptCmt	(0XB0003364,	"jumptable B0003318 case 3");
	MakeCode	(0XB0003364);
	MakeRptCmt	(0XB000336C,	"jumptable B0003318 case 4");
	MakeCode	(0XB000336C);
	MakeCode	(0XB0003374);
	MakeName	(0XB0003374,	"_main");
	MakeCode	(x=0XB000337C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003380);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003384);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000339C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00033BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00033F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00033F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003424);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000342C);
	MakeCode	(0XB0003430);
	MakeCode	(x=0XB0003438);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000343C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003440);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000344C);
	MakeDword	(x=0XB0003458);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000345C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003460);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003464);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003468);
	MakeName	(0XB0003468,	"_memsection_init_dl_segment");
	MakeCode	(x=0XB000346C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00034D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00034DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00034E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00034EC);
	MakeCode	(x=0XB00034F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00034F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00034FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003508);
	MakeCode	(x=0XB000350C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003510);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003514);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003520);
	MakeDword	(x=0XB0003528);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000352C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003530);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003534);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003538);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000353C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003540);
	MakeName	(0XB0003540,	"_memsection_init_active_page_pool");
	MakeCode	(x=0XB0003564);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00035C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00035EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003648);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000364C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003650);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000365C);
	MakeCode	(x=0XB0003664);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003668);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000366C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003678);
	MakeCode	(x=0XB000367C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003680);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003684);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003690);
	MakeCode	(x=0XB0003694);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003698);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000369C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00036A8);
	MakeCode	(x=0XB00036AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00036B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00036B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00036C0);
	MakeDword	(x=0XB00036C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00036E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00036EC);
	MakeCode	(x=0XB00036F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB00036FC,	"int");
	MakeComm	(0XB0003700,	"size_t");
	MakeDword	(x=0XB000372C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003730);
	MakeName	(0XB0003730,	"_delete_memsection_from_allocator");
	MakeCode	(x=0XB0003740);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003744);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003748);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000375C);
	MakeCode	(0XB0003760);
	MakeDword	(x=0XB0003764);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003768);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000376C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003770);
	MakeCode	(0XB0003774);
	MakeName	(0XB0003774,	"_memsection_register_server");
	MakeCode	(x=0XB0003788);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000378C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003790);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00037A0);
	MakeCode	(0XB00037A4);
	MakeDword	(x=0XB00037A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00037AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00037B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00037B4);
	MakeName	(0XB00037B4,	"memsection_unmap");
	MakeCode	(x=0XB00037BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00037D0);
	OpHex		(x,	1);
	MakeCode	(0XB0003814);
	MakeCode	(x=0XB000384C);
	OpHex		(x,	1);
	MakeCode	(0XB000385C);
	MakeCode	(0XB0003878);
	MakeCode	(0XB00038A4);
	MakeCode	(0XB00038DC);
	MakeCode	(0XB00038EC);
	MakeCode	(0XB0003948);
	MakeName	(0XB0003948,	"memsection_lookup_phys");
	MakeCode	(x=0XB0003958);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003968);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000398C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00039AC);
	OpHex		(x,	1);
	MakeCode	(0XB00039CC);
	MakeCode	(x=0XB00039D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00039D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00039EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003A00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003A48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003A4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003A70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003A74);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003A84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003AB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003AD0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0003AD8,	"addr");
	MakeCode	(x=0XB0003AD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003AE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003B1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003B34);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003B40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003B50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003B78);
	OpStkvar	(x,	1);
	MakeCode	(0XB0003B8C);
	MakeCode	(x=0XB0003BA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003BB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003BD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003BE4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003BFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003C4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003C50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003C54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003C60);
	MakeCode	(x=0XB0003C94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003CBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003CDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003CFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003D08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003D34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003D48);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003D50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003D64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003D74);
	OpStkvar	(x,	1);
	MakeCode	(0XB0003DAC);
	MakeCode	(x=0XB0003DBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003DC0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003DC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003DD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003DD4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0003DDC);
	MakeCode	(x=0XB0003DE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003DE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003DEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003DF4);
	MakeCode	(0XB0003DFC);
	MakeCode	(x=0XB0003E04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003E14);
	MakeCode	(0XB0003E18);
	MakeCode	(x=0XB0003E20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E24);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003E30);
	MakeCode	(0XB0003E34);
	MakeCode	(x=0XB0003E38);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003E40);
	OpHex		(x,	1);
	MakeCode	(0XB0003E5C);
	MakeCode	(x=0XB0003E64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E78);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003E88);
	MakeCode	(0XB0003E90);
	MakeCode	(x=0XB0003E98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003E9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003EA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003EA8);
	MakeCode	(0XB0003EB0);
	MakeCode	(x=0XB0003EB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003EBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003EC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003EC8);
	MakeCode	(0XB0003ECC);
	MakeCode	(x=0XB0003EDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0003EE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003EE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003EEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003EF8);
	MakeCode	(x=0XB0003EFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003F10);
	MakeCode	(x=0XB0003F1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F24);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003F30);
	MakeCode	(x=0XB0003F34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F3C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003F48);
	MakeCode	(x=0XB0003F50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0003F58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0003F64);
	MakeDword	(x=0XB0003F6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F88);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F90);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003F9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003FA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003FA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0003FA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0003FAC);
	MakeName	(0XB0003FAC,	"memsection_map");
	MakeCode	(x=0XB0003FB4);
	OpHex		(x,	1);
	MakeComm	(0XB0003FB8,	"arg4");
	MakeCode	(x=0XB0003FD0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003FE4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0003FFC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004000);
	OpHex		(x,	1);
	MakeComm	(0XB0004038,	"addr");
	MakeCode	(x=0XB0004054);
	OpHex		(x,	1);
	MakeCode	(x=0XB000405C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004090);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004094);
	OpStkvar	(x,	1);
	MakeComm	(0XB00040A8,	"arg1");
	MakeComm	(0XB00040AC,	"px");
	MakeCode	(x=0XB00040AC);
	OpStkvar	(x,	1);
	MakeComm	(0XB00040B0,	"py");
	MakeComm	(0XB00040B4,	"arg0");
	MakeCode	(x=0XB00040CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00040D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00040E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00040EC);
	OpStkvar	(x,	1);
	MakeCode	(0XB0004118);
	MakeCode	(0XB0004124);
	MakeName	(0XB0004124,	"_memsection_delete");
	MakeCode	(x=0XB0004138);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004144);
	OpHex		(x,	1);
	MakeCode	(x=0XB000414C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000416C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00041AC);
	MakeCode	(x=0XB00041B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00041C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00041D4);
	MakeCode	(x=0XB00041D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00041DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00041E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00041E8);
	MakeCode	(x=0XB00041EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00041FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004210);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004228);
	OpStkvar	(x,	1);
	MakeCode	(0XB0004234);
	MakeCode	(x=0XB000425C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004268);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004270);
	OpStkvar	(x,	1);
	MakeCode	(0XB0004278);
	MakeCode	(x=0XB0004280);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004284);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004288);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004290);
	MakeCode	(0XB0004294);
	MakeCode	(x=0XB000429C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00042A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00042A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00042AC);
	MakeDword	(x=0XB00042B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00042B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00042B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00042BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00042C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00042C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00042C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00042CC);
	MakeCode	(x=0XB00042FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004344);
	MakeDword	(x=0XB000434C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004350);
	MakeName	(0XB0004350,	"pd_attach");
	MakeCode	(x=0XB0004358);
	OpHex		(x,	1);
	MakeComm	(0XB000435C,	"arg4");
	MakeCode	(x=0XB0004380);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00043BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00043D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00043D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00043DC);
	OpStkvar	(x,	1);
	MakeCode	(0XB00043E4);
	MakeComm	(0XB0004400,	"arg1");
	MakeComm	(0XB0004404,	"px");
	MakeComm	(0XB0004408,	"py");
	MakeComm	(0XB000440C,	"arg0");
	MakeCode	(x=0XB0004428);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004430);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004440);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004454);
	OpStkvar	(x,	1);
	MakeCode	(0XB0004474);
	MakeCode	(0XB00044A0);
	MakeCode	(0XB00044A8);
	MakeDword	(x=0XB00044B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00044B4);
	MakeCode	(0XB00044E4);
	MakeName	(0XB00044E4,	"_memsection_create_cache");
	MakeCode	(x=0XB00044F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004508);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004540);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004544);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004548);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004554);
	MakeCode	(x=0XB0004578);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000457C);
	OpStkvar	(x,	1);
	MakeComm	(0XB000458C,	"int");
	MakeComm	(0XB0004590,	"void *");
	MakeComm	(0XB0004594,	"size_t");
	MakeCode	(x=0XB000459C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00045C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00045F0);
	OpOff		(x,	1,	0XB0040040);
	OpOff		(x,	129,	0XB0040040);
	MakeCode	(x=0XB0004604);
	OpOff		(x,	1,	0XB0040040);
	OpOff		(x,	129,	0XB0040040);
	MakeCode	(x=0XB000461C);
	OpOff		(x,	1,	0XB0040040);
	OpOff		(x,	129,	0XB0040040);
	MakeCode	(0XB000469C);
	MakeCode	(0XB00046B4);
	MakeCode	(x=0XB00046BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00046C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00046E0);
	MakeCode	(x=0XB00046EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00046FC);
	MakeCode	(x=0XB0004718);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004724);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000473C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004740);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004744);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004748);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000474C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004750);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004754);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004758);
	MakeCode	(0XB0004790);
	MakeComm	(0XB0004798,	"flags");
	MakeCode	(0XB0004798);
	MakeComm	(0XB000479C,	"pool");
	MakeCode	(x=0XB000479C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB00047A8,	"size");
	MakeComm	(0XB00047AC,	"base");
	MakeComm	(0XB00047B0,	"pd");
	MakeCode	(x=0XB00047B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB00047E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00047E4);
	MakeCode	(x=0XB00047EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB00047F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB00047F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00047FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0004824);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004828);
	OpHex		(x,	1);
	MakeName	(0XB0004828,	"_objtable_setup");
	MakeCode	(x=0XB0004844);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004864);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004874);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB00048B0,	"int");
	MakeComm	(0XB00048B4,	"size_t");
	MakeComm	(0XB00048B8,	"void *");
	MakeCode	(x=0XB00048D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00048DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00048E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00048EC);
	MakeCode	(0XB00048F0);
	MakeCode	(x=0XB00048F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004904);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004918);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000491C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000492C);
	MakeCode	(x=0XB0004930);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0004948);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000494C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004950);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004954);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004958);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000495C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004960);
	OpHex		(x,	1);
	MakeName	(0XB0004960,	"_objtable_setup_fixed");
	MakeCode	(x=0XB00049A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00049BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00049C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB00049D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00049D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00049DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00049E8);
	MakeCode	(x=0XB00049EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0004A30,	"void *");
	MakeComm	(0XB0004A34,	"int");
	MakeComm	(0XB0004A38,	"size_t");
	MakeCode	(x=0XB0004A44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004A48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004A4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004A58);
	MakeCode	(x=0XB0004A5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0004A74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004A78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004A7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004A80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004A84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004A88);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004A8C);
	OpHex		(x,	1);
	MakeName	(0XB0004A8C,	"_objtable_setup_utcb");
	MakeCode	(x=0XB0004AA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004AA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004AAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004AC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004AF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004B08);
	MakeCode	(0XB0004B18);
	MakeCode	(0XB0004B1C);
	MakeDword	(x=0XB0004B20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004B24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004B28);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004B2C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004B30);
	MakeName	(0XB0004B30,	"_objtable_setup_internal");
	MakeCode	(x=0XB0004B38);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004B50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004B54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004B58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004B98);
	MakeCode	(0XB0004B9C);
	MakeCode	(0XB0004BA0);
	MakeCode	(x=0XB0004BBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004BC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004BC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004BD0);
	MakeDword	(x=0XB0004BD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004BD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004BDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004BE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004BE4);
	MakeName	(0XB0004BE4,	"_objtable_setup_direct");
	MakeCode	(x=0XB0004BE8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004C00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C08);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004C88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0004C9C,	"void *");
	MakeComm	(0XB0004CA0,	"size_t");
	MakeComm	(0XB0004CA4,	"int");
	MakeCode	(0XB0004CB8);
	MakeCode	(0XB0004CC8);
	MakeCode	(0XB0004CCC);
	MakeCode	(0XB0004CD0);
	MakeCode	(0XB0004CD4);
	MakeDword	(x=0XB0004CD8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004CDC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004CE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004CE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004CE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004CEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0004CEC,	"objtable_init");
	MakeCode	(x=0XB0004CF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004CF8);
	OpOff		(x,	1,	0XB0041060);
	OpOff		(x,	129,	0XB0041060);
	MakeCode	(x=0XB0004D00);
	OpOff		(x,	1,	0XB0041060);
	OpOff		(x,	129,	0XB0041060);
	MakeDword	(x=0XB0004D08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004D0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004D10);
	MakeName	(0XB0004D10,	"objtable_lookup");
	MakeCode	(x=0XB0004D14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004D38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004D40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004D8C);
	MakeDword	(x=0XB0004D94);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004D98);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004D9C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0004DA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004DAC);
	OpStkvar	(x,	1);
	MakeName	(0XB0004DAC,	"_objtable_delete");
	MakeCode	(x=0XB0004DB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004DDC);
	MakeCode	(x=0XB0004DE0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004DE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004DE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004DF4);
	MakeDword	(x=0XB0004DF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004DFC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004E00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004E04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0004E08);
	OpStkvar	(x,	1);
	MakeName	(0XB0004E08,	"utcb_init");
	MakeCode	(x=0XB0004E10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004E18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0004E2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004E34);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004E44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004E50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004E54);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004E58);
	OpHex		(x,	1);
	MakeDword	(x=0XB0004E6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004E70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004E74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004E78);
	MakeName	(0XB0004E78,	"pd_setup");
	MakeDword	(0XB0004EEC);
	MakeCode	(x=0XB0004EF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0004EF0,	"pd_init");
	MakeCode	(x=0XB0004EF4);
	OpDecimal	(x,	1);
	MakeDword	(x=0XB0004F00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004F04);
	MakeName	(0XB0004F04,	"_pd_setup_callback");
	MakeCode	(x=0XB0004F30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004F38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0004F3C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0004F60);
	MakeCode	(0XB0004F64);
	MakeCode	(0XB0004F68);
	MakeDword	(x=0XB0004F7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004F80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0004F84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0004F88);
	MakeName	(0XB0004F88,	"_pd_create_memsection");
	MakeCode	(x=0XB0004F94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004F98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FAC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FB0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FBC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FD0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FD8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0004FE0);
	OpHex		(x,	1);
	MakeCode	(0XB0004FF8);
	MakeCode	(x=0XB0005014);
	OpHex		(x,	1);
	MakeCode	(x=0XB000501C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005070);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005074);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005078);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005080);
	MakeCode	(0XB0005088);
	MakeCode	(0XB000509C);
	MakeComm	(0XB00050C8,	"int");
	MakeComm	(0XB00050CC,	"size_t");
	MakeComm	(0XB00050D0,	"void *");
	MakeCode	(x=0XB00050D8);
	OpHex		(x,	1);
	MakeCode	(0XB0005104);
	MakeCode	(0XB0005118);
	MakeCode	(0XB000512C);
	MakeCode	(0XB0005144);
	MakeDword	(x=0XB0005154);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005158);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000515C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0005160);
	MakeName	(0XB0005160,	"pd_create");
	MakeComm	(0XB0005164,	"bail if maxthreads > 1000");
	MakeComm	(0XB0005178,	"bail if self is null");
	MakeRptCmt	(0XB00051B0,	"setup_utcb_area inlined");
	MakeCode	(x=0XB00051B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB00051EC,	"pd");
	MakeComm	(0XB00051F0,	"size");
	MakeComm	(0XB00051F4,	"base");
	MakeComm	(0XB00051F8,	"pool");
	MakeCode	(x=0XB00051F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000525C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005260);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005268);
	OpHex		(x,	1);
	MakeDword	(x=0XB0005288);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000528C);
	MakeName	(0XB000528C,	"_pd_create_eas");
	MakeCode	(x=0XB00052B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00052BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00052C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00052E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00052E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00052E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005300);
	MakeCode	(0XB0005304);
	MakeCode	(0XB0005310);
	MakeCode	(0XB0005314);
	MakeDword	(x=0XB0005318);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000531C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005320);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005324);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0005328);
	MakeName	(0XB0005328,	"_pd_create_thread");
	MakeCode	(0XB00053A0);
	MakeCode	(x=0XB00053CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00053E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00053EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00053F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00053FC);
	MakeCode	(x=0XB0005404);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005408);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000540C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005418);
	MakeCode	(0XB000541C);
	MakeDword	(x=0XB0005428);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000542C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005430);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005434);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005438);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000543C);
	MakeName	(0XB000543C,	"pd_delete_thread");
	MakeCode	(x=0XB0005468);
	OpStkvar	(x,	1);
	MakeCode	(0XB0005484);
	MakeCode	(x=0XB0005488);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000548C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0005490);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0005494);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0005498);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000549C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00054A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00054A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00054A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00054AC);
	OpStkvar	(x,	1);
	MakeCode	(0XB00054C0);
	MakeName	(0XB00054C0,	"pd_add_clist");
	MakeComm	(0XB00054C8,	"addr");
	MakeCode	(0XB0005538);
	MakeCode	(0XB0005544);
	MakeName	(0XB0005544,	"_pd_create_session");
	MakeCode	(x=0XB000556C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005570);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005574);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005580);
	MakeCode	(x=0XB00055A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00055AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00055B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00055B8);
	MakeCode	(x=0XB00055E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00055E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00055E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00055F0);
	MakeCode	(x=0XB0005610);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005614);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005618);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005620);
	MakeCode	(0XB000570C);
	MakeDword	(0XB0005714);
	MakeDword	(x=0XB0005718);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000571C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005720);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005724);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005728);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000572C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB0005730);
	MakeCode	(0XB0005734);
	MakeName	(0XB0005734,	"_pd_release_clist");
	MakeCode	(0XB000577C);
	MakeCode	(x=0XB0005780);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005784);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005788);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005794);
	MakeCode	(0XB00057AC);
	MakeDword	(x=0XB00057B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00057B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00057BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00057C0);
	MakeCode	(0XB00057C4);
	MakeName	(0XB00057C4,	"_pd_check_state");
	MakeCode	(0XB00057FC);
	MakeCode	(x=0XB0005834);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005838);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000583C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005860);
	MakeCode	(0XB0005864);
	MakeCode	(0XB0005868);
	MakeCode	(x=0XB0005888);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000588C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005890);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00058B4);
	MakeCode	(0XB00058B8);
	MakeCode	(0XB00058BC);
	MakeCode	(x=0XB00058DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00058E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00058E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005908);
	MakeCode	(0XB000590C);
	MakeCode	(0XB0005910);
	MakeCode	(x=0XB0005928);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000592C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005930);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005958);
	MakeCode	(0XB000595C);
	MakeCode	(0XB0005960);
	MakeDword	(0XB0005968);
	MakeDword	(x=0XB000596C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005970);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005974);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005978);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000597C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005980);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0005984);
	MakeCode	(x=0XB00059B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00059FC);
	MakeDword	(x=0XB0005A04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0005A08);
	MakeCode	(0XB0005A34);
	MakeCode	(0XB0005A6C);
	MakeName	(0XB0005A6C,	"pd_delete");
	MakeCode	(0XB0005AA4);
	MakeCode	(0XB0005BD0);
	MakeCode	(0XB0005BDC);
	MakeCode	(0XB0005BE4);
	MakeCode	(0XB0005BEC);
	MakeCode	(0XB0005C00);
	MakeCode	(x=0XB0005C04);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005C0C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005C24);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005C5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005C60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005C74);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005C80);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005C94);
	OpHex		(x,	1);
	MakeDword	(x=0XB0005CB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005CB4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005CB8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0005CBC);
	MakeName	(0XB0005CBC,	"_r_remove");
	MakeCode	(x=0XB0005CC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005CE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005CEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005CFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005D00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005D14);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005D50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005D78);
	OpHex		(x,	1);
	MakeCode	(0XB0005DCC);
	MakeCode	(x=0XB0005DF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005DFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005E00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0005E0C);
	MakeCode	(x=0XB0005E18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005E28);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005E44);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005E5C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005E6C);
	OpHex		(x,	1);
	MakeDword	(x=0XB0005E7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005E80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005E84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005E88);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0005E8C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0005E90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0005E9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0005EA0);
	MakeName	(0XB0005EA0,	"_r_insert");
	MakeCode	(x=0XB0005EA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0005EAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005ED4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005EE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005EEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005EF8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005EFC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F04);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F08);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F10);
	OpHex		(x,	1);
	MakeCode	(0XB0005F28);
	MakeCode	(x=0XB0005F2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005F4C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F64);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F68);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005F74);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005F94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0005FC0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0005FE4);
	MakeCode	(x=0XB0005FF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0005FFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006000);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000600C);
	MakeDword	(x=0XB0006014);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006018);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000601C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006020);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006024);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006028);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000602C);
	MakeCode	(x=0XB0006030);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006034);
	OpOff		(x,	1,	0XB0040098);
	OpOff		(x,	129,	0XB0040098);
	MakeCode	(x=0XB000606C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006088);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0006098);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000609C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00060A0);
	MakeComm	(0XB00060B8,	"addr");
	MakeCode	(x=0XB00060D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00060E4);
	OpHex		(x,	1);
	MakeCode	(0XB0006170);
	MakeDword	(x=0XB0006184);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006188);
	MakeCode	(x=0XB00061A8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB00061B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00061B8);
	MakeName	(0XB00061B8,	"_get_segment_info");
	MakeCode	(x=0XB00061BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00061D8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0006220);
	MakeCode	(x=0XB0006260);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006274);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006280);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000628C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006290);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006294);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00062A0);
	MakeDword	(x=0XB00062A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00062AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00062B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00062B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00062B8);
	MakeCode	(x=0XB00062BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006318);
	MakeCode	(0XB0006348);
	MakeCode	(x=0XB0006350);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006354);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006358);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006360);
	MakeDword	(x=0XB0006368);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000636C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006370);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006374);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0006378);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000637C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006388);
	OpOff		(x,	1,	0XB0045CD8);
	OpOff		(x,	129,	0XB0045CD8);
	MakeDword	(x=0XB0006390);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006394);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0006398);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0006398,	"_elf_map");
	MakeCode	(x=0XB00063A4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00063A8);
	OpOff		(x,	1,	0XB0041074);
	OpOff		(x,	129,	0XB0041074);
	MakeCode	(x=0XB00063B0);
	OpOff		(x,	1,	0XB0041074);
	OpOff		(x,	129,	0XB0041074);
	MakeCode	(x=0XB00063B4);
	OpOff		(x,	1,	0XB0041074);
	OpOff		(x,	129,	0XB0041074);
	MakeCode	(x=0XB00063DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00063E8);
	MakeCode	(x=0XB0006418);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0006424,	"getpBSP_IFaces");
	MakeCode	(x=0XB0006434);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006438);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000643C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0006454,	"somePtr");
	MakeCode	(0XB0006470);
	MakeCode	(x=0XB0006474);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006478);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006480);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006488);
	MakeCode	(0XB00064A4);
	MakeCode	(0XB00064A8);
	MakeDword	(x=0XB00064AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00064B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00064B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00064B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00064BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00064C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00064C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00064C8);
	MakeName	(0XB00064C8,	"_session_add_buffer");
	MakeCode	(x=0XB0006544);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006548);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006550);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006564);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000658C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006590);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000659C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00065A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00065B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00065C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00065CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00065D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00065DC);
	MakeCode	(x=0XB00065E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00065E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00065E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00065F4);
	MakeDword	(x=0XB00065F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00065FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006600);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006604);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006608);
	MakeName	(0XB0006608,	"_session_delete");
	MakeCode	(x=0XB0006610);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000661C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006620);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006630);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006638);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000663C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000664C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006654);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006658);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006670);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006678);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000667C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006694);
	MakeCode	(0XB00066E0);
	MakeCode	(0XB00066E4);
	MakeCode	(x=0XB00066EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00066F4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00066F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006704);
	MakeCode	(x=0XB0006710);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006718);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000671C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006728);
	MakeDword	(x=0XB0006730);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006734);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006738);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000673C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006740);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006744);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006748);
	MakeDword	(0XB000676C);
	MakeCode	(0XB0006770);
	MakeCode	(0XB00067A4);
	MakeCode	(0XB00067D0);
	MakeCode	(0XB00067FC);
	MakeCode	(0XB000680C);
	MakeComm	(0XB0006874,	"size_t");
	MakeComm	(0XB0006878,	"void *");
	MakeComm	(0XB000687C,	"int");
	MakeCode	(0XB000688C);
	MakeCode	(0XB0006898);
	MakeCode	(0XB00068D4);
	MakeName	(0XB00068D4,	"_thread_init");
	MakeCode	(x=0XB00068DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00068E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006900);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006904);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006920);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006930);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006934);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006938);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006958);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000695C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006960);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006974);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006984);
	MakeCode	(0XB0006988);
	MakeCode	(0XB0006990);
	MakeCode	(0XB0006994);
	MakeDword	(x=0XB0006998);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000699C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00069A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00069A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00069A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00069AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00069B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB00069B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB00069B8);
	MakeCode	(x=0XB00069BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00069D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00069E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00069E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB00069F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0006A00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006A04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006A08);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006A0C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006A10);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006A14);
	MakeName	(0XB0006A14,	"_thread_alloc");
	MakeCode	(x=0XB0006A18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006A40);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006A44);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006A48);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006A4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006AA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006AA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006AA8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006AB4);
	MakeCode	(x=0XB0006AB8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006ABC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006AC0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006ACC);
	MakeCode	(x=0XB0006AD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006AD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006AD8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006AE4);
	MakeDword	(x=0XB0006AE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006AEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006AF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006AF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006AF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006AFC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006B00);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006B04);
	MakeName	(0XB0006B04,	"_thread_setup");
	MakeCode	(x=0XB0006B7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006B80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006B84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006B90);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006BB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006BBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006BC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006BD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006BE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006BF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006BF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006BFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006C08);
	MakeCode	(0XB0006C0C);
	MakeCode	(0XB0006C24);
	MakeCode	(x=0XB0006C48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C64);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006C74);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006C9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006CAC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0006CD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006CDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006CE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006D0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006D10);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006D1C);
	MakeCode	(0XB0006D20);
	MakeCode	(x=0XB0006D38);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006D3C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006D40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006D4C);
	MakeCode	(0XB0006D50);
	MakeCode	(x=0XB0006D58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006D5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006D60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006D6C);
	MakeDword	(x=0XB0006D70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006D74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006D78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006D7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006D80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006D84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006D88);
	MakeName	(0XB0006D88,	"_thread_delete");
	MakeCode	(x=0XB0006D9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006DA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006DA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006DE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006E2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006E30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006E34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0006E54);
	MakeDword	(x=0XB0006E9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006EA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006EA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0006EA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB0006EAC);
	MakeCode	(x=0XB0006EB0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0006EB0,	"thread_lookup");
	MakeDword	(x=0XB0006EC0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0006EC4);
	MakeName	(0XB0006EC4,	"thread_start");
	MakeCode	(x=0XB0006ED8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006EFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006F00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006F04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0006F08);
	OpStkvar	(x,	1);
	MakeCode	(0XB0006F1C);
	MakeCode	(0XB0006F20);
	MakeCode	(x=0XB0006FC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006FC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0006FCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0007024);
	MakeCode	(0XB0007028);
	MakeDword	(x=0XB000702C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0007030);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0007034);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0007038);
	MakeCode	(x=0XB0007068);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0007080);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB00070DC);
	MakeCode	(0XB00070E4);
	MakeDword	(x=0XB0007118);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000711C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0007120);
	MakeCode	(0XB000716C);
	MakeCode	(x=0XB0007184);
	OpHex		(x,	1);
	MakeCode	(x=0XB00071D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00071D4);
	OpHex		(x,	1);
	MakeCode	(0XB00071F8);
	MakeCode	(0XB0007280);
	MakeCode	(x=0XB000729C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00072EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00072F0);
	OpHex		(x,	1);
	MakeCode	(0XB0007314);
	MakeCode	(0XB0007374);
	MakeCode	(x=0XB000738C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00073DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00073E0);
	OpHex		(x,	1);
	MakeCode	(0XB0007404);
	MakeCode	(0XB0007478);
	MakeCode	(x=0XB0007494);
	OpHex		(x,	1);
	MakeCode	(x=0XB00074E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB00074E8);
	OpHex		(x,	1);
	MakeCode	(0XB000750C);
	MakeCode	(0XB0007590);
	MakeCode	(x=0XB00075A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00075F8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00075FC);
	OpHex		(x,	1);
	MakeCode	(0XB0007620);
	MakeCode	(0XB0007698);
	MakeCode	(x=0XB00076B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007700);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007704);
	OpHex		(x,	1);
	MakeCode	(0XB0007728);
	MakeCode	(0XB0007778);
	MakeCode	(x=0XB0007790);
	OpHex		(x,	1);
	MakeCode	(x=0XB00077D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00077DC);
	OpHex		(x,	1);
	MakeCode	(0XB0007800);
	MakeCode	(0XB0007854);
	MakeCode	(x=0XB000786C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00078B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00078BC);
	OpHex		(x,	1);
	MakeCode	(0XB00078E0);
	MakeCode	(0XB0007938);
	MakeCode	(x=0XB0007950);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007998);
	OpHex		(x,	1);
	MakeCode	(x=0XB000799C);
	OpHex		(x,	1);
	MakeCode	(0XB00079C0);
	MakeCode	(0XB0007A0C);
	MakeCode	(x=0XB0007A24);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007A6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007A70);
	OpHex		(x,	1);
	MakeCode	(0XB0007A94);
	MakeCode	(0XB0007AF4);
	MakeCode	(x=0XB0007B0C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007B5C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007B60);
	OpHex		(x,	1);
	MakeCode	(0XB0007B84);
	MakeCode	(0XB0007C14);
	MakeCode	(x=0XB0007C30);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007C80);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007C84);
	OpHex		(x,	1);
	MakeCode	(0XB0007CA8);
	MakeCode	(0XB0007CF4);
	MakeCode	(x=0XB0007D0C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007D54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007D58);
	OpHex		(x,	1);
	MakeCode	(0XB0007D7C);
	MakeCode	(0XB0007DE8);
	MakeCode	(x=0XB0007E00);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007E4C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007E50);
	OpHex		(x,	1);
	MakeCode	(0XB0007E74);
	MakeCode	(0XB0007ECC);
	MakeCode	(x=0XB0007EE4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007F2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0007F30);
	OpHex		(x,	1);
	MakeCode	(0XB0007F54);
	MakeCode	(0XB0007F84);
	MakeCode	(0XB0007FAC);
	MakeCode	(x=0XB0007FC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008010);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008014);
	OpHex		(x,	1);
	MakeCode	(0XB0008038);
	MakeCode	(0XB0008088);
	MakeCode	(x=0XB00080A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00080EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00080F0);
	OpHex		(x,	1);
	MakeCode	(0XB0008114);
	MakeCode	(0XB000816C);
	MakeCode	(x=0XB0008184);
	OpHex		(x,	1);
	MakeCode	(x=0XB00081CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB00081D0);
	OpHex		(x,	1);
	MakeCode	(0XB00081F4);
	MakeCode	(0XB0008244);
	MakeCode	(x=0XB000825C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00082A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00082AC);
	OpHex		(x,	1);
	MakeCode	(0XB00082D0);
	MakeCode	(0XB0008328);
	MakeCode	(x=0XB0008340);
	OpHex		(x,	1);
	MakeCode	(x=0XB000838C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008390);
	OpHex		(x,	1);
	MakeCode	(0XB00083B4);
	MakeCode	(0XB000840C);
	MakeCode	(x=0XB0008424);
	OpHex		(x,	1);
	MakeCode	(x=0XB000846C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008470);
	OpHex		(x,	1);
	MakeCode	(0XB0008494);
	MakeCode	(0XB00084E0);
	MakeCode	(x=0XB00084F8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008540);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008544);
	OpHex		(x,	1);
	MakeCode	(0XB0008568);
	MakeCode	(0XB00085C8);
	MakeCode	(x=0XB00085E0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008628);
	OpHex		(x,	1);
	MakeCode	(x=0XB000862C);
	OpHex		(x,	1);
	MakeCode	(0XB0008650);
	MakeCode	(0XB00086B4);
	MakeCode	(x=0XB00086CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008718);
	OpHex		(x,	1);
	MakeCode	(x=0XB000871C);
	OpHex		(x,	1);
	MakeCode	(0XB0008740);
	MakeCode	(0XB00087A4);
	MakeCode	(x=0XB00087BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008808);
	OpHex		(x,	1);
	MakeCode	(x=0XB000880C);
	OpHex		(x,	1);
	MakeCode	(0XB0008830);
	MakeCode	(0XB0008884);
	MakeCode	(x=0XB000889C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00088E8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00088EC);
	OpHex		(x,	1);
	MakeCode	(0XB0008910);
	MakeCode	(0XB000896C);
	MakeCode	(x=0XB0008988);
	OpHex		(x,	1);
	MakeCode	(x=0XB00089D8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00089DC);
	OpHex		(x,	1);
	MakeCode	(0XB0008A00);
	MakeCode	(0XB0008A5C);
	MakeCode	(x=0XB0008A78);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008AC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008ACC);
	OpHex		(x,	1);
	MakeCode	(0XB0008AF0);
	MakeCode	(0XB0008B3C);
	MakeCode	(x=0XB0008B54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008B9C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008BA0);
	OpHex		(x,	1);
	MakeCode	(0XB0008BC4);
	MakeCode	(0XB0008C14);
	MakeCode	(x=0XB0008C2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008C74);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008C78);
	OpHex		(x,	1);
	MakeCode	(0XB0008C9C);
	MakeCode	(0XB0008D08);
	MakeCode	(x=0XB0008D20);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008D6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008D70);
	OpHex		(x,	1);
	MakeCode	(0XB0008D94);
	MakeCode	(0XB0008DF0);
	MakeCode	(x=0XB0008E08);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008E54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008E58);
	OpHex		(x,	1);
	MakeCode	(0XB0008E7C);
	MakeCode	(0XB0008EC8);
	MakeCode	(x=0XB0008EE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008F28);
	OpHex		(x,	1);
	MakeCode	(x=0XB0008F2C);
	OpHex		(x,	1);
	MakeCode	(0XB0008F50);
	MakeCode	(0XB0008FB4);
	MakeCode	(x=0XB0008FCC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009018);
	OpHex		(x,	1);
	MakeCode	(x=0XB000901C);
	OpHex		(x,	1);
	MakeCode	(0XB0009040);
	MakeCode	(0XB0009098);
	MakeCode	(x=0XB00090B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00090F8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00090FC);
	OpHex		(x,	1);
	MakeCode	(0XB0009120);
	MakeCode	(0XB0009168);
	MakeCode	(x=0XB0009180);
	OpHex		(x,	1);
	MakeCode	(x=0XB00091C8);
	OpHex		(x,	1);
	MakeCode	(x=0XB00091CC);
	OpHex		(x,	1);
	MakeCode	(0XB00091F0);
	MakeCode	(0XB0009254);
	MakeCode	(x=0XB0009270);
	OpHex		(x,	1);
	MakeCode	(x=0XB00092C0);
	OpHex		(x,	1);
	MakeCode	(x=0XB00092C4);
	OpHex		(x,	1);
	MakeCode	(0XB00092E8);
	MakeCode	(0XB0009338);
	MakeCode	(x=0XB0009350);
	OpHex		(x,	1);
	MakeCode	(x=0XB000939C);
	OpHex		(x,	1);
	MakeCode	(x=0XB00093A0);
	OpHex		(x,	1);
	MakeCode	(0XB00093C4);
	MakeName	(0XB00093C4,	"msg_is_error");
	MakeCode	(x=0XB00093C8);
	OpHex		(x,	1);
	MakeCode	(0XB00093D0);
	MakeCode	(x=0XB00093D4);
	OpHex		(x,	1);
	MakeCode	(0XB00093DC);
	MakeCode	(0XB00093E4);
	MakeName	(0XB00093E4,	"dispatch_iguana_pd");
	MakeCode	(x=0XB00093EC);
	OpHex		(x,	1);
	MakeComm	(0XB00093FC,	"switch 11 cases ");
	MakeComm	(0XB0009400,	"switch jump");
	MakeComm	(0XB0009408,	"jump table for switch statement");
	MakeDword	(x=0XB0009408);
	MakeArray	(x,	0XB);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0009434,	"jumptable B0009400 case 10");
	MakeCode	(x=0XB0009434);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009438);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000944C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009450,	"method 10");
	MakeCode	(x=0XB0009454);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000947C,	"jumptable B0009400 default case");
	MakeComm	(0XB0009484,	"server");
	MakeRptCmt	(0XB0009488,	"jumptable B0009400 case 0");
	MakeCode	(0XB0009488);
	MakeCode	(x=0XB0009490);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009494);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009498,	"method 0");
	MakeCode	(x=0XB000949C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00094C0,	"jumptable B0009400 case 1");
	MakeCode	(0XB00094C0);
	MakeComm	(0XB00094D4,	"caller");
	MakeComm	(0XB00094D8,	"retcap");
	MakeCode	(x=0XB00094D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00094E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00094E4);
	OpStkvar	(x,	1);
	MakeComm	(0XB00094E8,	"pool");
	MakeCode	(x=0XB00094E8);
	OpStkvar	(x,	1);
	MakeComm	(0XB00094EC,	"outbase");
	MakeCode	(x=0XB00094EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00094F0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00094F4,	"method 1");
	MakeCode	(x=0XB00094F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009500);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000950C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009528,	"jumptable B0009400 case 2");
	MakeCode	(x=0XB0009528);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000952C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009540);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009544,	"method 2");
	MakeCode	(x=0XB0009548);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009550,	"jumptable B0009400 case 3");
	MakeCode	(x=0XB0009550);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009564);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000956C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009574);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009578,	"method 3");
	MakeCode	(x=0XB000957C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000958C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00095A0,	"jumptable B0009400 case 4");
	MakeCode	(0XB00095A0);
	MakeComm	(0XB00095A4,	"pd");
	MakeCode	(x=0XB00095B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00095B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00095B8);
	OpStkvar	(x,	1);
	MakeComm	(0XB00095BC,	"caller");
	MakeComm	(0XB00095C4,	"kip");
	MakeCode	(x=0XB00095C4);
	OpStkvar	(x,	1);
	MakeComm	(0XB00095C8,	"utcb");
	MakeCode	(x=0XB00095C8);
	OpStkvar	(x,	1);
	MakeComm	(0XB00095CC,	"retcap");
	MakeCode	(x=0XB00095D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00095D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00095DC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00095E0,	"method 4");
	MakeCode	(x=0XB00095E4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009608,	"jumptable B0009400 case 5");
	MakeCode	(0XB0009608);
	MakeCode	(x=0XB0009610);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009620,	"peer");
	MakeComm	(0XB0009624,	"server");
	MakeCode	(x=0XB0009624);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009628,	"retcap");
	MakeCode	(x=0XB000962C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009630,	"clist");
	MakeCode	(x=0XB0009630);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009634,	"env");
	MakeCode	(x=0XB0009634);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009638);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000963C,	"method 5");
	MakeCode	(x=0XB0009640);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009648,	"jumptable B0009400 case 6");
	MakeCode	(x=0XB0009648);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000965C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009660,	"method 6");
	MakeCode	(x=0XB0009664);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000967C,	"jumptable B0009400 case 7");
	MakeCode	(x=0XB000967C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009690);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009694,	"method 7");
	MakeCode	(x=0XB0009698);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00096A0,	"jumptable B0009400 case 8");
	MakeCode	(0XB00096A0);
	MakeCode	(x=0XB00096B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00096B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00096BC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00096C0,	"method 8");
	MakeCode	(x=0XB00096C4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00096CC,	"jumptable B0009400 case 9");
	MakeCode	(0XB00096CC);
	MakeCode	(x=0XB00096D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00096DC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00096E0,	"method 9");
	MakeCode	(x=0XB00096E4);
	OpStkvar	(x,	1);
	MakeCode	(0XB00096EC);
	MakeName	(0XB00096EC,	"dispatch_iguana_eas");
	MakeCode	(x=0XB00096F4);
	OpHex		(x,	1);
	MakeComm	(0XB0009704,	"switch 4 cases ");
	MakeComm	(0XB0009708,	"switch jump");
	MakeComm	(0XB0009710,	"jump table for switch statement");
	MakeDword	(x=0XB0009710);
	MakeArray	(x,	0X4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0009720,	"jumptable B0009708 case 3");
	MakeCode	(0XB0009720);
	MakeCode	(x=0XB0009728);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009734);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009738);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000973C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009740,	"method 3");
	MakeCode	(x=0XB0009744);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009760,	"jumptable B0009708 default case");
	MakeRptCmt	(0XB000976C,	"jumptable B0009708 case 2");
	MakeCode	(0XB000976C);
	MakeCode	(x=0XB0009784);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009788);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000978C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009790);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009794);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009798);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000979C,	"method 2");
	MakeCode	(x=0XB00097A0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00097BC,	"jumptable B0009708 case 1");
	MakeCode	(0XB00097BC);
	MakeCode	(x=0XB00097C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00097CC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00097D0,	"method 1");
	MakeCode	(x=0XB00097D4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00097DC,	"jumptable B0009708 case 0");
	MakeCode	(0XB00097DC);
	MakeCode	(x=0XB00097F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00097F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00097FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009800);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009804);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009808);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000980C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009810);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009818);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000981C,	"method 0");
	MakeCode	(x=0XB0009820);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009828);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009830);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009854);
	MakeName	(0XB0009854,	"dispatch_iguana_thread");
	MakeCode	(x=0XB000985C);
	OpHex		(x,	1);
	MakeComm	(0XB0009860,	"ip");
	MakeComm	(0XB000986C,	"switch 8 cases ");
	MakeComm	(0XB0009870,	"switch jump");
	MakeComm	(0XB0009878,	"jump table for switch statement");
	MakeDword	(x=0XB0009878);
	MakeArray	(x,	0X8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0009898,	"jumptable B0009870 case 7");
	MakeCode	(0XB0009898);
	MakeComm	(0XB00098A0,	"thread");
	MakeComm	(0XB00098A4,	"exc");
	MakeComm	(0XB00098A8,	"caller");
	MakeCode	(x=0XB00098AC);
	OpStkvar	(x,	1);
	MakeComm	(0XB00098B4,	"ip");
	MakeCode	(x=0XB00098B4);
	OpStkvar	(x,	1);
	MakeComm	(0XB00098B8,	"env");
	MakeCode	(x=0XB00098B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00098BC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00098C0,	"method 7");
	MakeCode	(x=0XB00098C4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00098E0,	"jumptable B0009870 default case");
	MakeComm	(0XB00098E8,	"env");
	MakeRptCmt	(0XB00098EC,	"jumptable B0009870 case 0");
	MakeCode	(0XB00098EC);
	MakeCode	(x=0XB00098F0);
	OpStkvar	(x,	1);
	MakeComm	(0XB00098FC,	"int");
	MakeCode	(x=0XB0009900);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009904);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009908,	"method 0");
	MakeCode	(x=0XB000990C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009928,	"jumptable B0009870 case 1");
	MakeCode	(0XB0009928);
	MakeCode	(x=0XB0009934);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009938);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000993C,	"method 1");
	MakeCode	(x=0XB0009940);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009948,	"jumptable B0009870 case 2");
	MakeCode	(0XB0009948);
	MakeComm	(0XB000994C,	"caller");
	MakeRptCmt	(0XB0009950,	"arg2=mr[3]");
	MakeRptCmt	(0XB0009954,	"arg3=env");
	MakeCode	(x=0XB0009954);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000995C,	"arg1=&localvar");
	MakeCode	(x=0XB000995C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009960,	"localvar=mr[2]");
	MakeCode	(x=0XB0009960);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009964);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009968,	"method 2");
	MakeCode	(x=0XB000996C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009974,	"jumptable B0009870 case 3");
	MakeCode	(0XB0009974);
	MakeComm	(0XB0009978,	"caller");
	MakeComm	(0XB000997C,	"str");
	MakeComm	(0XB0009980,	"env");
	MakeCode	(x=0XB0009980);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009984);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009988,	"method 3");
	MakeCode	(x=0XB000998C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009994,	"jumptable B0009870 case 4");
	MakeCode	(0XB0009994);
	MakeComm	(0XB0009998,	"caller");
	MakeComm	(0XB00099A0,	"id");
	MakeCode	(x=0XB00099A0);
	OpStkvar	(x,	1);
	MakeComm	(0XB00099A4,	"env");
	MakeCode	(x=0XB00099A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00099A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00099AC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00099B0,	"method 4");
	MakeCode	(x=0XB00099B4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00099BC,	"jumptable B0009870 case 5");
	MakeCode	(0XB00099BC);
	MakeComm	(0XB00099C0,	"thread");
	MakeComm	(0XB00099C4,	"ip");
	MakeComm	(0XB00099C8,	"caller");
	MakeCode	(x=0XB00099CC);
	OpStkvar	(x,	1);
	MakeComm	(0XB00099D4,	"env");
	MakeCode	(x=0XB00099D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00099D8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00099DC,	"method 5");
	MakeCode	(x=0XB00099E0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00099E8,	"jumptable B0009870 case 6");
	MakeCode	(0XB00099E8);
	MakeCode	(x=0XB00099F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB00099F8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB00099FC,	"method 6");
	MakeCode	(x=0XB0009A00);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009A08);
	MakeName	(0XB0009A08,	"dispatch_iguana_hardware");
	MakeCode	(x=0XB0009A14);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009A18);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009A3C,	"attrs");
	MakeCode	(0XB0009A40);
	MakeCode	(x=0XB0009A48);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009A4C,	"irq");
	MakeComm	(0XB0009A50,	"hardwared");
	MakeComm	(0XB0009A54,	"caller");
	MakeCode	(x=0XB0009A58);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009A5C,	"env");
	MakeCode	(x=0XB0009A5C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009A60,	"method 0");
	MakeCode	(x=0XB0009A64);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009A88);
	MakeComm	(0XB0009A90,	"hw");
	MakeComm	(0XB0009A94,	"memsection");
	MakeComm	(0XB0009A98,	"caller");
	MakeCode	(x=0XB0009A9C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009AA0,	"attrs");
	MakeCode	(x=0XB0009AA0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009AA4,	"env");
	MakeCode	(x=0XB0009AA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009AA8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009AAC,	"method 1");
	MakeCode	(x=0XB0009AB0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009AC8);
	MakeName	(0XB0009AC8,	"dispatch_iguana_memsection");
	MakeCode	(x=0XB0009AD0);
	OpHex		(x,	1);
	MakeComm	(0XB0009AD4,	"env");
	MakeComm	(0XB0009AE0,	"switch 7 cases ");
	MakeComm	(0XB0009AE4,	"switch jump");
	MakeComm	(0XB0009AEC,	"jump table for switch statement");
	MakeDword	(x=0XB0009AEC);
	MakeArray	(x,	0X7);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0009B08,	"jumptable B0009AE4 case 6");
	MakeCode	(0XB0009B08);
	MakeComm	(0XB0009B0C,	"msect");
	MakeComm	(0XB0009B10,	"env");
	MakeCode	(x=0XB0009B10);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009B18,	"caller");
	MakeComm	(0XB0009B1C,	"pg");
	MakeCode	(x=0XB0009B1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009B20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009B24);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009B28,	"method 6");
	MakeCode	(x=0XB0009B2C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009B4C,	"jumptable B0009AE4 default case");
	MakeComm	(0XB0009B54,	"env");
	MakeRptCmt	(0XB0009B58,	"jumptable B0009AE4 case 0");
	MakeCode	(x=0XB0009B58);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009B60,	"caller");
	MakeComm	(0XB0009B64,	"msec");
	MakeComm	(0XB0009B68,	"thread");
	MakeCode	(x=0XB0009B6C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009B70,	"method 0");
	MakeCode	(x=0XB0009B74);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009B7C,	"jumptable B0009AE4 case 1");
	MakeCode	(0XB0009B7C);
	MakeComm	(0XB0009B80,	"serv");
	MakeCode	(x=0XB0009B80);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009B84,	"env");
	MakeCode	(x=0XB0009B84);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009B88,	"caller");
	MakeComm	(0XB0009B8C,	"address");
	MakeCode	(x=0XB0009B90);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009B94,	"method 1");
	MakeCode	(x=0XB0009B98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009BA0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009BBC,	"jumptable B0009AE4 case 2");
	MakeCode	(0XB0009BBC);
	MakeComm	(0XB0009BC0,	"env");
	MakeCode	(x=0XB0009BC0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009BC4,	"caller");
	MakeComm	(0XB0009BC8,	"msect");
	MakeComm	(0XB0009BCC,	"retsize");
	MakeCode	(x=0XB0009BCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009BD0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009BD4,	"method 2");
	MakeCode	(x=0XB0009BD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009BE4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009BEC,	"jumptable B0009AE4 case 3");
	MakeCode	(0XB0009BEC);
	MakeCode	(x=0XB0009BF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009BFC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009C00,	"method 3");
	MakeCode	(x=0XB0009C04);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009C1C,	"jumptable B0009AE4 case 4");
	MakeCode	(x=0XB0009C1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009C30);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009C34,	"method 4");
	MakeCode	(x=0XB0009C38);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009C40,	"jumptable B0009AE4 case 5");
	MakeCode	(0XB0009C40);
	MakeComm	(0XB0009C48,	"msect");
	MakeComm	(0XB0009C4C,	"caller");
	MakeComm	(0XB0009C50,	"env");
	MakeCode	(x=0XB0009C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009C54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009C5C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009C60,	"pg");
	MakeCode	(x=0XB0009C60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009C64);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009C68,	"env");
	MakeCode	(x=0XB0009C68);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009C6C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009C70,	"method 5");
	MakeCode	(x=0XB0009C74);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009C7C);
	MakeName	(0XB0009C7C,	"dispatch_iguana_session");
	MakeCode	(x=0XB0009C84);
	OpHex		(x,	1);
	MakeCode	(0XB0009CB4);
	MakeCode	(x=0XB0009CC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009CC4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009CC8,	"method 0");
	MakeCode	(x=0XB0009CCC);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009CEC);
	MakeCode	(x=0XB0009D00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009D04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009D08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009D0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009D10);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009D14,	"method 1");
	MakeCode	(x=0XB0009D18);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009D34);
	MakeCode	(x=0XB0009D44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009D4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009D50);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009D54,	"method 2");
	MakeCode	(x=0XB0009D58);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009D60);
	MakeName	(0XB0009D60,	"dispatch_iguana_debug");
	MakeCode	(x=0XB0009D70);
	OpHex		(x,	1);
	MakeComm	(0XB0009D74,	"env");
	MakeCode	(x=0XB0009D74);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009D88,	"res1");
	MakeCode	(x=0XB0009D88);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009D98,	"env");
	MakeComm	(0XB0009D9C,	"caller");
	MakeCode	(0XB0009D9C);
	MakeCode	(x=0XB0009DA0);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009DA4,	"method 0");
	MakeCode	(x=0XB0009DA8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009DC4);
	MakeComm	(0XB0009DCC,	"caller");
	MakeCode	(x=0XB0009DD0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0009DD4,	"env");
	MakeCode	(x=0XB0009DD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009DD8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009DDC,	"method 1");
	MakeCode	(x=0XB0009DE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009DE8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009E08);
	MakeName	(0XB0009E08,	"dispatch_iguana_xxx");
	MakeRptCmt	(0XB0009E14,	"get function id");
	MakeCode	(x=0XB0009E14);
	OpHex		(x,	1);
	MakeComm	(0XB0009E34,	"caller");
	MakeCode	(0XB0009E34);
	MakeComm	(0XB0009E38,	"env");
	MakeCode	(x=0XB0009E3C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0009E40,	"method 0");
	MakeCode	(x=0XB0009E44);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009E64);
	MakeName	(0XB0009E64,	"server_loop");
	MakeCode	(x=0XB0009E78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009E8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009E90);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009E94,	"jumptable B0009F1C default case");
	MakeCode	(x=0XB0009EA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009EA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009EB0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009EB4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009EBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009EC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009EC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009ECC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009EE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009EE4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0009F00,	"ignore low 5 nybles");
	MakeRptCmt	(0XB0009F08,	"0xffe0.0000");
	MakeComm	(0XB0009F18,	"switch 9 cases ");
	MakeComm	(0XB0009F1C,	"switch jump");
	MakeComm	(0XB0009F24,	"jump table for switch statement");
	MakeDword	(x=0XB0009F24);
	MakeArray	(x,	0X9);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB0009F48,	"jumptable B0009F1C case 8, uuid=30");
	MakeCode	(0XB0009F48);
	MakeComm	(0XB0009F4C,	"mr");
	MakeRptCmt	(0XB0009F58,	"jumptable B0009F1C case 6, uuid=28");
	MakeCode	(0XB0009F58);
	MakeRptCmt	(0XB0009F68,	"jumptable B0009F1C case 5, uuid=27");
	MakeCode	(0XB0009F68);
	MakeRptCmt	(0XB0009F78,	"jumptable B0009F1C case 4, uuid=26");
	MakeCode	(0XB0009F78);
	MakeRptCmt	(0XB0009F88,	"jumptable B0009F1C case 3, uuid=25");
	MakeCode	(0XB0009F88);
	MakeRptCmt	(0XB0009F98,	"jumptable B0009F1C case 2, uuid=24");
	MakeCode	(0XB0009F98);
	MakeRptCmt	(0XB0009FA8,	"jumptable B0009F1C case 1, uuid=23");
	MakeCode	(0XB0009FA8);
	MakeRptCmt	(0XB0009FB8,	"jumptable B0009F1C case 0, uuid=22");
	MakeCode	(0XB0009FB8);
	MakeCode	(x=0XB0009FC8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0009FD0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0009FD8);
	MakeCode	(x=0XB0009FE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0009FE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009FE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009FEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0009FFC);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB000A010);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A014);
	MakeCode	(x=0XB000A01C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A02C);
	OpStkvar	(x,	1);
	MakeCode	(0XB000A038);
	MakeCode	(0XB000A08C);
	MakeCode	(0XB000A098);
	MakeName	(0XB000A098,	"___divide_error");
	MakeCode	(x=0XB000A0AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A0C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A0C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A0CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A0D0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A0E4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB000A0F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000A0F8);
	OpStkvar	(x,	1);
	MakeName	(0XB000A0F8,	"__assert");
	MakeCode	(x=0XB000A0FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A10C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A114);
	OpStkvar	(x,	1);
	MakeComm	(0XB000A118,	"FILE *");
	MakeCode	(x=0XB000A120);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000A12C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000A130);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A134);
	MakeName	(0XB000A134,	"_fprintf");
	MakeCode	(x=0XB000A138);
	OpStkvar	(x,	1);
	MakeComm	(0XB000A13C,	"char *");
	MakeCode	(x=0XB000A13C);
	OpStkvar	(x,	1);
	MakeComm	(0XB000A140,	"int **");
	MakeCode	(x=0XB000A140);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A148);
	OpStkvar	(x,	1);
	MakeCode	(0XB000A154);
	MakeCode	(x=0XB000A158);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A168);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A184);
	OpOff		(x,	1,	0XB0041188);
	OpOff		(x,	129,	0XB0041188);
	MakeCode	(0XB000A18C);
	MakeCode	(0XB000A1C4);
	MakeDword	(x=0XB000A1E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000A1EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A1F0);
	MakeCode	(x=0XB000A1FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A20C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A214);
	OpOff		(x,	1,	0XB0041188);
	OpOff		(x,	129,	0XB0041188);
	MakeCode	(0XB000A2C8);
	MakeCode	(0XB000A2D8);
	MakeDword	(x=0XB000A2E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000A2E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000A2E8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A2F0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A318);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A344);
	OpHex		(x,	1);
	MakeName	(0XB000A344,	"_memset");
	MakeCode	(x=0XB000A348);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A34C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A398);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A3BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A3C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A3D8);
	OpStkvar	(x,	1);
	MakeCode	(0XB000A3DC);
	MakeName	(0XB000A3DC,	"_printf");
	MakeCode	(x=0XB000A3E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A3E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB000A3E8,	"char *");
	MakeCode	(x=0XB000A3E8);
	OpStkvar	(x,	1);
	MakeComm	(0XB000A3EC,	"FILE *");
	MakeComm	(0XB000A3F0,	"int **");
	MakeCode	(x=0XB000A3F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A3F8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB000A404);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A408);
	MakeName	(0XB000A408,	"puts");
	MakeCode	(x=0XB000A418);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A420);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000A44C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000A450);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000A490);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000A494);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A49C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A4A4);
	OpStkvar	(x,	1);
	MakeCode	(0XB000A4BC);
	MakeCode	(x=0XB000A4C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A4C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A4C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A4D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A4DC);
	OpStkvar	(x,	1);
	MakeName	(0XB000A4DC,	"strcmp");
	MakeCode	(x=0XB000A4F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A504);
	OpStkvar	(x,	1);
	MakeCode	(0XB000A508);
	MakeName	(0XB000A508,	"strcpy");
	MakeCode	(x=0XB000A534);
	OpStkvar	(x,	1);
	MakeName	(0XB000A534,	"_vfprintf");
	MakeCode	(x=0XB000A55C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A560);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000A568);
	MakeDword	(x=0XB000A56C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A570);
	MakeCode	(x=0XB000A574);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A580);
	OpOff		(x,	1,	0XB0047000);
	OpOff		(x,	129,	0XB0047000);
	MakeDword	(x=0XB000A588);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A58C);
	MakeCode	(x=0XB000A5B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A5CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A5D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A5E4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000A5F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A5F8);
	MakeName	(0XB000A5F8,	"_l4kdb_write");
	MakeCode	(x=0XB000A614);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A618);
	OpStkvar	(x,	1);
	MakeCode	(0XB000A624);
	MakeCode	(x=0XB000A650);
	OpHex		(x,	1);
	MakeCode	(0XB000A664);
	MakeCode	(0XB000A678);
	MakeCode	(0XB000A680);
	MakeCode	(x=0XB000A6AC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A6B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A6B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A6BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A6C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A6C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A6C8);
	OpOff		(x,	1,	0XB0040108);
	OpOff		(x,	129,	0XB0040108);
	MakeCode	(x=0XB000A6CC);
	OpOff		(x,	1,	0XB0040108);
	OpOff		(x,	129,	0XB0040108);
	MakeCode	(x=0XB000A6D0);
	OpOff		(x,	1,	0XB00400D0);
	OpOff		(x,	129,	0XB00400D0);
	MakeCode	(x=0XB000A6D4);
	OpOff		(x,	1,	0XB00400D0);
	OpOff		(x,	129,	0XB00400D0);
	MakeDword	(x=0XB000A6F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000A6FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000A700);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000A704);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A708);
	MakeCode	(x=0XB000A710);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A71C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000A720);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A724);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A734);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A738);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A740);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A748);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000A758,	"jumptable B000A818 case 5");
	MakeCode	(x=0XB000A758);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A778);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A784);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A78C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A790);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A79C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000A7F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A7FC);
	OpStkvar	(x,	1);
	MakeComm	(0XB000A814,	"switch 91 cases ");
	MakeComm	(0XB000A818,	"switch jump");
	MakeComm	(0XB000A820,	"jump table for switch statement");
	MakeDword	(x=0XB000A820);
	MakeArray	(x,	0X5B);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000A98C);
	MakeCode	(x=0XB000A990);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A99C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A9A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A9B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A9B8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000A9C4,	"jumptable B000A818 cases 33,37,39,65,69-71");
	MakeCode	(0XB000A9C4);
	MakeCode	(x=0XB000A9C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A9D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A9DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000A9E4);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000A9EC,	"jumptable B000A818 default case");
	MakeCode	(x=0XB000AA08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA70);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AA74);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AA8C,	"jumptable B000A818 case 56");
	MakeCode	(x=0XB000AA8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB000AA90,	"jumptable B000A818 case 88");
	MakeCode	(x=0XB000AA90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AAA0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000AAA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AAAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AAB0);
	OpStkvar	(x,	1);
	MakeComm	(0XB000AAB8,	"switch 5 cases ");
	MakeComm	(0XB000AABC,	"switch jump");
	MakeComm	(0XB000AAC4,	"jump table for switch statement");
	MakeDword	(x=0XB000AAC4);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB000AAD8,	"jumptable B000A818 case 85");
	MakeCode	(0XB000AAD8);
	MakeCode	(x=0XB000AADC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AAE4,	"jumptable B000A818 case 83");
	MakeCode	(x=0XB000AAE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AAF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AAFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB2C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AB34,	"jumptable B000A818 case 80");
	MakeCode	(0XB000AB34);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	MakeCode	(x=0XB000AB48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000AB5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AB9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ABF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AC00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AC18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AC1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AC2C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AC38,	"jumptable B000A818 case 79");
	MakeCode	(0XB000AC38);
	MakeCode	(x=0XB000AC3C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AC44,	"jumptable B000A818 case 78");
	MakeCode	(0XB000AC44);
	MakeComm	(0XB000AC48,	"switch 5 cases ");
	MakeComm	(0XB000AC4C,	"switch jump");
	MakeComm	(0XB000AC54,	"jump table for switch statement");
	MakeDword	(x=0XB000AC54);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB000AC68,	"jumptable B000A818 cases 44,76");
	MakeCode	(0XB000AC68);
	MakeRptCmt	(0XB000AC74,	"jumptable B000A818 case 74");
	MakeCode	(0XB000AC74);
	MakeRptCmt	(0XB000AC80,	"jumptable B000A818 cases 68,73");
	MakeCode	(0XB000AC80);
	MakeComm	(0XB000AC84,	"switch 5 cases ");
	MakeComm	(0XB000AC88,	"switch jump");
	MakeComm	(0XB000AC90,	"jump table for switch statement");
	MakeDword	(x=0XB000AC90);
	MakeArray	(x,	0X5);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeRptCmt	(0XB000ACA4,	"jumptable B000A818 case 72");
	MakeCode	(0XB000ACA4);
	MakeRptCmt	(0XB000ACB0,	"jumptable B000A818 case 67");
	MakeCode	(0XB000ACB0);
	MakeCode	(x=0XB000ACB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACD4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ACFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD20);
	OpHex		(x,	1);
	MakeCode	(x=0XB000AD38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD68);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AD98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ADA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ADC0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ADC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000ADDC);
	OpStkvar	(x,	1);
	MakeCode	(0XB000ADEC);
	MakeCode	(x=0XB000AE1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AE24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AE30);
	OpHex		(x,	1);
	MakeCode	(x=0XB000AE48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AE4C);
	OpStkvar	(x,	1);
	MakeCode	(0XB000AE64);
	MakeCode	(x=0XB000AE98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AEA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AEC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AEF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AEF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF50);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AF58,	"jumptable B000A818 cases 17-25");
	MakeCode	(0XB000AF58);
	MakeCode	(x=0XB000AF5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF64);
	OpHex		(x,	1);
	MakeCode	(x=0XB000AF78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AF88);
	OpHex		(x,	1);
	MakeCode	(x=0XB000AF98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AFA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AFAC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AFB4,	"jumptable B000A818 case 16");
	MakeCode	(0XB000AFB4);
	MakeCode	(x=0XB000AFB8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AFC4,	"jumptable B000A818 case 14");
	MakeCode	(0XB000AFC4);
	MakeCode	(x=0XB000AFC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000AFD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AFE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000AFEC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000AFF8,	"jumptable B000A818 case 13");
	MakeCode	(0XB000AFF8);
	MakeRptCmt	(0XB000B004,	"jumptable B000A818 cases 0,11");
	MakeCode	(x=0XB000B004);
	OpHex		(x,	1);
	MakeCode	(x=0XB000B00C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B010);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B01C,	"jumptable B000A818 case 10");
	MakeCode	(0XB000B01C);
	MakeCode	(x=0XB000B024);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B02C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B038);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B03C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B048,	"jumptable B000A818 case 3");
	MakeCode	(0XB000B048);
	MakeCode	(x=0XB000B04C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B058,	"jumptable B000A818 cases 84,90");
	MakeCode	(0XB000B058);
	MakeCode	(0XB000B064);
	MakeCode	(0XB000B06C);
	MakeCode	(x=0XB000B078);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B0A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B0AC);
	OpStkvar	(x,	1);
	MakeCode	(0XB000B0D4);
	MakeComm	(0XB000B0E0,	"char *");
	MakeCode	(0XB000B0E0);
	MakeCode	(x=0XB000B0E8);
	OpStkvar	(x,	1);
	MakeCode	(0XB000B0F0);
	MakeCode	(x=0XB000B0FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B104);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B120);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B128,	"jumptable B000AABC cases 2,3");
	MakeCode	(x=0XB000B128);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B134);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B148,	"jumptable B000AABC cases 0,1");
	MakeCode	(x=0XB000B148);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B154);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B164,	"jumptable B000AABC case 4");
	MakeCode	(0XB000B164);
	MakeCode	(x=0XB000B170);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B178);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B180,	"jumptable B000AC4C case 2");
	MakeCode	(x=0XB000B180);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B188);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B190);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B19C,	"jumptable B000AC4C case 1");
	MakeCode	(x=0XB000B19C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B1A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B1AC);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B1B8,	"jumptable B000AC4C case 0");
	MakeCode	(x=0XB000B1B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B1C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B1C8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B1D4,	"jumptable B000AC88 case 4");
	MakeCode	(x=0XB000B1D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B1E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B1F8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B200,	"jumptable B000AC88 case 3");
	MakeCode	(x=0XB000B200);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B20C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B218,	"jumptable B000AC88 case 2");
	MakeCode	(x=0XB000B218);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B224);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B22C,	"jumptable B000AC88 case 1");
	MakeCode	(x=0XB000B22C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B238);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B240,	"jumptable B000AC88 case 0");
	MakeCode	(x=0XB000B240);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B24C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B254,	"jumptable B000AC4C case 4");
	MakeCode	(x=0XB000B254);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B258);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B26C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B278,	"jumptable B000AC4C case 3");
	MakeCode	(x=0XB000B278);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B280);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B288);
	OpStkvar	(x,	1);
	MakeCode	(0XB000B294);
	MakeCode	(x=0XB000B2A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B2AC);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB000B2B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B2B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B2BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B2C0);
	MakeCode	(x=0XB000B2CC);
	OpStkvar	(x,	1);
	MakeCode	(0XB000B30C);
	MakeName	(0XB000B30C,	"_strlen");
	MakeCode	(0XB000B330);
	MakeName	(0XB000B330,	"_bfl_free");
	MakeCode	(x=0XB000B348);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B34C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B350);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B364);
	OpHex		(x,	1);
	MakeCode	(0XB000B378);
	MakeCode	(0XB000B37C);
	MakeDword	(x=0XB000B380);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B384);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B388);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B38C);
	MakeComm	(0XB000B3B4,	"int");
	MakeComm	(0XB000B3C0,	"size_t");
	MakeComm	(0XB000B3C4,	"void *");
	MakeCode	(0XB000B3F4);
	MakeName	(0XB000B3F4,	"_find_first_set");
	MakeCode	(0XB000B464);
	MakeCode	(0XB000B478);
	MakeCode	(x=0XB000B484);
	OpHex		(x,	1);
	MakeCode	(x=0XB000B4B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B4BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B4C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000B4CC);
	MakeCode	(0XB000B4D4);
	MakeDword	(x=0XB000B4EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B4F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B4F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B4F8);
	MakeCode	(0XB000B4FC);
	MakeCode	(x=0XB000B514);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B518);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B51C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B530);
	OpHex		(x,	1);
	MakeCode	(0XB000B540);
	MakeCode	(0XB000B544);
	MakeCode	(x=0XB000B54C);
	OpHex		(x,	1);
	MakeDword	(x=0XB000B55C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B560);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B564);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B568);
	MakeName	(0XB000B568,	"_bfl_alloc_bit");
	MakeCode	(x=0XB000B580);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B584);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B588);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B59C);
	OpHex		(x,	1);
	MakeCode	(0XB000B5B0);
	MakeCode	(0XB000B5B4);
	MakeDword	(x=0XB000B5B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B5BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B5C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000B5C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000B5D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B5D4);
	MakeCode	(x=0XB000B5D8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB000B5E4,	"v2");
	MakeComm	(0XB000B5E8,	"v1");
	MakeCode	(x=0XB000B604);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeComm	(0XB000B60C,	"return -1, 1 or 2");
	MakeDword	(x=0XB000B614);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B618);
	MakeCode	(x=0XB000B628);
	OpHex		(x,	1);
	MakeCode	(x=0XB000B634);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB000B654);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000B658);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B65C,	"push retaddr, make new frame, round it to even size");
	MakeCode	(x=0XB000B668);
	OpHex		(x,	1);
	MakeCode	(x=0XB000B674);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB000B680,	"call r2->0x14");
	MakeRptCmt	(0XB000B684,	"return");
	MakeCode	(x=0XB000B690);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB000B694);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000B698);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000B6A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000B6B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B6D0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB000B6D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000B6D8);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB000B6DC,	"arg0->4 != arg1? return -1");
	MakeCode	(x=0XB000B6E4);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeRptCmt	(0XB000B6F0,	"arg0->magic == 0x474e5543 || arg0->magic == 0x5256432f?");
	MakeRptCmt	(0XB000B70C,	"arg0->8 == arg3?");
	MakeCode	(x=0XB000B710);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeCode	(x=0XB000B72C);
	OpStkvar	(x,	1);
	MakeCode	(0XB000B730);
	MakeRptCmt	(0XB000B734,	"|| arg0->magic == 0x52564312");
	MakeCode	(x=0XB000B738);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeDword	(0XB000B744);
	MakeDword	(0XB000B748);
	MakeCode	(x=0XB000B74C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B75C);
	OpOff		(x,	1,	0XB0041194);
	OpOff		(x,	129,	0XB0041194);
	MakeCode	(x=0XB000B760);
	OpOff		(x,	1,	0XB0041194);
	OpOff		(x,	129,	0XB0041194);
	MakeCode	(x=0XB000B764);
	OpOff		(x,	1,	0XB0041194);
	OpOff		(x,	129,	0XB0041194);
	MakeCode	(x=0XB000B768);
	OpOff		(x,	1,	0XB0041194);
	OpOff		(x,	129,	0XB0041194);
	MakeCode	(x=0XB000B770);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B778);
	OpOff		(x,	1,	0XB0041194);
	OpOff		(x,	129,	0XB0041194);
	MakeDword	(x=0XB000B7B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B7B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000B7BC);
	OpStkvar	(x,	1);
	MakeName	(0XB000B7BC,	"_ll_new");
	MakeCode	(x=0XB000B7DC);
	OpStkvar	(x,	1);
	MakeCode	(0XB000B7E0);
	MakeName	(0XB000B7E0,	"_ll_insert_before");
	MakeCode	(0XB000B814);
	MakeName	(0XB000B814,	"_ll_delete");
	MakeCode	(0XB000B838);
	MakeCode	(0XB000B844);
	MakeName	(0XB000B844,	"_dl_list_create_back");
	MakeCode	(0XB000B880);
	MakeName	(0XB000B880,	"_int_log2");
	MakeCode	(x=0XB000B8AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B8B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000B8B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000B8C0);
	MakeDword	(x=0XB000B8D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B8D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000B8D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000B8DC);
	MakeCode	(0XB000B904);
	MakeCode	(x=0XB000B910);
	OpHex		(x,	1);
	MakeCode	(0XB000B92C);
	MakeName	(0XB000B92C,	"_L4_KDB_Enter");
	MakeCode	(0XB000B944);
	MakeCode	(0XB000B95C);
	MakeCode	(0XB000B974);
	MakeCode	(0XB000B98C);
	MakeName	(0XB000B98C,	"_L4_KDB_PrintChar_ASM");
	MakeCode	(0XB000B9A4);
	MakeCode	(0XB000B9BC);
	MakeCode	(0XB000B9D4);
	MakeCode	(0XB000B9EC);
	MakeCode	(0XB000BA04);
	MakeCode	(0XB000BA1C);
	MakeCode	(0XB000BA34);
	MakeCode	(0XB000BA4C);
	MakeCode	(0XB000BA64);
	MakeName	(0XB000BA64,	"_L4_KDB_SetThreadName_ASM");
	MakeCode	(0XB000BA8C);
	MakeName	(0XB000BA8C,	"_L4_KernelInterface");
	MakeCode	(0XB000BAC4);
	MakeName	(0XB000BAC4,	"L4_ExchangeRegisters");
	MakeCode	(x=0XB000BAC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BACC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BAD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BAD8);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB000BAE0);
	OpStkvar	(x,	1);
	MakeCode	(0XB000BB04);
	MakeName	(0XB000BB04,	"L4_ThreadControl");
	MakeCode	(x=0XB000BB08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BB0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BB10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BB18);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(0XB000BB24);
	MakeCode	(0XB000BB38);
	MakeName	(0XB000BB38,	"_L4_Schedule");
	MakeCode	(x=0XB000BB3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BB40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BB48);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB000BB50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BB54);
	OpStkvar	(x,	1);
	MakeCode	(0XB000BB6C);
	MakeName	(0XB000BB6C,	"L4_Ipc");
	MakeCode	(0XB000BBD4);
	MakeCode	(0XB000BBF8);
	MakeCode	(0XB000BC28);
	MakeCode	(0XB000BC9C);
	MakeName	(0XB000BC9C,	"L4_MapControl");
	MakeCode	(x=0XB000BCA4);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB000BCA8);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB000BCB0);
	MakeName	(0XB000BCB0,	"L4_SpaceControl");
	MakeCode	(x=0XB000BCB8);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB000BCC0);
	OpStkvar	(x,	1);
	MakeCode	(0XB000BCD0);
	MakeCode	(0XB000BCE4);
	MakeName	(0XB000BCE4,	"L4_CacheControl");
	MakeCode	(x=0XB000BCEC);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(0XB000BCF8);
	MakeName	(0XB000BCF8,	"L4_IpcControl");
	MakeCode	(x=0XB000BD00);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(0XB000BD0C);
	MakeCode	(x=0XB000BD14);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB000BD24);
	MakeCode	(0XB000BDA0);
	MakeCode	(0XB000BDE0);
	MakeCode	(0XB000BDE4);
	MakeCode	(x=0XB000BE04);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BE78);
	OpStkvar	(x,	1);
	MakeCode	(0XB000BE7C);
	MakeCode	(0XB000BF0C);
	MakeCode	(x=0XB000BFC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000BFE0);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C0B0);
	MakeCode	(0XB000C0B8);
	MakeCode	(0XB000C0D4);
	MakeCode	(0XB000C108);
	MakeCode	(0XB000C114);
	MakeCode	(x=0XB000C14C);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C1BC);
	MakeCode	(x=0XB000C218);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C28C);
	MakeCode	(0XB000C2E8);
	MakeCode	(0XB000C310);
	MakeCode	(0XB000C334);
	MakeCode	(0XB000C3B4);
	MakeCode	(x=0XB000C3C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C3D4);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C4B4);
	MakeCode	(0XB000C4F8);
	MakeCode	(0XB000C520);
	MakeCode	(0XB000C528);
	MakeCode	(0XB000C53C);
	MakeCode	(x=0XB000C5A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C658);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C66C);
	MakeCode	(0XB000C680);
	MakeCode	(x=0XB000C6A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C6A8);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C6B4);
	MakeCode	(0XB000C72C);
	MakeCode	(x=0XB000C730);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C73C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C740);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C744);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C75C);
	MakeCode	(x=0XB000C7B0);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C7C8);
	MakeCode	(0XB000C7D0);
	MakeName	(0XB000C7D0,	"_l4e_min_pagebits");
	MakeCode	(x=0XB000C7D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000C7F4);
	MakeCode	(x=0XB000C7F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C7FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C808);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C80C);
	OpHex		(x,	1);
	MakeCode	(0XB000C814);
	MakeCode	(x=0XB000C820);
	OpHex		(x,	1);
	MakeDword	(x=0XB000C830);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB000C834);
	OpStkvar	(x,	1);
	MakeName	(0XB000C834,	"_l4e_min_pagesize");
	MakeCode	(x=0XB000C844);
	OpStkvar	(x,	1);
	MakeCode	(0XB000C848);
	MakeName	(0XB000C848,	"_l4e_biggest_fpage");
	MakeCode	(0XB000C868);
	MakeCode	(x=0XB000C8C8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C8CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C8D4);
	OpHex		(x,	1);
	MakeCode	(0XB000C8DC);
	MakeCode	(x=0XB000C8F0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C8F4);
	OpHex		(x,	1);
	MakeCode	(0XB000C920);
	MakeName	(0XB000C920,	"l4e_map");
	MakeCode	(x=0XB000C944);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C964);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C974);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C97C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C988);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C99C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C9E0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C9E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C9EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000C9F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C9F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000C9F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CA00);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CA04);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CA1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CA2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CA34);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CA44);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CA68);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CA78);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CA8C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CAD4);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CAD8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CAE0);
	OpHex		(x,	1);
	MakeCode	(0XB000CAE8);
	MakeCode	(x=0XB000CAF0);
	OpHex		(x,	1);
	MakeCode	(0XB000CB00);
	MakeCode	(x=0XB000CB48);
	OpHex		(x,	1);
	MakeCode	(0XB000CB68);
	MakeCode	(0XB000CB74);
	MakeCode	(x=0XB000CBA8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CBB0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CBBC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CBD8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CBDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CBE8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CBF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CBFC);
	OpHex		(x,	1);
	MakeCode	(0XB000CC18);
	MakeCode	(x=0XB000CC24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CC64);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CC68);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CC78);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CC88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CC9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CCA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CCBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CCC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CCCC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CCE0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CCF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CD60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CD68);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CD6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CD70);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CD74);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CD7C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CD88);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CD8C);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CDA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CDC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CDCC);
	OpHex		(x,	1);
	MakeCode	(x=0XB000CDE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000CE3C);
	OpStkvar	(x,	1);
	MakeCode	(0XB000CE40);
	MakeCode	(x=0XB000CE58);
	OpStkvar	(x,	1);
	MakeCode	(0XB000CE5C);
	MakeCode	(0XB000CE78);
	MakeName	(0XB000CE78,	"_cb_new_withmem");
	MakeCode	(0XB000CEC0);
	MakeCode	(0XB000CED0);
	MakeName	(0XB000CED0,	"_hash_init");
	MakeCode	(x=0XB000CF44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000CF48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000CF4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000CF58);
	MakeCode	(x=0XB000CF68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000CF6C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000CF70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000CF7C);
	MakeCode	(x=0XB000CF84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000CF88);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB000CF8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB000CF98);
	MakeDword	(x=0XB000CF9C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000CFA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000CFA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000CFA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB000CFAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB000CFB0);
	MakeCode	(0XB000CFD4);
	MakeCode	(0XB000CFFC);
	MakeCode	(0XB000D01C);
	MakeCode	(0XB000D024);
	MakeCode	(0XB000D078);
	MakeCode	(0XB000D0DC);
	MakeCode	(0XB000D0F4);
	MakeCode	(0XB000D104);
	MakeName	(0XB000D104,	"j__ll_new");
	MakeCode	(0XB000D108);
	MakeCode	(0XB000D1BC);
	MakeCode	(0XB000D1C4);
	MakeCode	(0XB000D1CC);
	MakeCode	(0XB000D204);
	MakeCode	(0XB000D20C);
	MakeCode	(0XB000D250);
	MakeCode	(x=0XB000D260);
	OpStkvar	(x,	1);
	MakeName	(0XB000D260,	"___udivdi3");
	MakeCode	(x=0XB000D26C);
	OpStkvar	(x,	1);
	MakeCode	(0XB000D27C);
	MakeCode	(x=0XB000D294);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D2A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D2F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D314);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D324);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D370);
	OpStkvar	(x,	1);
	MakeCode	(0XB000D380);
	MakeCode	(x=0XB000D384);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D390);
	OpStkvar	(x,	1);
	MakeName	(0XB000D390,	"___umoddi3");
	MakeCode	(x=0XB000D398);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB000D39C);
	OpStkvar	(x,	1);
	MakeStr		(0XB000D3B0,	0XB000D3BB);
	MakeName	(0XB000D3B0,	"aBi_execute");
	MakeByte	(0XB000D3BB);
	MakeStr		(0XB000D3BC,	0XB000D3DC);
	MakeName	(0XB000D3BC,	"aObj_array_size");
	MakeStr		(0XB000D3DC,	0XB000D3F9);
	MakeName	(0XB000D3DC,	"aIguanaServer_8");
	MakeByte	(0XB000D3F9);
	MakeArray	(0XB000D3F9,	0X3);
	MakeStr		(0XB000D3FC,	0XB000D415);
	MakeName	(0XB000D3FC,	"aFree_pdTotal_n");
	MakeByte	(0XB000D415);
	MakeArray	(0XB000D415,	0X3);
	MakeStr		(0XB000D418,	0XB000D439);
	MakeName	(0XB000D418,	"aFree_threadTot");
	MakeByte	(0XB000D439);
	MakeArray	(0XB000D439,	0X3);
	MakeStr		(0XB000D43C,	0XB000D44E);
	MakeName	(0XB000D43C,	"aEas_create_thr");
	MakeWord	(0XB000D44E);
	MakeStr		(0XB000D450,	0XB000D46D);
	MakeName	(0XB000D450,	"aWarnEasNotReus");
	MakeByte	(0XB000D46D);
	MakeArray	(0XB000D46D,	0X3);
	MakeStr		(0XB000D470,	0XB000D489);
	MakeName	(0XB000D470,	"aThisShouldnTHa");
	MakeByte	(0XB000D489);
	MakeArray	(0XB000D489,	0X3);
	MakeStr		(0XB000D48C,	0XB000D4A4);
	MakeName	(0XB000D48C,	"aIguanaServer_9");
	MakeStr		(0XB000D4A4,	0XB000D4B6);
	MakeName	(0XB000D4A4,	"aEasCorruption");
	MakeWord	(0XB000D4B6);
	MakeDword	(0XB000D4B8);
	MakeArray	(0XB000D4B8,	0X2);
	MakeByte	(0XB000D4C0);
	MakeByte	(0XB000D4C1);
	MakeWord	(0XB000D4C2);
	MakeDword	(0XB000D4C4);
	MakeArray	(0XB000D4C4,	0X4);
	MakeStr		(0XB000D4D4,	0XB000D4DA);
	MakeName	(0XB000D4D4,	"aWrite");
	MakeWord	(0XB000D4DA);
	MakeStr		(0XB000D4DC,	0XB000D4E4);
	MakeName	(0XB000D4DC,	"aExecute");
	MakeStr		(0XB000D4E4,	0XB000D4EC);
	MakeName	(0XB000D4E4,	"aUnknown");
	MakeStr		(0XB000D4EC,	0XB000D4FE);
	MakeName	(0XB000D4EC,	"aIs_threadThrea");
	MakeWord	(0XB000D4FE);
	MakeStr		(0XB000D500,	0XB000D522);
	MakeName	(0XB000D500,	"aIguanaServerSr");
	MakeWord	(0XB000D522);
	MakeStr		(0XB000D524,	0XB000D52E);
	MakeName	(0XB000D524,	"aIs_pdPd");
	MakeWord	(0XB000D52E);
	MakeStr		(0XB000D530,	0XB000D541);
	MakeName	(0XB000D530,	"aUnknownModule");
	MakeByte	(0XB000D541);
	MakeArray	(0XB000D541,	0X3);
	MakeStr		(0XB000D544,	0XB000D585);
	MakeName	(0XB000D544,	"aInvalidSFaultL");
	MakeByte	(0XB000D585);
	MakeArray	(0XB000D585,	0X3);
	MakeStr		(0XB000D588,	0XB000D5BE);
	MakeName	(0XB000D588,	"aFaultIsNearSta");
	MakeWord	(0XB000D5BE);
	MakeStr		(0XB000D5C0,	0XB000D5F4);
	MakeName	(0XB000D5C0,	"aInvalidPfTidLx");
	MakeStr		(0XB000D5F4,	0XB000D610);
	MakeName	(0XB000D5F4,	"aCouldnTMapSecu");
	MakeStr		(0XB000D610,	0XB000D657);
	MakeName	(0XB000D610,	"aOutOfMemorySFa");
	MakeByte	(0XB000D657);
	MakeStr		(0XB000D658,	0XB000D67D);
	MakeName	(0XB000D658,	"aIguana_serverN");
	MakeByte	(0XB000D67D);
	MakeArray	(0XB000D67D,	0X3);
	MakeStr		(0XB000D680,	0XB000D6AC);
	MakeName	(0XB000D680,	"aIguana_serverE");
	MakeStr		(0XB000D6AC,	0XB000D6BE);
	MakeName	(0XB000D6AC,	"aException_hand");
	MakeWord	(0XB000D6BE);
	MakeStr		(0XB000D6C0,	0XB000D6C7);
	MakeName	(0XB000D6C0,	"aR0");
	MakeByte	(0XB000D6C7);
	MakeStr		(0XB000D6C8,	0XB000D6D1);
	MakeName	(0XB000D6C8,	"aRet0");
	MakeByte	(0XB000D6D1);
	MakeArray	(0XB000D6D1,	0X3);
	MakeStr		(0XB000D6D4,	0XB000D6E8);
	MakeName	(0XB000D6D4,	"aIguana_pd_mypd");
	MakeStr		(0XB000D6E8,	0XB000D70D);
	MakeName	(0XB000D6E8,	"aIguana_hardwar");
	MakeByte	(0XB000D70D);
	MakeArray	(0XB000D70D,	0X3);
	MakeStr		(0XB000D710,	0XB000D736);
	MakeName	(0XB000D710,	"aIguana_memsect");
	MakeWord	(0XB000D736);
	MakeStr		(0XB000D738,	0XB000D73D);
	MakeName	(0XB000D738,	"aCung");
	MakeByte	(0XB000D73D);
	MakeArray	(0XB000D73D,	0X3);
	MakeDword	(0XB000D740);
	MakeDword	(0XB000D744);
	MakeArray	(0XB000D744,	0XB);
	MakeStr		(0XB000D770,	0XB000D775);
	MakeName	(0XB000D770,	"aMain");
	MakeByte	(0XB000D775);
	MakeArray	(0XB000D775,	0X3);
	MakeStr		(0XB000D778,	0XB000D7A5);
	MakeName	(0XB000D778,	"aPanicBootinfoD");
	MakeByte	(0XB000D7A5);
	MakeArray	(0XB000D7A5,	0X3);
	MakeStr		(0XB000D7A8,	0XB000D7C3);
	MakeName	(0XB000D7A8,	"aShouldNeverRea");
	MakeByte	(0XB000D7C3);
	MakeStr		(0XB000D7C4,	0XB000D7DD);
	MakeName	(0XB000D7C4,	"aIguanaServer_0");
	MakeByte	(0XB000D7DD);
	MakeArray	(0XB000D7DD,	0X3);
	MakeStr		(0XB000D7E0,	0XB000D7FB);
	MakeName	(0XB000D7E0,	"aMemsection_ini");
	MakeByte	(0XB000D7FB);
	MakeStr		(0XB000D7FC,	0XB000D81D);
	MakeName	(0XB000D7FC,	"aMemsection_i_0");
	MakeByte	(0XB000D81D);
	MakeArray	(0XB000D81D,	0X3);
	MakeStr		(0XB000D820,	0XB000D841);
	MakeName	(0XB000D820,	"aDelete_memsect");
	MakeByte	(0XB000D841);
	MakeArray	(0XB000D841,	0X3);
	MakeStr		(0XB000D844,	0XB000D85F);
	MakeName	(0XB000D844,	"aMemsection_reg");
	MakeByte	(0XB000D85F);
	MakeStr		(0XB000D860,	0XB000D877);
	MakeName	(0XB000D860,	"aMemsection_loo");
	MakeByte	(0XB000D877);
	MakeStr		(0XB000D878,	0XB000D896);
	MakeName	(0XB000D878,	"aMemsection_rem");
	MakeWord	(0XB000D896);
	MakeStr		(0XB000D898,	0XB000D8B6);
	MakeName	(0XB000D898,	"aMemsection_ins");
	MakeWord	(0XB000D8B6);
	MakeStr		(0XB000D8B8,	0XB000D8CA);
	MakeName	(0XB000D8B8,	"aMemsection_del");
	MakeWord	(0XB000D8CA);
	MakeStr		(0XB000D8CC,	0XB000D8E4);
	MakeName	(0XB000D8CC,	"aMemsection_cre");
	MakeStr		(0XB000D8E4,	0XB000D8F7);
	MakeName	(0XB000D8E4,	"aMsLoad_count0");
	MakeByte	(0XB000D8F7);
	MakeStr		(0XB000D8F8,	0XB000D917);
	MakeName	(0XB000D8F8,	"aIguanaServer_1");
	MakeByte	(0XB000D917);
	MakeStr		(0XB000D918,	0XB000D91B);
	MakeName	(0XB000D918,	"aMs");
	MakeByte	(0XB000D91B);
	MakeStr		(0XB000D91C,	0XB000D92E);
	MakeName	(0XB000D91C,	"aMsMapping_tabl");
	MakeWord	(0XB000D92E);
	MakeStr		(0XB000D930,	0XB000D965);
	MakeName	(0XB000D930,	"aPool_index0Poo");
	MakeByte	(0XB000D965);
	MakeArray	(0XB000D965,	0X3);
	MakeStr		(0XB000D968,	0XB000D972);
	MakeName	(0XB000D968,	"aSize1");
	MakeWord	(0XB000D972);
	MakeStr		(0XB000D974,	0XB000D97D);
	MakeName	(0XB000D974,	"aPool_ptr");
	MakeByte	(0XB000D97D);
	MakeArray	(0XB000D97D,	0X3);
	MakeStr		(0XB000D980,	0XB000D9A2);
	MakeName	(0XB000D980,	"aPoolMemsection");
	MakeWord	(0XB000D9A2);
	MakeStr		(0XB000D9A4,	0XB000D9C3);
	MakeName	(0XB000D9A4,	"aPoolMemsecti_0");
	MakeByte	(0XB000D9C3);
	MakeStr		(0XB000D9C4,	0XB000D9C9);
	MakeName	(0XB000D9C4,	"aNode");
	MakeByte	(0XB000D9C9);
	MakeArray	(0XB000D9C9,	0X3);
	MakeStr		(0XB000D9CC,	0XB000D9D1);
	MakeName	(0XB000D9CC,	"aSelf");
	MakeByte	(0XB000D9D1);
	MakeArray	(0XB000D9D1,	0X3);
	MakeStr		(0XB000D9D4,	0XB000DA27);
	MakeName	(0XB000D9D4,	"aPoolMemsecti_1");
	MakeByte	(0XB000DA27);
	MakeStr		(0XB000DA28,	0XB000DA7A);
	MakeName	(0XB000DA28,	"aPoolMemsecti_2");
	MakeWord	(0XB000DA7A);
	MakeStr		(0XB000DA7C,	0XB000DACE);
	MakeName	(0XB000DA7C,	"aPoolMemsecti_3");
	MakeWord	(0XB000DACE);
	MakeStr		(0XB000DAD0,	0XB000DB15);
	MakeName	(0XB000DAD0,	"aErrorFaultOccu");
	MakeByte	(0XB000DB15);
	MakeArray	(0XB000DB15,	0X3);
	MakeStr		(0XB000DB18,	0XB000DB45);
	MakeName	(0XB000DB18,	"aPoolMemsecti_4");
	MakeByte	(0XB000DB45);
	MakeArray	(0XB000DB45,	0X3);
	MakeStr		(0XB000DB48,	0XB000DB75);
	MakeName	(0XB000DB48,	"aPoolMemsecti_5");
	MakeByte	(0XB000DB75);
	MakeArray	(0XB000DB75,	0X3);
	MakeStr		(0XB000DB78,	0XB000DB9D);
	MakeName	(0XB000DB78,	"aUnableToLoadPa");
	MakeByte	(0XB000DB9D);
	MakeArray	(0XB000DB9D,	0X3);
	MakeStr		(0XB000DBA0,	0XB000DBC5);
	MakeName	(0XB000DBA0,	"aMemsectFlagsMe");
	MakeByte	(0XB000DBC5);
	MakeArray	(0XB000DBC5,	0X3);
	MakeStr		(0XB000DBC8,	0XB000DBD0);
	MakeName	(0XB000DBC8,	"aMemsect");
	MakeStr		(0XB000DBD0,	0XB000DBD7);
	MakeName	(0XB000DBD0,	"aR1");
	MakeByte	(0XB000DBD7);
	MakeStr		(0XB000DBD8,	0XB000DBE7);
	MakeName	(0XB000DBD8,	"aObjtable_setup");
	MakeByte	(0XB000DBE7);
	MakeStr		(0XB000DBE8,	0XB000DBFD);
	MakeName	(0XB000DBE8,	"aObjtable_set_0");
	MakeByte	(0XB000DBFD);
	MakeArray	(0XB000DBFD,	0X3);
	MakeStr		(0XB000DC00,	0XB000DC14);
	MakeName	(0XB000DC00,	"aObjtable_set_1");
	MakeStr		(0XB000DC14,	0XB000DC2C);
	MakeName	(0XB000DC14,	"aObjtable_set_2");
	MakeStr		(0XB000DC2C,	0XB000DC42);
	MakeName	(0XB000DC2C,	"aObjtable_set_3");
	MakeWord	(0XB000DC42);
	MakeStr		(0XB000DC44,	0XB000DC54);
	MakeName	(0XB000DC44,	"aObjtable_delet");
	MakeStr		(0XB000DC54,	0XB000DC67);
	MakeName	(0XB000DC54,	"aFlagsMem_norma");
	MakeByte	(0XB000DC67);
	MakeStr		(0XB000DC68,	0XB000DC85);
	MakeName	(0XB000DC68,	"aIguanaServer_2");
	MakeByte	(0XB000DC85);
	MakeArray	(0XB000DC85,	0X3);
	MakeStr		(0XB000DC88,	0XB000DC9A);
	MakeName	(0XB000DC88,	"aFlagsMem_fixed");
	MakeWord	(0XB000DC9A);
	MakeStr		(0XB000DC9C,	0XB000DCAD);
	MakeName	(0XB000DC9C,	"aFlagsMem_utcb");
	MakeByte	(0XB000DCAD);
	MakeArray	(0XB000DCAD,	0X3);
	MakeStr		(0XB000DCB0,	0XB000DCC5);
	MakeName	(0XB000DCB0,	"aFlagsMem_inter");
	MakeByte	(0XB000DCC5);
	MakeArray	(0XB000DCC5,	0X3);
	MakeStr		(0XB000DCC8,	0XB000DCDB);
	MakeName	(0XB000DCC8,	"aFlagsMem_direc");
	MakeByte	(0XB000DCDB);
	MakeStr		(0XB000DCDC,	0XB000DCEE);
	MakeName	(0XB000DCDC,	"aPd_setup_callb");
	MakeWord	(0XB000DCEE);
	MakeStr		(0XB000DCF0,	0XB000DD05);
	MakeName	(0XB000DCF0,	"aPd_create_mems");
	MakeByte	(0XB000DD05);
	MakeArray	(0XB000DD05,	0X3);
	MakeStr		(0XB000DD08,	0XB000DD16);
	MakeName	(0XB000DD08,	"aPd_create_eas");
	MakeWord	(0XB000DD16);
	MakeStr		(0XB000DD18,	0XB000DD29);
	MakeName	(0XB000DD18,	"aPd_create_thre");
	MakeByte	(0XB000DD29);
	MakeArray	(0XB000DD29,	0X3);
	MakeStr		(0XB000DD2C,	0XB000DD3E);
	MakeName	(0XB000DD2C,	"aPd_create_sess");
	MakeWord	(0XB000DD3E);
	MakeStr		(0XB000DD40,	0XB000DD51);
	MakeName	(0XB000DD40,	"aPd_release_cli");
	MakeByte	(0XB000DD51);
	MakeArray	(0XB000DD51,	0X3);
	MakeStr		(0XB000DD54,	0XB000DD63);
	MakeName	(0XB000DD54,	"aPd_check_state");
	MakeByte	(0XB000DD63);
	MakeStr		(0XB000DD64,	0XB000DD7B);
	MakeName	(0XB000DD64,	"aIguanaServer_3");
	MakeByte	(0XB000DD7B);
	MakeStr		(0XB000DD7C,	0XB000DD96);
	MakeName	(0XB000DD7C,	"aIs_memsectionM");
	MakeWord	(0XB000DD96);
	MakeStr		(0XB000DD98,	0XB000DD9C);
	MakeName	(0XB000DD98,	"aEas");
	MakeStr		(0XB000DD9C,	0XB000DDAD);
	MakeName	(0XB000DD9C,	"aPdCorruption");
	MakeByte	(0XB000DDAD);
	MakeArray	(0XB000DDAD,	0X3);
	MakeStr		(0XB000DDB0,	0XB000DDBD);
	MakeName	(0XB000DDB0,	"aSelfNull");
	MakeByte	(0XB000DDBD);
	MakeArray	(0XB000DDBD,	0X3);
	MakeStr		(0XB000DDC0,	0XB000DDCC);
	MakeName	(0XB000DDC0,	"aIs_pdSelf");
	MakeStr		(0XB000DDCC,	0XB000DDDE);
	MakeName	(0XB000DDCC,	"aIs_threadClien");
	MakeWord	(0XB000DDDE);
	MakeStr		(0XB000DDE0,	0XB000DDF2);
	MakeName	(0XB000DDE0,	"aIs_threadServe");
	MakeWord	(0XB000DDF2);
	MakeStr		(0XB000DDF4,	0XB000DE09);
	MakeName	(0XB000DDF4,	"aIs_memsectionC");
	MakeByte	(0XB000DE09);
	MakeArray	(0XB000DE09,	0X3);
	MakeStr		(0XB000DE0C,	0XB000DE37);
	MakeName	(0XB000DE0C,	"aVoidSelfVoidBa");
	MakeByte	(0XB000DE37);
	MakeStr		(0XB000DE38,	0XB000DE68);
	MakeName	(0XB000DE38,	"aVoidMsDataVoid");
	MakeStr		(0XB000DE68,	0XB000DE98);
	MakeName	(0XB000DE68,	"aVoidTdDataVoid");
	MakeStr		(0XB000DE98,	0XB000DEC8);
	MakeName	(0XB000DE98,	"aVoidSdDataVoid");
	MakeStr		(0XB000DEC8,	0XB000DEF8);
	MakeName	(0XB000DEC8,	"aVoidPdDataVoid");
	MakeStr		(0XB000DEF8,	0XB000DF01);
	MakeName	(0XB000DEF8,	"aR_remove");
	MakeByte	(0XB000DF01);
	MakeArray	(0XB000DF01,	0X3);
	MakeStr		(0XB000DF04,	0XB000DF0D);
	MakeName	(0XB000DF04,	"aR_insert");
	MakeByte	(0XB000DF0D);
	MakeArray	(0XB000DF0D,	0X3);
	MakeStr		(0XB000DF10,	0XB000DF2C);
	MakeName	(0XB000DF10,	"aIguanaServer_4");
	MakeStr		(0XB000DF2C,	0XB000DF2F);
	MakeName	(0XB000DF2C,	"aR");
	MakeByte	(0XB000DF2F);
	MakeDword	(0XB000DF30);
	MakeArray	(0XB000DF30,	0X2);
	MakeStr		(0XB000DF38,	0XB000DF49);
	MakeName	(0XB000DF38,	"aGet_segment_in");
	MakeByte	(0XB000DF49);
	MakeArray	(0XB000DF49,	0X3);
	MakeStr		(0XB000DF4C,	0XB000DF59);
	MakeName	(0XB000DF4C,	"aGet_elf_info");
	MakeByte	(0XB000DF59);
	MakeArray	(0XB000DF59,	0X3);
	MakeStr		(0XB000DF5C,	0XB000DF64);
	MakeName	(0XB000DF5C,	"aElf_map");
	MakeStr		(0XB000DF64,	0XB000DF77);
	MakeName	(0XB000DF64,	"aSeg_bufferNull");
	MakeByte	(0XB000DF77);
	MakeStr		(0XB000DF78,	0XB000DF99);
	MakeName	(0XB000DF78,	"aIguanaServer_5");
	MakeByte	(0XB000DF99);
	MakeArray	(0XB000DF99,	0X3);
	MakeStr		(0XB000DF9C,	0XB000DFA7);
	MakeName	(0XB000DF9C,	"aPbsp_iface");
	MakeByte	(0XB000DFA7);
	MakeStr		(0XB000DFA8,	0XB000DFBB);
	MakeName	(0XB000DFA8,	"aSession_add_bu");
	MakeByte	(0XB000DFBB);
	MakeStr		(0XB000DFBC,	0XB000DFCB);
	MakeName	(0XB000DFBC,	"aSession_delete");
	MakeByte	(0XB000DFCB);
	MakeStr		(0XB000DFCC,	0XB000DFE8);
	MakeName	(0XB000DFCC,	"aSessionReturn_");
	MakeStr		(0XB000DFE8,	0XB000E004);
	MakeName	(0XB000DFE8,	"aIguanaServer_6");
	MakeStr		(0XB000E004,	0XB000E01E);
	MakeName	(0XB000E004,	"aSessionCall_bu");
	MakeWord	(0XB000E01E);
	MakeStr		(0XB000E020,	0XB000E04E);
	MakeName	(0XB000E020,	"aVoidSessionVoi");
	MakeWord	(0XB000E04E);
	MakeStr		(0XB000E050,	0XB000E086);
	MakeName	(0XB000E050,	"aVoidSessionSer");
	MakeWord	(0XB000E086);
	MakeStr		(0XB000E088,	0XB000E0C5);
	MakeName	(0XB000E088,	"aVoidSessionS_0");
	MakeByte	(0XB000E0C5);
	MakeArray	(0XB000E0C5,	0X3);
	MakeStr		(0XB000E0C8,	0XB000E0E3);
	MakeName	(0XB000E0C8,	"aIs_threadSessi");
	MakeByte	(0XB000E0E3);
	MakeStr		(0XB000E0E4,	0XB000E0F0);
	MakeName	(0XB000E0E4,	"aThread_init");
	MakeStr		(0XB000E0F0,	0XB000E0FC);
	MakeName	(0XB000E0F0,	"aThread_free");
	MakeStr		(0XB000E0FC,	0XB000E109);
	MakeName	(0XB000E0FC,	"aThread_alloc");
	MakeByte	(0XB000E109);
	MakeArray	(0XB000E109,	0X3);
	MakeStr		(0XB000E10C,	0XB000E119);
	MakeName	(0XB000E10C,	"aThread_setup");
	MakeByte	(0XB000E119);
	MakeArray	(0XB000E119,	0X3);
	MakeStr		(0XB000E11C,	0XB000E12A);
	MakeName	(0XB000E11C,	"aThread_delete");
	MakeWord	(0XB000E12A);
	MakeStr		(0XB000E12C,	0XB000E143);
	MakeName	(0XB000E12C,	"aThread_raise_e");
	MakeByte	(0XB000E143);
	MakeStr		(0XB000E144,	0XB000E158);
	MakeName	(0XB000E144,	"aThread_listNul");
	MakeStr		(0XB000E158,	0XB000E173);
	MakeName	(0XB000E158,	"aIguanaServer_7");
	MakeByte	(0XB000E173);
	MakeStr		(0XB000E174,	0XB000E185);
	MakeName	(0XB000E174,	"aRRfl_success");
	MakeByte	(0XB000E185);
	MakeArray	(0XB000E185,	0X3);
	MakeStr		(0XB000E188,	0XB000E196);
	MakeName	(0XB000E188,	"aThread_no0");
	MakeWord	(0XB000E196);
	MakeStr		(0XB000E198,	0XB000E1CD);
	MakeName	(0XB000E198,	"aHash_lookupL4t");
	MakeByte	(0XB000E1CD);
	MakeArray	(0XB000E1CD,	0X3);
	MakeStr		(0XB000E1D0,	0XB000E1D9);
	MakeName	(0XB000E1D0,	"aR_l1");
	MakeByte	(0XB000E1D9);
	MakeArray	(0XB000E1D9,	0X3);
	MakeStr		(0XB000E1DC,	0XB000E1E5);
	MakeName	(0XB000E1DC,	"aR_l0");
	MakeByte	(0XB000E1E5);
	MakeArray	(0XB000E1E5,	0X3);
	MakeStr		(0XB000E1E8,	0XB000E1FD);
	MakeName	(0XB000E1E8,	"aIs_sessionSdDa");
	MakeByte	(0XB000E1FD);
	MakeArray	(0XB000E1FD,	0X3);
	MakeStr		(0XB000E200,	0XB000E211);
	MakeName	(0XB000E200,	"aNew_ipNew_sp");
	MakeByte	(0XB000E211);
	MakeArray	(0XB000E211,	0X3);
	MakeStr		(0XB000E214,	0XB000E234);
	MakeName	(0XB000E214,	"aServerErrorSen");
	MakeStr		(0XB000E234,	0XB000E24F);
	MakeName	(0XB000E234,	"a__LxDivideBy0E");
	MakeByte	(0XB000E24F);
	MakeStr		(0XB000E250,	0XB000E286);
	MakeName	(0XB000E250,	"aAssertionFaile");
	MakeWord	(0XB000E286);
	MakeStr		(0XB000E288,	0XB000E299);
	MakeName	(0XB000E288,	"aIguanaAbortEd");
	MakeByte	(0XB000E299);
	MakeArray	(0XB000E299,	0X3);
	MakeDword	(0XB000E29C);
	MakeArray	(0XB000E29C,	0X4);
	MakeStr		(0XB000E2AC,	0XB000E2C2);
	MakeName	(0XB000E2AC,	"a0123456789abcd");
	MakeWord	(0XB000E2C2);
	MakeStr		(0XB000E2C4,	0XB000E2CD);
	MakeName	(0XB000E2C4,	"aBfl_free");
	MakeByte	(0XB000E2CD);
	MakeArray	(0XB000E2CD,	0X3);
	MakeStr		(0XB000E2D0,	0XB000E2DF);
	MakeName	(0XB000E2D0,	"aFind_first_set");
	MakeByte	(0XB000E2DF);
	MakeStr		(0XB000E2E0,	0XB000E2EC);
	MakeName	(0XB000E2E0,	"aBfl_is_free");
	MakeStr		(0XB000E2EC,	0XB000E2FA);
	MakeName	(0XB000E2EC,	"aBfl_alloc_bit");
	MakeWord	(0XB000E2FA);
	MakeStr		(0XB000E2FC,	0XB000E31D);
	MakeName	(0XB000E2FC,	"aValBits_per_lo");
	MakeByte	(0XB000E31D);
	MakeArray	(0XB000E31D,	0X3);
	MakeStr		(0XB000E320,	0XB000E339);
	MakeName	(0XB000E320,	"aLibsBit_flSrcB");
	MakeByte	(0XB000E339);
	MakeArray	(0XB000E339,	0X3);
	MakeStr		(0XB000E33C,	0XB000E34C);
	MakeName	(0XB000E33C,	"aNoBitFound");
	MakeStr		(0XB000E34C,	0XB000E36D);
	MakeName	(0XB000E34C,	"aBitBits_per_lo");
	MakeByte	(0XB000E36D);
	MakeArray	(0XB000E36D,	0X3);
	MakeStr		(0XB000E370,	0XB000E379);
	MakeName	(0XB000E370,	"aInt_log2");
	MakeByte	(0XB000E379);
	MakeArray	(0XB000E379,	0X3);
	MakeStr		(0XB000E37C,	0XB000E386);
	MakeName	(0XB000E37C,	"aSize0");
	MakeWord	(0XB000E386);
	MakeStr		(0XB000E388,	0XB000E39D);
	MakeName	(0XB000E388,	"aLibsUtilSrcBit");
	MakeByte	(0XB000E39D);
	MakeArray	(0XB000E39D,	0X3);
	MakeStr		(0XB000E3A0,	0XB000E3AA);
	MakeName	(0XB000E3A0,	"aHash_init");
	MakeWord	(0XB000E3AA);
	MakeStr		(0XB000E3AC,	0XB000E3C5);
	MakeName	(0XB000E3AC,	"aSizeSize10");
	MakeByte	(0XB000E3C5);
	MakeArray	(0XB000E3C5,	0X3);
	MakeStr		(0XB000E3C8,	0XB000E3DD);
	MakeName	(0XB000E3C8,	"aLibsHashSrcHas");
	MakeByte	(0XB000E3DD);
	MakeArray	(0XB000E3DD,	0X3);
	MakeStr		(0XB000E3E0,	0XB000E3EC);
	MakeName	(0XB000E3E0,	"aTablestruct");
	MakeStr		(0XB000E3EC,	0XB000E3FF);
	MakeName	(0XB000E3EC,	"aTablestructTab");
	MakeDword	(0XB004000C);
	MakeStr		(0XB0040010,	0XB0040039);
	MakeName	(0XB0040010,	"a00000000000000");
	MakeArray	(0XB0040039,	0X3);
	MakeDword	(0XB004003C);
	MakeDword	(0XB0040040);
	MakeDword	(0XB0040044);
	MakeDword	(0XB0040060);
	MakeDword	(0XB0040064);
	MakeDword	(0XB00400AC);
	MakeDword	(0XB00400BC);
	MakeDword	(0XB00400C0);
	MakeDword	(0XB00400C4);
	MakeDword	(0XB00400C8);
	MakeDword	(x=0XB00400CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(0XB00400D8);
	MakeArray	(0XB00400DC,	0X4);
	MakeDword	(0XB0040110);
	MakeArray	(0XB0040114,	0X4);
	MakeDword	(0XB0041000);
	MakeDword	(0XB0041004);
	MakeDword	(0XB0041010);
	MakeArray	(0XB0041014,	0X4);
	MakeStruct	(0XB0041060,	"btree");
	MakeName	(0XB0041060,	"_objtable");
	MakeDword	(0XB004106C);
	MakeName	(0XB004106C,	"objtable");
	MakeDword	(0XB0041070);
	MakeStruct	(0XB0041074,	"something");
	MakeDword	(0XB0041174);
	MakeName	(0XB0041174,	"segbuffer");
	MakeDword	(0XB0041178);
	MakeName	(0XB0041178,	"l4tid_to_thread");
	MakeDword	(0XB004117C);
	MakeName	(0XB004117C,	"min_threadno");
	MakeDword	(0XB0041180);
	MakeName	(0XB0041180,	"max_threadno");
	MakeDword	(0XB0041184);
	MakeDword	(0XB0041188);
	MakeDword	(0XB004118C);
	MakeDword	(0XB0041190);
	MakeName	(0XB0041190,	"pointsToStructWithFunc");
	MakeDword	(0XB0041194);
	MakeDword	(0XB0041198);
	MakeDword	(0XB004119C);
	MakeDword	(0XB00411A0);
	MakeArray	(0XB00411A4,	0X4);
	MakeDword	(0XB00411A8);
	MakeDword	(0XB00411AC);
	MakeDword	(0XB00411B0);
	MakeStruct	(0XB004511C,	"thrTabEnt");
	MakeArray	(0XB004511C,	0X40);
	MakeName	(0XB004511C,	"someThreadTab");
	MakeDword	(0XB0045C6C);
	MakeName	(0XB0045C6C,	"utcb_size");
	MakeDword	(0XB0045C70);
	MakeName	(0XB0045C70,	"utcb_size_log2");
	MakeDword	(0XB0045C74);
	MakeName	(0XB0045C74,	"kip_area");
	MakeName	(0XB0045C7C,	"iguana_pd");
	MakeDword	(0XB0045CD8);
	MakeDword	(0XB0045CDC);
	MakeDword	(0XB0045CE0);
	MakeDword	(0XB0045CE4);
	MakeName	(0XB0045CE4,	"thread_list");
	MakeDword	(0XB0047004);
}

static Functions_0(void) {

	MakeFunction    (0XB0000000,0XB000004C);
	SetFunctionFlags(0XB0000000,0x1);
	MakeFrame(0XB0000000, 0, 0, 0);
	MakeFunction    (0XB000005C,0XB00000B0);
	SetFunctionFlags(0XB000005C,0);
	MakeFunction    (0XB00000BC,0XB00000F0);
	SetFunctionFlags(0XB00000BC,0);
	MakeFrame(0XB00000BC, 0X4, 0, 0);
	MakeFunction    (0XB00000F0,0XB0000184);
	SetFunctionFlags(0XB00000F0,0);
	MakeFrame(0XB00000F0, 0X14, 0, 0);
	MakeFunction    (0XB0000184,0XB00001FC);
	SetFunctionFlags(0XB0000184,0);
	MakeFrame(0XB0000184, 0X10, 0, 0);
	MakeFunction    (0XB00001FC,0XB0000FE8);
	SetFunctionFlags(0XB00001FC,0);
	MakeFrame(0XB00001FC, 0X70, 0, 0);
	MakeFunction    (0XB0001014,0XB0001080);
	SetFunctionFlags(0XB0001014,0);
	MakeFrame(0XB0001014, 0X10, 0, 0);
	MakeFunction    (0XB0001098,0XB0001108);
	SetFunctionFlags(0XB0001098,0);
	MakeFrame(0XB0001098, 0XC, 0, 0);
	MakeFunction    (0XB0001108,0XB0001288);
	SetFunctionFlags(0XB0001108,0);
	MakeFrame(0XB0001108, 0X28, 0, 0);
	MakeFunction    (0XB0001288,0XB0001294);
	SetFunctionFlags(0XB0001288,0);
	MakeFunction    (0XB00012B8,0XB00012EC);
	SetFunctionFlags(0XB00012B8,0);
	MakeFrame(0XB00012B8, 0X8, 0, 0);
	MakeFunction    (0XB00012EC,0XB0001324);
	SetFunctionFlags(0XB00012EC,0);
	MakeFrame(0XB00012EC, 0XC, 0, 0);
	MakeFunction    (0XB0001324,0XB0001570);
	SetFunctionFlags(0XB0001324,0);
	MakeFrame(0XB0001324, 0X3C, 0, 0);
	MakeFunction    (0XB0001588,0XB0001664);
	SetFunctionFlags(0XB0001588,0);
	MakeFrame(0XB0001588, 0X4C, 0, 0);
	MakeFunction    (0XB0001668,0XB0001788);
	SetFunctionFlags(0XB0001668,0);
	MakeFrame(0XB0001668, 0X3C, 0, 0);
	MakeLocal(0XB0001668, 0XB0001788, "[bp-0X2C]", "py");
	MakeLocal(0XB0001668, 0XB0001788, "[bp-0X28]", "px");
	MakeFunction    (0XB00017A0,0XB00017B8);
	SetFunctionFlags(0XB00017A0,0);
	SetType(0XB00017A0, "int __cdecl sometimesCallFunc(int arg, int flag, int funcptr);");
	MakeFrame(0XB00017A0, 0X4, 0, 0);
	MakeFunction    (0XB00017B8,0XB00017C4);
	SetFunctionFlags(0XB00017B8,0);
	MakeFunction    (0XB00017C8,0XB00018E0);
	SetFunctionFlags(0XB00017C8,0);
	MakeFrame(0XB00017C8, 0X10, 0, 0);
	MakeFunction    (0XB00018E0,0XB0001B04);
	SetFunctionFlags(0XB00018E0,0);
	MakeFrame(0XB00018E0, 0X24, 0, 0);
	MakeFunction    (0XB0001B08,0XB0001B60);
	SetFunctionFlags(0XB0001B08,0);
	MakeFrame(0XB0001B08, 0X10, 0, 0);
	MakeFunction    (0XB0001B60,0XB0001BA0);
	SetFunctionFlags(0XB0001B60,0);
	MakeFrame(0XB0001B60, 0X10, 0, 0);
	MakeFunction    (0XB0001BA0,0XB0001DCC);
	SetFunctionFlags(0XB0001BA0,0);
	MakeFrame(0XB0001BA0, 0X20, 0, 0);
	MakeFunction    (0XB0001DD0,0XB0001E80);
	SetFunctionFlags(0XB0001DD0,0);
	MakeFrame(0XB0001DD0, 0X14, 0, 0);
	MakeFunction    (0XB0001E80,0XB0001EDC);
	SetFunctionFlags(0XB0001E80,0);
	MakeFrame(0XB0001E80, 0X14, 0, 0);
	MakeFunction    (0XB0001EE8,0XB0001F78);
	SetFunctionFlags(0XB0001EE8,0);
	MakeFrame(0XB0001EE8, 0X24, 0, 0);
	MakeFunction    (0XB0001F78,0XB0002018);
	SetFunctionFlags(0XB0001F78,0);
	MakeFrame(0XB0001F78, 0X18, 0, 0);
	MakeFunction    (0XB0002018,0XB0002168);
	SetFunctionFlags(0XB0002018,0);
	MakeFrame(0XB0002018, 0X2C, 0, 0);
	MakeFunction    (0XB0002168,0XB0002198);
	SetFunctionFlags(0XB0002168,0);
	MakeFunction    (0XB00021A8,0XB00021C8);
	SetFunctionFlags(0XB00021A8,0);
	MakeFunction    (0XB00021CC,0XB0002248);
	SetFunctionFlags(0XB00021CC,0);
	MakeFrame(0XB00021CC, 0X8, 0, 0);
	MakeFunction    (0XB000225C,0XB00022C4);
	SetFunctionFlags(0XB000225C,0);
	SetType(0XB000225C, "int __cdecl iguana_pd_create_memsection_impl(int *retcap, int caller, int pd, int size, int base, int flags, int pool, int outbase, int *env);");
	MakeFrame(0XB000225C, 0X14, 0, 0);
	MakeLocal(0XB000225C, 0XB00022C4, "[bp+0]", "base");
	MakeLocal(0XB000225C, 0XB00022C4, "[bp+0X4]", "flags");
	MakeLocal(0XB000225C, 0XB00022C4, "[bp+0X8]", "pool");
	MakeLocal(0XB000225C, 0XB00022C4, "[bp+0XC]", "outbase");
	MakeLocal(0XB000225C, 0XB00022C4, "[bp+0X10]", "env");
	MakeFunction    (0XB00022C4,0XB000231C);
	SetFunctionFlags(0XB00022C4,0);
	MakeFrame(0XB00022C4, 0X14, 0, 0);
	MakeFunction    (0XB000231C,0XB0002360);
	SetFunctionFlags(0XB000231C,0);
	SetType(0XB000231C, "int __cdecl iguana_pd_create_eas(struct cap *retcap, int caller, int pd, struct kip *kip, void *utcb, int pid, int *retid, struct env *env);");
	MakeFrame(0XB000231C, 0XC, 0, 0);
	MakeLocal(0XB000231C, 0XB0002360, "[bp+0]", "utcb");
	MakeLocal(0XB000231C, 0XB0002360, "[bp+0X4]", "pid");
	MakeLocal(0XB000231C, 0XB0002360, "[bp+0X8]", "retid");
	MakeLocal(0XB000231C, 0XB0002360, "[bp+0XC]", "env");
	MakeFunction    (0XB0002360,0XB0002394);
	SetFunctionFlags(0XB0002360,0);
	MakeFrame(0XB0002360, 0XC, 0, 0);
	MakeFunction    (0XB0002394,0XB000249C);
	SetFunctionFlags(0XB0002394,0);
	MakeFrame(0XB0002394, 0X1C, 0, 0);
	MakeFunction    (0XB000249C,0XB00024F8);
	SetFunctionFlags(0XB000249C,0);
	SetType(0XB000249C, "int __cdecl iguana_pd_create_session_impl(struct cap *retcap, int peer, int pd, int client, int server, int clist, struct env *env);");
	MakeFrame(0XB000249C, 0X18, 0, 0);
	MakeLocal(0XB000249C, 0XB00024F8, "[bp+0]", "server");
	MakeLocal(0XB000249C, 0XB00024F8, "[bp+0X4]", "clist");
	MakeLocal(0XB000249C, 0XB00024F8, "[bp+0X8]", "env");
	MakeFunction    (0XB00024F8,0XB0002504);
	SetFunctionFlags(0XB00024F8,0);
	MakeFunction    (0XB0002504,0XB0002510);
	SetFunctionFlags(0XB0002504,0);
	MakeFunction    (0XB0002510,0XB000251C);
	SetFunctionFlags(0XB0002510,0);
	MakeFunction    (0XB000251C,0XB000254C);
	SetFunctionFlags(0XB000251C,0);
	MakeFrame(0XB000251C, 0X10, 0, 0);
	MakeFunction    (0XB000254C,0XB0002598);
	SetFunctionFlags(0XB000254C,0);
	MakeFrame(0XB000254C, 0XC, 0, 0);
	MakeFunction    (0XB0002598,0XB00025B4);
	SetFunctionFlags(0XB0002598,0);
	MakeFrame(0XB0002598, 0X8, 0, 0);
	MakeFunction    (0XB00025B4,0XB00025C8);
	SetFunctionFlags(0XB00025B4,0);
	MakeFrame(0XB00025B4, 0, 0, 0);
	MakeFunction    (0XB00025C8,0XB00025D4);
	SetFunctionFlags(0XB00025C8,0);
	MakeFunction    (0XB00025D4,0XB00025DC);
	SetFunctionFlags(0XB00025D4,0x1);
	SetType(0XB00025D4, "void iguana_thread_id_impl(int);");
	MakeFunction    (0XB00025DC,0XB00025EC);
	SetFunctionFlags(0XB00025DC,0);
	MakeFunction    (0XB00025EC,0XB00025FC);
	SetFunctionFlags(0XB00025EC,0);
	SetType(0XB00025EC, "int __cdecl iguana_thread_start_impl(int caller, int thread, int ip, int sp, struct env *env);");
	MakeFunction    (0XB00025FC,0XB0002658);
	SetFunctionFlags(0XB00025FC,0);
	MakeFrame(0XB00025FC, 0X10, 0, 0);
	MakeFunction    (0XB0002658,0XB00026AC);
	SetFunctionFlags(0XB0002658,0);
	SetType(0XB0002658, "int __cdecl thr_meth2(int caller, int *id, char *str, struct env *env);");
	MakeFrame(0XB0002658, 0X10, 0, 0);
	MakeFunction    (0XB00026B0,0XB0002704);
	SetFunctionFlags(0XB00026B0,0);
	SetType(0XB00026B0, "int __cdecl thr_meth3(int caller, char *str, struct env *env);");
	MakeFrame(0XB00026B0, 0X18, 0, 0);
	MakeFunction    (0XB000270C,0XB0002D10);
	SetFunctionFlags(0XB000270C,0);
	MakeFrame(0XB000270C, 0X11C, 0, 0);
	MakeLocal(0XB000270C, 0XB0002D10, "[bp-0X11C]", "arg4");
	MakeLocal(0XB000270C, 0XB0002D10, "[bp-0X118]", "caller");
	MakeLocal(0XB000270C, 0XB0002D10, "[bp-0XB8]", "py");
	MakeLocal(0XB000270C, 0XB0002D10, "[bp-0XB4]", "px");
	MakeFunction    (0XB0002D44,0XB0002DA0);
	SetFunctionFlags(0XB0002D44,0);
	SetType(0XB0002D44, "int __cdecl thr_meth4(int caller, int *id, struct env *env);");
	MakeFrame(0XB0002D44, 0XC, 0, 0);
	MakeFunction    (0XB0002DA8,0XB0002DBC);
	SetFunctionFlags(0XB0002DA8,0);
	SetType(0XB0002DA8, "int __cdecl iguana_set_exception_impl(int caller, int thread, int exc, int sp, int ip, struct env *env);");
	MakeFrame(0XB0002DA8, 0, 0, 0);
	MakeLocal(0XB0002DA8, 0XB0002DBC, "[bp+0]", "ip");
	MakeLocal(0XB0002DA8, 0XB0002DBC, "[bp+0X4]", "env");
	MakeFunction    (0XB0002DBC,0XB0002E0C);
	SetFunctionFlags(0XB0002DBC,0);
	SetType(0XB0002DBC, "int __cdecl iguana_hardware_register_interrupt_impl(int caller, int hardwared, int handler, int irq, struct env *env);");
	MakeFrame(0XB0002DBC, 0X14, 0, 0);
	MakeLocal(0XB0002DBC, 0XB0002E0C, "[bp+0]", "env");
	MakeFunction    (0XB0002E0C,0XB0003000);
	SetFunctionFlags(0XB0002E0C,0);
	SetType(0XB0002E0C, "int __cdecl iguana_hardware_back_memsection_impl(int caller, int hw, int memsection, int paddr, int attrs, struct env *env);");
	MakeFrame(0XB0002E0C, 0X28, 0, 0);
	MakeLocal(0XB0002E0C, 0XB0003000, "[bp+0]", "attrs");
	MakeLocal(0XB0002E0C, 0XB0003000, "[bp+0X4]", "env");
	MakeFunction    (0XB000300C,0XB0003034);
	SetFunctionFlags(0XB000300C,0);
	SetType(0XB000300C, "int __cdecl memsection_register_server_impl(int caller, struct memsection *msec, int thread, struct env *env);");
	MakeFrame(0XB000300C, 0X4, 0, 0);
	MakeFunction    (0XB0003034,0XB0003064);
	SetFunctionFlags(0XB0003034,0);
	SetType(0XB0003034, "int __cdecl iguana_memsection_lookup_impl(int caller, int address, int *serv, struct env *env);");
	MakeFrame(0XB0003034, 0X8, 0, 0);
	MakeFunction    (0XB0003064,0XB000306C);
	SetFunctionFlags(0XB0003064,0);
	MakeFunction    (0XB000306C,0XB0003088);
	SetFunctionFlags(0XB000306C,0);
	SetType(0XB000306C, "int __cdecl iguana_memsection_info_impl(int caller, struct memsection *msect, int *retsize, struct env *env);");
	MakeFunction    (0XB0003088,0XB00030BC);
	SetFunctionFlags(0XB0003088,0);
	MakeFrame(0XB0003088, 0X4, 0, 0);
	MakeFunction    (0XB00030C8,0XB00030D8);
	SetFunctionFlags(0XB00030C8,0);
	SetType(0XB00030C8, "int __cdecl iguana_memsection_map_impl(int caller, struct memsection *msect, int pg, struct env *env);");
	MakeFunction    (0XB00030D8,0XB00030E4);
	SetFunctionFlags(0XB00030D8,0);
	SetType(0XB00030D8, "int __cdecl iguana_memsection_unmap_impl(int caller, struct memsection *msect, int pg, struct env *env);");
	MakeFunction    (0XB00030E4,0XB00030EC);
	SetFunctionFlags(0XB00030E4,0);
	MakeFunction    (0XB00030EC,0XB0003100);
	SetFunctionFlags(0XB00030EC,0);
	MakeFrame(0XB00030EC, 0X4, 0, 0);
	MakeFunction    (0XB0003100,0XB0003110);
	SetFunctionFlags(0XB0003100,0);
	MakeFunction    (0XB0003110,0XB0003114);
	SetFunctionFlags(0XB0003110,0x80);
	SetType(0XB0003110, "int __cdecl iguana_debug_dump_info_impl(int caller, struct env *env);");
	MakeFunction    (0XB0003114,0XB0003140);
	SetFunctionFlags(0XB0003114,0);
	SetType(0XB0003114, "int __cdecl iguana_debug_meth1(int caller, int arg0, int arg1, int *res1, struct env *env);");
	MakeFrame(0XB0003114, 0X14, 0, 0);
	MakeLocal(0XB0003114, 0XB0003140, "[bp-0X14]", "arg4");
	MakeLocal(0XB0003114, 0XB0003140, "[bp-0X10]", "caller");
	MakeLocal(0XB0003114, 0XB0003140, "[bp-0X8]", "x");
	MakeLocal(0XB0003114, 0XB0003140, "[bp+0]", "env");
	MakeFunction    (0XB0003140,0XB0003160);
	SetFunctionFlags(0XB0003140,0);
	SetType(0XB0003140, "int __cdecl iguana_xxx_meth0(int caller, struct env *env);");
	MakeFunction    (0XB0003164,0XB0003168);
	SetFunctionFlags(0XB0003164,0x40);
	MakeFunction    (0XB0003168,0XB0003170);
	SetFunctionFlags(0XB0003168,0);
	MakeFunction    (0XB0003374,0XB0003458);
	SetFunctionFlags(0XB0003374,0x1);
	MakeFrame(0XB0003374, 0X34, 0, 0);
	MakeFunction    (0XB0003468,0XB0003528);
	SetFunctionFlags(0XB0003468,0);
	MakeFrame(0XB0003468, 0X8, 0, 0);
	MakeFunction    (0XB0003540,0XB00036C4);
	SetFunctionFlags(0XB0003540,0);
	MakeFrame(0XB0003540, 0X10, 0, 0);
	MakeFunction    (0XB00036EC,0XB000372C);
	SetFunctionFlags(0XB00036EC,0);
	MakeFrame(0XB00036EC, 0X8, 0, 0);
	MakeFunction    (0XB0003730,0XB0003764);
	SetFunctionFlags(0XB0003730,0);
	MakeFrame(0XB0003730, 0X8, 0, 0);
	MakeFunction    (0XB0003774,0XB00037A8);
	SetFunctionFlags(0XB0003774,0);
	MakeFrame(0XB0003774, 0XC, 0, 0);
	MakeFunction    (0XB00037B4,0XB0003848);
	SetFunctionFlags(0XB00037B4,0);
	SetType(0XB00037B4, "int __cdecl memsection_unmap(struct memsection *msect, int sz);");
	MakeFrame(0XB00037B4, 0X14, 0, 0);
	MakeFunction    (0XB000385C,0XB0003878);
	SetFunctionFlags(0XB000385C,0);
	MakeFunction    (0XB0003878,0XB00038DC);
	SetFunctionFlags(0XB0003878,0);
	MakeFunction    (0XB00038DC,0XB0003948);
	SetFunctionFlags(0XB00038DC,0);
	MakeFrame(0XB00038DC, 0X10, 0, 0);
	MakeFunction    (0XB0003948,0XB0003F6C);
	SetFunctionFlags(0XB0003948,0);
	SetType(0XB0003948, "int __cdecl memsection_lookup_phys(int arg0, int arg1, int *px, int *py, int *arg4, int caller);");
	MakeFrame(0XB0003948, 0X38, 0, 0);
	MakeLocal(0XB0003948, 0XB0003F6C, "[bp-0X30]", "addr");
	MakeLocal(0XB0003948, 0XB0003F6C, "[bp+0]", "arg4");
	MakeLocal(0XB0003948, 0XB0003F6C, "[bp+0X4]", "caller");
	MakeFunction    (0XB0003FAC,0XB0004124);
	SetFunctionFlags(0XB0003FAC,0);
	MakeFrame(0XB0003FAC, 0X38, 0, 0);
	MakeLocal(0XB0003FAC, 0XB0004124, "[bp-0X2C]", "py");
	MakeLocal(0XB0003FAC, 0XB0004124, "[bp-0X28]", "px");
	MakeFunction    (0XB0004124,0XB00042B0);
	SetFunctionFlags(0XB0004124,0);
	MakeFrame(0XB0004124, 0X24, 0, 0);
	MakeFunction    (0XB00042CC,0XB000434C);
	SetFunctionFlags(0XB00042CC,0);
	MakeFrame(0XB00042CC, 0XC, 0, 0);
	MakeFunction    (0XB0004350,0XB00044B0);
	SetFunctionFlags(0XB0004350,0);
	MakeFrame(0XB0004350, 0X34, 0, 0);
	MakeLocal(0XB0004350, 0XB00044B0, "[bp-0X28]", "py");
	MakeLocal(0XB0004350, 0XB00044B0, "[bp-0X24]", "px");
	MakeFunction    (0XB00044B4,0XB00044E4);
	SetFunctionFlags(0XB00044B4,0);
	MakeFrame(0XB00044B4, 0X8, 0, 0);
	MakeFunction    (0XB00044E4,0XB000473C);
	SetFunctionFlags(0XB00044E4,0);
	MakeFrame(0XB00044E4, 0X24, 0, 0);
	MakeFunction    (0XB0004798,0XB00047E0);
	SetFunctionFlags(0XB0004798,0);
	MakeFrame(0XB0004798, 0XC, 0, 0);
	MakeFunction    (0XB00047E4,0XB00047EC);
	SetFunctionFlags(0XB00047E4,0);
	MakeFunction    (0XB00047EC,0XB00047F4);
	SetFunctionFlags(0XB00047EC,0);
	MakeFunction    (0XB00047F8,0XB0004824);
	SetFunctionFlags(0XB00047F8,0);
	MakeFrame(0XB00047F8, 0X8, 0, 0);
	MakeFunction    (0XB0004828,0XB0004948);
	SetFunctionFlags(0XB0004828,0);
	MakeFrame(0XB0004828, 0X10, 0, 0);
	MakeFunction    (0XB0004960,0XB0004A74);
	SetFunctionFlags(0XB0004960,0);
	MakeFrame(0XB0004960, 0X18, 0, 0);
	MakeFunction    (0XB0004A8C,0XB0004B20);
	SetFunctionFlags(0XB0004A8C,0);
	MakeFrame(0XB0004A8C, 0X14, 0, 0);
	MakeFunction    (0XB0004B30,0XB0004BD4);
	SetFunctionFlags(0XB0004B30,0);
	MakeFrame(0XB0004B30, 0X14, 0, 0);
	MakeFunction    (0XB0004BE4,0XB0004CD8);
	SetFunctionFlags(0XB0004BE4,0);
	MakeFrame(0XB0004BE4, 0X14, 0, 0);
	MakeFunction    (0XB0004CEC,0XB0004D08);
	SetFunctionFlags(0XB0004CEC,0);
	MakeFunction    (0XB0004D10,0XB0004D94);
	SetFunctionFlags(0XB0004D10,0);
	SetType(0XB0004D10, "struct memsection *__cdecl objtable_lookup(void *addr);");
	MakeFrame(0XB0004D10, 0XC, 0, 0);
	MakeFunction    (0XB0004D9C,0XB0004DA8);
	SetFunctionFlags(0XB0004D9C,0);
	MakeFunction    (0XB0004DAC,0XB0004DF8);
	SetFunctionFlags(0XB0004DAC,0);
	MakeFrame(0XB0004DAC, 0X8, 0, 0);
	MakeFunction    (0XB0004E08,0XB0004E6C);
	SetFunctionFlags(0XB0004E08,0);
	MakeFrame(0XB0004E08, 0X10, 0, 0);
	MakeFunction    (0XB0004E78,0XB0004EEC);
	SetFunctionFlags(0XB0004E78,0);
	MakeFrame(0XB0004E78, 0XC, 0, 0);
	MakeFunction    (0XB0004EF0,0XB0004F00);
	SetFunctionFlags(0XB0004EF0,0);
	MakeFunction    (0XB0004F04,0XB0004F7C);
	SetFunctionFlags(0XB0004F04,0);
	MakeFrame(0XB0004F04, 0XC, 0, 0);
	MakeFunction    (0XB0004F88,0XB0005154);
	SetFunctionFlags(0XB0004F88,0);
	SetType(0XB0004F88, "struct memsection *__cdecl pd_create_memsection(struct pd *pd, int size, int base, void *pool, int flags);");
	MakeFrame(0XB0004F88, 0X1C, 0, 0);
	MakeLocal(0XB0004F88, 0XB0005154, "[bp+0]", "flags");
	MakeFunction    (0XB0005160,0XB0005288);
	SetFunctionFlags(0XB0005160,0);
	SetType(0XB0005160, "struct pd *__cdecl pd_create(struct pd *self, int maxthreads);");
	MakeFrame(0XB0005160, 0X20, 0, 0);
	MakeFunction    (0XB000528C,0XB0005318);
	SetFunctionFlags(0XB000528C,0);
	SetType(0XB000528C, "struct eas *__cdecl pd_create_eas(struct pd *self, void *kip, void *utcb, int pid, int *retSpaceId);");
	MakeFrame(0XB000528C, 0X18, 0, 0);
	MakeLocal(0XB000528C, 0XB0005318, "[bp+0]", "retSpaceId");
	MakeFunction    (0XB0005328,0XB0005428);
	SetFunctionFlags(0XB0005328,0);
	MakeFrame(0XB0005328, 0X14, 0, 0);
	MakeFunction    (0XB000543C,0XB00054C0);
	SetFunctionFlags(0XB000543C,0);
	MakeFrame(0XB000543C, 0X3C, 0, 0);
	MakeFunction    (0XB00054C0,0XB0005544);
	SetFunctionFlags(0XB00054C0,0);
	MakeFrame(0XB00054C0, 0X10, 0, 0);
	MakeFunction    (0XB0005544,0XB0005714);
	SetFunctionFlags(0XB0005544,0);
	SetType(0XB0005544, "struct session *__cdecl pd_create_session(struct pd *self, struct thread *client, struct thread *server, struct memsection *clist);");
	MakeFrame(0XB0005544, 0X1C, 0, 0);
	MakeFunction    (0XB0005734,0XB00057B4);
	SetFunctionFlags(0XB0005734,0);
	MakeFrame(0XB0005734, 0XC, 0, 0);
	MakeFunction    (0XB00057C4,0XB0005968);
	SetFunctionFlags(0XB00057C4,0);
	MakeFrame(0XB00057C4, 0X20, 0, 0);
	MakeFunction    (0XB0005984,0XB0005A04);
	SetFunctionFlags(0XB0005984,0);
	MakeFrame(0XB0005984, 0XC, 0, 0);
	MakeFunction    (0XB0005A08,0XB0005A6C);
	SetFunctionFlags(0XB0005A08,0);
	MakeFunction    (0XB0005A6C,0XB0005C00);
	SetFunctionFlags(0XB0005A6C,0);
	MakeFrame(0XB0005A6C, 0X10, 0, 0);
	MakeFunction    (0XB0005C00,0XB0005CB0);
	SetFunctionFlags(0XB0005C00,0);
	MakeFrame(0XB0005C00, 0X18, 0, 0);
	MakeFunction    (0XB0005CBC,0XB0005E7C);
	SetFunctionFlags(0XB0005CBC,0);
	MakeFrame(0XB0005CBC, 0X24, 0, 0);
	MakeFunction    (0XB0005E90,0XB0005E9C);
	SetFunctionFlags(0XB0005E90,0);
	MakeFunction    (0XB0005EA0,0XB0006014);
	SetFunctionFlags(0XB0005EA0,0);
	MakeFrame(0XB0005EA0, 0X24, 0, 0);
	MakeFunction    (0XB000602C,0XB0006098);
	SetFunctionFlags(0XB000602C,0);
	MakeFrame(0XB000602C, 0X18, 0, 0);
	MakeFunction    (0XB00060A0,0XB0006184);
	SetFunctionFlags(0XB00060A0,0);
	MakeFrame(0XB00060A0, 0X1C, 0, 0);
	MakeFunction    (0XB00061A8,0XB00061B4);
	SetFunctionFlags(0XB00061A8,0);
	MakeFunction    (0XB00061B8,0XB00062A0);
	SetFunctionFlags(0XB00061B8,0);
	MakeFrame(0XB00061B8, 0X24, 0, 0);
	MakeFunction    (0XB0006378,0XB0006390);
	SetFunctionFlags(0XB0006378,0);
	MakeFunction    (0XB0006398,0XB00064AC);
	SetFunctionFlags(0XB0006398,0);
	MakeFrame(0XB0006398, 0X14, 0, 0);
	MakeFunction    (0XB00064C8,0XB00065F8);
	SetFunctionFlags(0XB00064C8,0);
	MakeFrame(0XB00064C8, 0X98, 0, 0);
	MakeFunction    (0XB0006608,0XB0006730);
	SetFunctionFlags(0XB0006608,0);
	MakeFrame(0XB0006608, 0XC, 0, 0);
	MakeFunction    (0XB0006748,0XB000676C);
	SetFunctionFlags(0XB0006748,0);
	MakeFunction    (0XB0006770,0XB00067A4);
	SetFunctionFlags(0XB0006770,0);
	MakeFrame(0XB0006770, 0XC, 0, 0);
	MakeFunction    (0XB00067A4,0XB00067D0);
	SetFunctionFlags(0XB00067A4,0);
	MakeFrame(0XB00067A4, 0XC, 0, 0);
	MakeFunction    (0XB00067D0,0XB00067FC);
	SetFunctionFlags(0XB00067D0,0);
	MakeFrame(0XB00067D0, 0XC, 0, 0);
	MakeFunction    (0XB00067FC,0XB0006898);
	SetFunctionFlags(0XB00067FC,0);
	MakeFrame(0XB00067FC, 0XC, 0, 0);
	MakeFunction    (0XB0006898,0XB00068D4);
	SetFunctionFlags(0XB0006898,0);
	MakeFrame(0XB0006898, 0X8, 0, 0);
	MakeFunction    (0XB00068D4,0XB0006998);
	SetFunctionFlags(0XB00068D4,0);
	MakeFrame(0XB00068D4, 0X1C, 0, 0);
	MakeFunction    (0XB00069B8,0XB0006A00);
	SetFunctionFlags(0XB00069B8,0);
	MakeFrame(0XB00069B8, 0X8, 0, 0);
	MakeFunction    (0XB0006A14,0XB0006AE8);
	SetFunctionFlags(0XB0006A14,0);
	MakeFrame(0XB0006A14, 0X14, 0, 0);
	MakeFunction    (0XB0006B04,0XB0006D70);
	SetFunctionFlags(0XB0006B04,0);
	MakeFrame(0XB0006B04, 0X48, 0, 0);
	MakeFunction    (0XB0006D88,0XB0006E9C);
	SetFunctionFlags(0XB0006D88,0);
	MakeFrame(0XB0006D88, 0X1C, 0, 0);
	MakeFunction    (0XB0006EB0,0XB0006EC0);
	SetFunctionFlags(0XB0006EB0,0);
	MakeFunction    (0XB0006EC4,0XB0006F1C);
	SetFunctionFlags(0XB0006EC4,0);
	MakeFrame(0XB0006EC4, 0X38, 0, 0);
	MakeLocal(0XB0006EC4, 0XB0006F1C, "[bp+0]", "env");
	MakeFunction    (0XB0007038,0XB0007118);
	SetFunctionFlags(0XB0007038,0);
	MakeFrame(0XB0007038, 0X14, 0, 0);
	MakeFunction    (0XB00093C4,0XB00093D0);
	SetFunctionFlags(0XB00093C4,0);
	MakeFunction    (0XB00093E4,0XB00096EC);
	SetFunctionFlags(0XB00093E4,0);
	MakeFrame(0XB00093E4, 0XC0, 0, 0);
	MakeLocal(0XB00093E4, 0XB00096EC, "[bp-0XC0]", "server");
	MakeLocal(0XB00093E4, 0XB00096EC, "[bp-0XBC]", "clist");
	MakeLocal(0XB00093E4, 0XB00096EC, "[bp-0XB8]", "env");
	MakeLocal(0XB00093E4, 0XB00096EC, "[bp-0XB4]", "outbase");
	MakeLocal(0XB00093E4, 0XB00096EC, "[bp-0X74]", "kip");
	MakeLocal(0XB00093E4, 0XB00096EC, "[bp-0X20]", "retcap");
	MakeFunction    (0XB00096EC,0XB0009854);
	SetFunctionFlags(0XB00096EC,0);
	MakeFrame(0XB00096EC, 0X60, 0, 0);
	MakeFunction    (0XB0009854,0XB0009A08);
	SetFunctionFlags(0XB0009854,0);
	MakeFrame(0XB0009854, 0X64, 0, 0);
	MakeLocal(0XB0009854, 0XB0009A08, "[bp-0X64]", "ip");
	MakeLocal(0XB0009854, 0XB0009A08, "[bp-0X30]", "env");
	MakeLocal(0XB0009854, 0XB0009A08, "[bp-0X28]", "id");
	MakeFunction    (0XB0009A08,0XB0009AC8);
	SetFunctionFlags(0XB0009A08,0);
	MakeFrame(0XB0009A08, 0X30, 0, 0);
	MakeLocal(0XB0009A08, 0XB0009AC8, "[bp-0X30]", "attrs");
	MakeFunction    (0XB0009AC8,0XB0009C7C);
	SetFunctionFlags(0XB0009AC8,0);
	MakeFrame(0XB0009AC8, 0X60, 0, 0);
	MakeLocal(0XB0009AC8, 0XB0009C7C, "[bp-0X28]", "retsize");
	MakeLocal(0XB0009AC8, 0XB0009C7C, "[bp-0X1C]", "serv");
	MakeLocal(0XB0009AC8, 0XB0009C7C, "[bp-0X18]", "env");
	MakeFunction    (0XB0009C7C,0XB0009D60);
	SetFunctionFlags(0XB0009C7C,0);
	MakeFrame(0XB0009C7C, 0X34, 0, 0);
	MakeFunction    (0XB0009D60,0XB0009E08);
	SetFunctionFlags(0XB0009D60,0);
	SetType(0XB0009D60, "int __cdecl dispatch_iguana_debug();");
	MakeFrame(0XB0009D60, 0X2C, 0, 0);
	MakeLocal(0XB0009D60, 0XB0009E08, "[bp-0X20]", "res1");
	MakeLocal(0XB0009D60, 0XB0009E08, "[bp-0X1C]", "env");
	MakeFunction    (0XB0009E08,0XB0009E64);
	SetFunctionFlags(0XB0009E08,0);
	SetType(0XB0009E08, "int __cdecl dispatch_iguana_xxx(int *thread, int *mr);");
	MakeFrame(0XB0009E08, 0X18, 0, 0);
	MakeFunction    (0XB0009E64,0XB000A010);
	SetFunctionFlags(0XB0009E64,0x10);
	MakeFrame(0XB0009E64, 0X18, 40, 0);
	MakeFunction    (0XB000A014,0XB000A01C);
	SetFunctionFlags(0XB000A014,0);
	MakeFunction    (0XB000A01C,0XB000A038);
	SetFunctionFlags(0XB000A01C,0);
	MakeFrame(0XB000A01C, 0X8, 0, 0);
	MakeFunction    (0XB000A038,0XB000A098);
	SetFunctionFlags(0XB000A038,0);
	MakeFrame(0XB000A038, 0X8, 0, 0);
	MakeFunction    (0XB000A098,0XB000A0F4);
	SetFunctionFlags(0XB000A098,0);
	MakeFrame(0XB000A098, 0XC, 0, 0);
	MakeFunction    (0XB000A0F8,0XB000A12C);
	SetFunctionFlags(0XB000A0F8,0x1);
	MakeFrame(0XB000A0F8, 0XC, 0, 0);
	MakeFunction    (0XB000A134,0XB000A154);
	SetFunctionFlags(0XB000A134,0);
	SetType(0XB000A134, "int fprintf(FILE *, const char *, ...);");
	MakeFrame(0XB000A134, 0X10, 0, 0);
	MakeLocal(0XB000A134, 0XB000A154, "[bp-0XC]", "varg_r1");
	MakeLocal(0XB000A134, 0XB000A154, "[bp-0X8]", "varg_r2");
	MakeLocal(0XB000A134, 0XB000A154, "[bp-0X4]", "varg_r3");
	MakeFunction    (0XB000A154,0XB000A1E8);
	SetFunctionFlags(0XB000A154,0);
	MakeFrame(0XB000A154, 0XC, 0, 0);
	MakeFunction    (0XB000A1F0,0XB000A2E0);
	SetFunctionFlags(0XB000A1F0,0);
	MakeFrame(0XB000A1F0, 0X8, 0, 0);
	MakeFunction    (0XB000A2E8,0XB000A344);
	SetFunctionFlags(0XB000A2E8,0);
	MakeFunction    (0XB000A344,0XB000A3DC);
	SetFunctionFlags(0XB000A344,0);
	SetType(0XB000A344, "void *memset(void *, int, size_t);");
	MakeFrame(0XB000A344, 0X4, 0, 0);
	MakeFunction    (0XB000A3DC,0XB000A404);
	SetFunctionFlags(0XB000A3DC,0);
	SetType(0XB000A3DC, "int printf(const char *, ...);");
	MakeFrame(0XB000A3DC, 0X14, 0, 0);
	MakeLocal(0XB000A3DC, 0XB000A404, "[bp-0X10]", "varg_r0");
	MakeLocal(0XB000A3DC, 0XB000A404, "[bp-0XC]", "varg_r1");
	MakeLocal(0XB000A3DC, 0XB000A404, "[bp-0X8]", "varg_r2");
	MakeLocal(0XB000A3DC, 0XB000A404, "[bp-0X4]", "varg_r3");
	MakeFunction    (0XB000A408,0XB000A44C);
	SetFunctionFlags(0XB000A408,0);
	MakeFrame(0XB000A408, 0XC, 0, 0);
	MakeFunction    (0XB000A450,0XB000A490);
	SetFunctionFlags(0XB000A450,0);
	MakeFunction    (0XB000A494,0XB000A4BC);
	SetFunctionFlags(0XB000A494,0);
	MakeFrame(0XB000A494, 0XC, 0, 0);
	MakeFunction    (0XB000A4BC,0XB000A4DC);
	SetFunctionFlags(0XB000A4BC,0);
	MakeFrame(0XB000A4BC, 0X10, 0, 0);
	MakeLocal(0XB000A4BC, 0XB000A4DC, "[bp-0XC]", "varg_r1");
	MakeLocal(0XB000A4BC, 0XB000A4DC, "[bp-0X8]", "varg_r2");
	MakeLocal(0XB000A4BC, 0XB000A4DC, "[bp-0X4]", "varg_r3");
	MakeFunction    (0XB000A4DC,0XB000A508);
	SetFunctionFlags(0XB000A4DC,0);
	MakeFrame(0XB000A4DC, 0X4, 0, 0);
	MakeFunction    (0XB000A508,0XB000A534);
	SetFunctionFlags(0XB000A508,0);
	SetType(0XB000A508, "int __cdecl strcpy(char *dst, char *src);");
	MakeFunction    (0XB000A534,0XB000A55C);
	SetFunctionFlags(0XB000A534,0);
	SetType(0XB000A534, "int vfprintf(FILE *, const char *, __va_list);");
	MakeFrame(0XB000A534, 0XC, 0, 0);
	MakeFunction    (0XB000A55C,0XB000A56C);
	SetFunctionFlags(0XB000A55C,0x1);
	MakeFrame(0XB000A55C, 0X4, 0, 0);
	MakeFunction    (0XB000A574,0XB000A588);
	SetFunctionFlags(0XB000A574,0);
	MakeFunction    (0XB000A58C,0XB000A5F4);
	SetFunctionFlags(0XB000A58C,0);
	MakeFrame(0XB000A58C, 0X10, 0, 0);
	MakeFunction    (0XB000A5F8,0XB000A678);
	SetFunctionFlags(0XB000A5F8,0);
	MakeFrame(0XB000A5F8, 0X2C, 0, 0);
	MakeFunction    (0XB000A678,0XB000A680);
	SetFunctionFlags(0XB000A678,0);
	MakeFunction    (0XB000A708,0XB000B2B4);
	SetFunctionFlags(0XB000A708,0);
	MakeFrame(0XB000A708, 0X7C, 0, 0);
	MakeFunction    (0XB000B2C0,0XB000B30C);
	SetFunctionFlags(0XB000B2C0,0);
	MakeFrame(0XB000B2C0, 0X10, 0, 0);
	MakeFunction    (0XB000B30C,0XB000B330);
	SetFunctionFlags(0XB000B30C,0);
	SetType(0XB000B30C, "size_t strlen(const char *);");
	MakeFunction    (0XB000B330,0XB000B380);
	SetFunctionFlags(0XB000B330,0);
	MakeFrame(0XB000B330, 0X10, 0, 0);
	MakeFunction    (0XB000B38C,0XB000B3F4);
	SetFunctionFlags(0XB000B38C,0);
	MakeFrame(0XB000B38C, 0X14, 0, 0);
	MakeFunction    (0XB000B3F4,0XB000B4EC);
	SetFunctionFlags(0XB000B3F4,0);
	MakeFrame(0XB000B3F4, 0X14, 0, 0);
	MakeFunction    (0XB000B4F8,0XB000B4FC);
	SetFunctionFlags(0XB000B4F8,0x80);
	MakeFunction    (0XB000B4FC,0XB000B55C);
	SetFunctionFlags(0XB000B4FC,0);
	MakeFrame(0XB000B4FC, 0X10, 0, 0);
	MakeFunction    (0XB000B568,0XB000B5B8);
	SetFunctionFlags(0XB000B568,0);
	MakeFrame(0XB000B568, 0X10, 0, 0);
	MakeFunction    (0XB000B5D4,0XB000B614);
	SetFunctionFlags(0XB000B5D4,0);
	SetType(0XB000B5D4, "int __cdecl sub_B000B5D4(void *somePtr);");
	MakeFrame(0XB000B5D4, 0XC, 0, 0);
	MakeFunction    (0XB000B658,0XB000B694);
	SetFunctionFlags(0XB000B658,0);
	MakeFrame(0XB000B658, 0XC, 0, 0);
	MakeLocal(0XB000B658, 0XB000B694, "[bp-0X4]", "retAddr");
	MakeFunction    (0XB000B698,0XB000B6D4);
	SetFunctionFlags(0XB000B698,0);
	MakeFrame(0XB000B698, 0XC, 0, 0);
	MakeFunction    (0XB000B6D8,0XB000B744);
	SetFunctionFlags(0XB000B6D8,0);
	SetType(0XB000B6D8, "int __cdecl sub_B000B6D8(struct foo *p1, int v1, int v2);");
	MakeFrame(0XB000B6D8, 0X4, 0, 0);
	MakeFunction    (0XB000B74C,0XB000B7B4);
	SetFunctionFlags(0XB000B74C,0);
	MakeFrame(0XB000B74C, 0X3C, 0, 0);
	MakeFunction    (0XB000B7BC,0XB000B7E0);
	SetFunctionFlags(0XB000B7BC,0);
	MakeFrame(0XB000B7BC, 0X4, 0, 0);
	MakeFunction    (0XB000B7E0,0XB000B814);
	SetFunctionFlags(0XB000B7E0,0);
	MakeFrame(0XB000B7E0, 0XC, 0, 0);
	MakeFunction    (0XB000B814,0XB000B838);
	SetFunctionFlags(0XB000B814,0);
	MakeFrame(0XB000B814, 0X8, 0, 0);
	MakeFunction    (0XB000B838,0XB000B844);
	SetFunctionFlags(0XB000B838,0);
	MakeFunction    (0XB000B844,0XB000B880);
	SetFunctionFlags(0XB000B844,0);
	MakeFrame(0XB000B844, 0X8, 0, 0);
	MakeFunction    (0XB000B880,0XB000B8D0);
	SetFunctionFlags(0XB000B880,0);
	MakeFrame(0XB000B880, 0X8, 0, 0);
	MakeFunction    (0XB000B92C,0XB000B944);
	SetFunctionFlags(0XB000B92C,0x1);
	MakeFunction    (0XB000B98C,0XB000B9A4);
	SetFunctionFlags(0XB000B98C,0x1);
	MakeFunction    (0XB000BA64,0XB000BA8C);
	SetFunctionFlags(0XB000BA64,0);
	MakeFrame(0XB000BA64, 0X8, 0, 0);
	MakeFunction    (0XB000BA8C,0XB000BAC4);
	SetFunctionFlags(0XB000BA8C,0);
	MakeFrame(0XB000BA8C, 0X10, 0, 0);
	MakeFunction    (0XB000BAC4,0XB000BB04);
	SetFunctionFlags(0XB000BAC4,0);
	MakeFrame(0XB000BAC4, 0X24, 0, 0);
	MakeFunction    (0XB000BB04,0XB000BB24);
	SetFunctionFlags(0XB000BB04,0);
	MakeFrame(0XB000BB04, 0X24, 0, 0);
	MakeFunction    (0XB000BB38,0XB000BB6C);
	SetFunctionFlags(0XB000BB38,0);
	MakeFrame(0XB000BB38, 0X24, 0, 0);
	MakeFunction    (0XB000BB6C,0XB000BBD4);
	SetFunctionFlags(0XB000BB6C,0);
	MakeFrame(0XB000BB6C, 0X2C, 0, 0);
	MakeFunction    (0XB000BC9C,0XB000BCB0);
	SetFunctionFlags(0XB000BC9C,0);
	MakeFrame(0XB000BC9C, 0X24, 0, 0);
	MakeFunction    (0XB000BCB0,0XB000BCD0);
	SetFunctionFlags(0XB000BCB0,0);
	MakeFrame(0XB000BCB0, 0X24, 0, 0);
	MakeFunction    (0XB000BCE4,0XB000BCF8);
	SetFunctionFlags(0XB000BCE4,0);
	MakeFrame(0XB000BCE4, 0X24, 0, 0);
	MakeFunction    (0XB000BCF8,0XB000BD0C);
	SetFunctionFlags(0XB000BCF8,0);
	MakeFrame(0XB000BCF8, 0X24, 0, 0);
	MakeFunction    (0XB000BD0C,0XB000BD24);
	SetFunctionFlags(0XB000BD0C,0);
	MakeFrame(0XB000BD0C, 0X8, 0, 0);
	MakeFunction    (0XB000BD24,0XB000BDE0);
	SetFunctionFlags(0XB000BD24,0);
	MakeFrame(0XB000BD24, 0XC, 0, 0);
	MakeFunction    (0XB000BDE0,0XB000BE04);
	SetFunctionFlags(0XB000BDE0,0);
	MakeFunction    (0XB000BE04,0XB000BE7C);
	SetFunctionFlags(0XB000BE04,0);
	MakeFrame(0XB000BE04, 0X4, 0, 0);
	MakeFunction    (0XB000BE7C,0XB000C28C);
	SetFunctionFlags(0XB000BE7C,0);
	MakeFrame(0XB000BE7C, 0X2C, 0, 0);
	MakeFunction    (0XB000C28C,0XB000C334);
	SetFunctionFlags(0XB000C28C,0);
	MakeFrame(0XB000C28C, 0XC, 0, 0);
	MakeFunction    (0XB000C334,0XB000C3B4);
	SetFunctionFlags(0XB000C334,0);
	MakeFrame(0XB000C334, 0X14, 0, 0);
	MakeFunction    (0XB000C3B4,0XB000C6B4);
	SetFunctionFlags(0XB000C3B4,0);
	MakeFrame(0XB000C3B4, 0X30, 0, 0);
	MakeFunction    (0XB000C6B4,0XB000C7D0);
	SetFunctionFlags(0XB000C6B4,0);
	MakeFrame(0XB000C6B4, 0X24, 0, 0);
	MakeFunction    (0XB000C7D0,0XB000C830);
	SetFunctionFlags(0XB000C7D0,0);
	MakeFrame(0XB000C7D0, 0X14, 0, 0);
	MakeFunction    (0XB000C834,0XB000C848);
	SetFunctionFlags(0XB000C834,0);
	MakeFrame(0XB000C834, 0X4, 0, 0);
	MakeFunction    (0XB000C848,0XB000C8DC);
	SetFunctionFlags(0XB000C848,0);
	MakeFrame(0XB000C848, 0X14, 0, 0);
	MakeFunction    (0XB000C8DC,0XB000C920);
	SetFunctionFlags(0XB000C8DC,0);
	MakeFrame(0XB000C8DC, 0X8, 0, 0);
	MakeFunction    (0XB000C920,0XB000CAE8);
	SetFunctionFlags(0XB000C920,0);
	MakeFrame(0XB000C920, 0X28, 0, 0);
	MakeFunction    (0XB000CAE8,0XB000CB00);
	SetFunctionFlags(0XB000CAE8,0);
	MakeFunction    (0XB000CB00,0XB000CB74);
	SetFunctionFlags(0XB000CB00,0);
	MakeFrame(0XB000CB00, 0X14, 0, 0);
	MakeFunction    (0XB000CB74,0XB000CC18);
	SetFunctionFlags(0XB000CB74,0);
	MakeFrame(0XB000CB74, 0X18, 0, 0);
	MakeFunction    (0XB000CC18,0XB000CDE4);
	SetFunctionFlags(0XB000CC18,0);
	MakeFrame(0XB000CC18, 0X30, 0, 0);
	MakeFunction    (0XB000CDE4,0XB000CE5C);
	SetFunctionFlags(0XB000CDE4,0);
	MakeFrame(0XB000CDE4, 0X4, 0, 0);
	MakeFunction    (0XB000CE5C,0XB000CE78);
	SetFunctionFlags(0XB000CE5C,0);
	MakeFrame(0XB000CE5C, 0X8, 0, 0);
	MakeFunction    (0XB000CE78,0XB000CEC0);
	SetFunctionFlags(0XB000CE78,0);
	MakeFrame(0XB000CE78, 0XC, 0, 0);
	MakeFunction    (0XB000CEC0,0XB000CED0);
	SetFunctionFlags(0XB000CEC0,0);
	MakeFunction    (0XB000CED0,0XB000CF9C);
	SetFunctionFlags(0XB000CED0,0);
	MakeFrame(0XB000CED0, 0XC, 0, 0);
	MakeFunction    (0XB000CFB0,0XB000CFD4);
	SetFunctionFlags(0XB000CFB0,0);
	MakeFunction    (0XB000CFD4,0XB000D024);
	SetFunctionFlags(0XB000CFD4,0);
	MakeFrame(0XB000CFD4, 0XC, 0, 0);
	MakeFunction    (0XB000D024,0XB000D078);
	SetFunctionFlags(0XB000D024,0);
	MakeFrame(0XB000D024, 0X14, 0, 0);
	MakeFunction    (0XB000D078,0XB000D104);
	SetFunctionFlags(0XB000D078,0);
	MakeFrame(0XB000D078, 0X14, 0, 0);
	MakeFunction    (0XB000D104,0XB000D108);
	SetFunctionFlags(0XB000D104,0xc0);
	MakeFunction    (0XB000D108,0XB000D204);
	SetFunctionFlags(0XB000D108,0);
	MakeFrame(0XB000D108, 0X14, 0, 0);
	MakeFunction    (0XB000D204,0XB000D20C);
	SetFunctionFlags(0XB000D204,0);
	MakeFunction    (0XB000D20C,0XB000D260);
	SetFunctionFlags(0XB000D20C,0);
	MakeFrame(0XB000D20C, 0XC, 0, 0);
	MakeFunction    (0XB000D260,0XB000D27C);
	SetFunctionFlags(0XB000D260,0);
	MakeFrame(0XB000D260, 0X8, 0, 0);
	MakeFunction    (0XB000D27C,0XB000D378);
	SetFunctionFlags(0XB000D27C,0);
	MakeFrame(0XB000D27C, 0X30, 0, 0);
	MakeFunction    (0XB000D378,0XB000D380);
	SetFunctionFlags(0XB000D378,0);
	MakeFunction    (0XB000D390,0XB000D3B0);
	SetFunctionFlags(0XB000D390,0);
	MakeFrame(0XB000D390, 0X10, 0, 0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetRegEx(0XB0000000,"T",0,3);
	SetRegEx(0XB0000000,"DS",0X2,3);
	SetRegEx(0XB0000014,"T",0,3);
	SetRegEx(0XB0000028,"T",0,3);
	SetRegEx(0XB0000034,"T",0,3);
	SetRegEx(0XB0000038,"T",0,3);
	SetRegEx(0XB000005C,"T",0,3);
	SetRegEx(0XB00000A8,"T",0,3);
	SetRegEx(0XB00000BC,"T",0,3);
	SetRegEx(0XB00000D4,"T",0,3);
	SetRegEx(0XB00000F0,"T",0,3);
	SetRegEx(0XB000017C,"T",0,3);
	SetRegEx(0XB0000184,"T",0,3);
	SetRegEx(0XB00001B0,"T",0,3);
	SetRegEx(0XB00001E4,"T",0,3);
	SetRegEx(0XB00001FC,"T",0,3);
	SetRegEx(0XB0000244,"T",0,3);
	SetRegEx(0XB0000248,"T",0,3);
	SetRegEx(0XB0000264,"T",0,3);
	SetRegEx(0XB000035C,"T",0,3);
	SetRegEx(0XB0000448,"T",0,3);
	SetRegEx(0XB0000458,"T",0,3);
	SetRegEx(0XB0000498,"T",0,3);
	SetRegEx(0XB00004B8,"T",0,3);
	SetRegEx(0XB0000520,"T",0,3);
	SetRegEx(0XB000052C,"T",0,3);
	SetRegEx(0XB0000584,"T",0,3);
	SetRegEx(0XB0000588,"T",0,3);
	SetRegEx(0XB00005CC,"T",0,3);
	SetRegEx(0XB0000634,"T",0,3);
	SetRegEx(0XB000068C,"T",0,3);
	SetRegEx(0XB0000690,"T",0,3);
	SetRegEx(0XB00006D0,"T",0,3);
	SetRegEx(0XB000072C,"T",0,3);
	SetRegEx(0XB0000730,"T",0,3);
	SetRegEx(0XB00007F0,"T",0,3);
	SetRegEx(0XB00007F4,"T",0,3);
	SetRegEx(0XB000084C,"T",0,3);
	SetRegEx(0XB000088C,"T",0,3);
	SetRegEx(0XB00008A4,"T",0,3);
	SetRegEx(0XB00008D8,"T",0,3);
	SetRegEx(0XB000090C,"T",0,3);
	SetRegEx(0XB0000964,"T",0,3);
	SetRegEx(0XB00009B8,"T",0,3);
	SetRegEx(0XB0000A78,"T",0,3);
	SetRegEx(0XB0000A7C,"T",0,3);
	SetRegEx(0XB0000B5C,"T",0,3);
	SetRegEx(0XB0000BB8,"T",0,3);
	SetRegEx(0XB0000BE4,"T",0,3);
	SetRegEx(0XB0000BEC,"T",0,3);
	SetRegEx(0XB0000C20,"T",0,3);
	SetRegEx(0XB0000C2C,"T",0,3);
	SetRegEx(0XB0000C44,"T",0,3);
	SetRegEx(0XB0000C74,"T",0,3);
	SetRegEx(0XB0000C9C,"T",0,3);
	SetRegEx(0XB0000CE8,"T",0,3);
	SetRegEx(0XB0000D54,"T",0,3);
	SetRegEx(0XB0000DB4,"T",0,3);
	SetRegEx(0XB0000DD4,"T",0,3);
	SetRegEx(0XB0000DDC,"T",0,3);
	SetRegEx(0XB0000DE4,"T",0,3);
	SetRegEx(0XB0000DEC,"T",0,3);
	SetRegEx(0XB0000DF4,"T",0,3);
	SetRegEx(0XB0000DFC,"T",0,3);
	SetRegEx(0XB0000E50,"T",0,3);
	SetRegEx(0XB0000E68,"T",0,3);
	SetRegEx(0XB0000E70,"T",0,3);
	SetRegEx(0XB0000E8C,"T",0,3);
	SetRegEx(0XB0000EA8,"T",0,3);
	SetRegEx(0XB0000ED4,"T",0,3);
	SetRegEx(0XB0000F20,"T",0,3);
	SetRegEx(0XB0000F24,"T",0,3);
	SetRegEx(0XB0000F30,"T",0,3);
	SetRegEx(0XB0000F38,"T",0,3);
	SetRegEx(0XB0000F4C,"T",0,3);
	SetRegEx(0XB0000F54,"T",0,3);
	SetRegEx(0XB0000F5C,"T",0,3);
	SetRegEx(0XB0000F68,"T",0,3);
	SetRegEx(0XB0000F70,"T",0,3);
	SetRegEx(0XB0000F78,"T",0,3);
	SetRegEx(0XB0000F88,"T",0,3);
	SetRegEx(0XB0000F90,"T",0,3);
	SetRegEx(0XB0000F98,"T",0,3);
	SetRegEx(0XB0000FA0,"T",0,3);
	SetRegEx(0XB0000FA8,"T",0,3);
	SetRegEx(0XB0000FB0,"T",0,3);
	SetRegEx(0XB0000FB8,"T",0,3);
	SetRegEx(0XB0000FC0,"T",0,3);
	SetRegEx(0XB0000FC8,"T",0,3);
	SetRegEx(0XB0000FD0,"T",0,3);
	SetRegEx(0XB0000FE0,"T",0,3);
	SetRegEx(0XB0001014,"T",0,3);
	SetRegEx(0XB000102C,"T",0,3);
	SetRegEx(0XB0001034,"T",0,3);
	SetRegEx(0XB0001048,"T",0,3);
	SetRegEx(0XB0001054,"T",0,3);
	SetRegEx(0XB000107C,"T",0,3);
	SetRegEx(0XB0001080,"T",0,3);
	SetRegEx(0XB0001098,"T",0,3);
	SetRegEx(0XB00010B0,"T",0,3);
	SetRegEx(0XB00010D0,"T",0,3);
	SetRegEx(0XB00010D4,"T",0,3);
	SetRegEx(0XB00010E0,"T",0,3);
	SetRegEx(0XB00010F8,"T",0,3);
	SetRegEx(0XB0001108,"T",0,3);
	SetRegEx(0XB0001130,"T",0,3);
	SetRegEx(0XB0001148,"T",0,3);
	SetRegEx(0XB000114C,"T",0,3);
	SetRegEx(0XB0001160,"T",0,3);
	SetRegEx(0XB0001178,"T",0,3);
	SetRegEx(0XB000117C,"T",0,3);
	SetRegEx(0XB00011A0,"T",0,3);
	SetRegEx(0XB00011B0,"T",0,3);
	SetRegEx(0XB00011B4,"T",0,3);
	SetRegEx(0XB00011D4,"T",0,3);
	SetRegEx(0XB00011F4,"T",0,3);
	SetRegEx(0XB00011F8,"T",0,3);
	SetRegEx(0XB0001214,"T",0,3);
	SetRegEx(0XB0001218,"T",0,3);
	SetRegEx(0XB000123C,"T",0,3);
	SetRegEx(0XB000124C,"T",0,3);
	SetRegEx(0XB0001264,"T",0,3);
	SetRegEx(0XB0001280,"T",0,3);
	SetRegEx(0XB0001288,"T",0,3);
	SetRegEx(0XB0001298,"T",0,3);
	SetRegEx(0XB00012B8,"T",0,3);
	SetRegEx(0XB00012EC,"T",0,3);
	SetRegEx(0XB0001304,"T",0,3);
	SetRegEx(0XB0001324,"T",0,3);
	SetRegEx(0XB0001380,"T",0,3);
	SetRegEx(0XB00013C0,"T",0,3);
	SetRegEx(0XB000141C,"T",0,3);
	SetRegEx(0XB0001454,"T",0,3);
	SetRegEx(0XB0001488,"T",0,3);
	SetRegEx(0XB00014B8,"T",0,3);
	SetRegEx(0XB00014C4,"T",0,3);
	SetRegEx(0XB00014CC,"T",0,3);
	SetRegEx(0XB00014D8,"T",0,3);
	SetRegEx(0XB00014E8,"T",0,3);
	SetRegEx(0XB00014FC,"T",0,3);
	SetRegEx(0XB0001504,"T",0,3);
	SetRegEx(0XB0001528,"T",0,3);
	SetRegEx(0XB000154C,"T",0,3);
	SetRegEx(0XB0001558,"T",0,3);
	SetRegEx(0XB0001588,"T",0,3);
	SetRegEx(0XB00015B0,"T",0,3);
	SetRegEx(0XB00015B8,"T",0,3);
	SetRegEx(0XB0001628,"T",0,3);
	SetRegEx(0XB0001654,"T",0,3);
	SetRegEx(0XB000165C,"T",0,3);
	SetRegEx(0XB0001668,"T",0,3);
	SetRegEx(0XB00016E8,"T",0,3);
	SetRegEx(0XB00016F4,"T",0,3);
	SetRegEx(0XB0001748,"T",0,3);
	SetRegEx(0XB0001778,"T",0,3);
	SetRegEx(0XB0001780,"T",0,3);
	SetRegEx(0XB0001788,"T",0,3);
	SetRegEx(0XB00017B8,"T",0,3);
	SetRegEx(0XB00017C8,"T",0,3);
	SetRegEx(0XB00017EC,"T",0,3);
	SetRegEx(0XB0001808,"T",0,3);
	SetRegEx(0XB0001894,"T",0,3);
	SetRegEx(0XB00018D0,"T",0,3);
	SetRegEx(0XB00018D8,"T",0,3);
	SetRegEx(0XB00018E0,"T",0,3);
	SetRegEx(0XB0001904,"T",0,3);
	SetRegEx(0XB0001934,"T",0,3);
	SetRegEx(0XB0001968,"T",0,3);
	SetRegEx(0XB00019A0,"T",0,3);
	SetRegEx(0XB00019AC,"T",0,3);
	SetRegEx(0XB00019E4,"T",0,3);
	SetRegEx(0XB0001A64,"T",0,3);
	SetRegEx(0XB0001A70,"T",0,3);
	SetRegEx(0XB0001AF8,"T",0,3);
	SetRegEx(0XB0001B08,"T",0,3);
	SetRegEx(0XB0001B24,"T",0,3);
	SetRegEx(0XB0001B58,"T",0,3);
	SetRegEx(0XB0001B60,"T",0,3);
	SetRegEx(0XB0001B7C,"T",0,3);
	SetRegEx(0XB0001B98,"T",0,3);
	SetRegEx(0XB0001BA0,"T",0,3);
	SetRegEx(0XB0001BB8,"T",0,3);
	SetRegEx(0XB0001BC8,"T",0,3);
	SetRegEx(0XB0001BD4,"T",0,3);
	SetRegEx(0XB0001BE0,"T",0,3);
	SetRegEx(0XB0001BF8,"T",0,3);
	SetRegEx(0XB0001C00,"T",0,3);
	SetRegEx(0XB0001C14,"T",0,3);
	SetRegEx(0XB0001C1C,"T",0,3);
	SetRegEx(0XB0001C78,"T",0,3);
	SetRegEx(0XB0001CF4,"T",0,3);
	SetRegEx(0XB0001D00,"T",0,3);
	SetRegEx(0XB0001D04,"T",0,3);
	SetRegEx(0XB0001D70,"T",0,3);
	SetRegEx(0XB0001D7C,"T",0,3);
	SetRegEx(0XB0001D80,"T",0,3);
	SetRegEx(0XB0001DA0,"T",0,3);
	SetRegEx(0XB0001DD0,"T",0,3);
	SetRegEx(0XB0001E3C,"T",0,3);
	SetRegEx(0XB0001E4C,"T",0,3);
	SetRegEx(0XB0001E78,"T",0,3);
	SetRegEx(0XB0001E80,"T",0,3);
	SetRegEx(0XB0001EE8,"T",0,3);
	SetRegEx(0XB0001F14,"T",0,3);
	SetRegEx(0XB0001F20,"T",0,3);
	SetRegEx(0XB0001F70,"T",0,3);
	SetRegEx(0XB0001F78,"T",0,3);
	SetRegEx(0XB0001F9C,"T",0,3);
	SetRegEx(0XB0001FF8,"T",0,3);
	SetRegEx(0XB0002000,"T",0,3);
	SetRegEx(0XB0002018,"T",0,3);
	SetRegEx(0XB0002034,"T",0,3);
	SetRegEx(0XB0002054,"T",0,3);
	SetRegEx(0XB0002090,"T",0,3);
	SetRegEx(0XB000209C,"T",0,3);
	SetRegEx(0XB000214C,"T",0,3);
	SetRegEx(0XB0002168,"T",0,3);
	SetRegEx(0XB0002180,"T",0,3);
	SetRegEx(0XB0002184,"T",0,3);
	SetRegEx(0XB000218C,"T",0,3);
	SetRegEx(0XB00021A8,"T",0,3);
	SetRegEx(0XB00021CC,"T",0,3);
	SetRegEx(0XB0002208,"T",0,3);
	SetRegEx(0XB000220C,"T",0,3);
	SetRegEx(0XB000223C,"T",0,3);
	SetRegEx(0XB0002240,"T",0,3);
	SetRegEx(0XB000225C,"T",0,3);
	SetRegEx(0XB00022B8,"T",0,3);
	SetRegEx(0XB00022C4,"T",0,3);
	SetRegEx(0XB0002310,"T",0,3);
	SetRegEx(0XB000231C,"T",0,3);
	SetRegEx(0XB0002360,"T",0,3);
	SetRegEx(0XB0002394,"T",0,3);
	SetRegEx(0XB00023F8,"T",0,3);
	SetRegEx(0XB0002438,"T",0,3);
	SetRegEx(0XB0002444,"T",0,3);
	SetRegEx(0XB000247C,"T",0,3);
	SetRegEx(0XB0002494,"T",0,3);
	SetRegEx(0XB000249C,"T",0,3);
	SetRegEx(0XB00024D4,"T",0,3);
	SetRegEx(0XB00024F8,"T",0,3);
	SetRegEx(0XB0002504,"T",0,3);
	SetRegEx(0XB0002510,"T",0,3);
	SetRegEx(0XB000251C,"T",0,3);
	SetRegEx(0XB000254C,"T",0,3);
	SetRegEx(0XB0002598,"T",0,3);
	SetRegEx(0XB00025B4,"T",0,3);
	SetRegEx(0XB00025C8,"T",0,3);
	SetRegEx(0XB00025D4,"T",0,3);
	SetRegEx(0XB00025DC,"T",0,3);
	SetRegEx(0XB00025EC,"T",0,3);
	SetRegEx(0XB00025FC,"T",0,3);
	SetRegEx(0XB0002644,"T",0,3);
	SetRegEx(0XB0002658,"T",0,3);
	SetRegEx(0XB0002678,"T",0,3);
	SetRegEx(0XB0002688,"T",0,3);
	SetRegEx(0XB00026A8,"T",0,3);
	SetRegEx(0XB00026B0,"T",0,3);
	SetRegEx(0XB00026CC,"T",0,3);
	SetRegEx(0XB00026D8,"T",0,3);
	SetRegEx(0XB00026FC,"T",0,3);
	SetRegEx(0XB000270C,"T",0,3);
	SetRegEx(0XB0002794,"T",0,3);
	SetRegEx(0XB0002800,"T",0,3);
	SetRegEx(0XB000282C,"T",0,3);
	SetRegEx(0XB00028D8,"T",0,3);
	SetRegEx(0XB00028E0,"T",0,3);
	SetRegEx(0XB00028E4,"T",0,3);
	SetRegEx(0XB0002938,"T",0,3);
	SetRegEx(0XB0002974,"T",0,3);
	SetRegEx(0XB0002980,"T",0,3);
	SetRegEx(0XB000299C,"T",0,3);
	SetRegEx(0XB00029F8,"T",0,3);
	SetRegEx(0XB0002A04,"T",0,3);
	SetRegEx(0XB0002A1C,"T",0,3);
	SetRegEx(0XB0002A28,"T",0,3);
	SetRegEx(0XB0002A30,"T",0,3);
	SetRegEx(0XB0002A64,"T",0,3);
	SetRegEx(0XB0002B04,"T",0,3);
	SetRegEx(0XB0002B08,"T",0,3);
	SetRegEx(0XB0002B18,"T",0,3);
	SetRegEx(0XB0002B20,"T",0,3);
	SetRegEx(0XB0002BB0,"T",0,3);
	SetRegEx(0XB0002C08,"T",0,3);
	SetRegEx(0XB0002C1C,"T",0,3);
	SetRegEx(0XB0002C64,"T",0,3);
	SetRegEx(0XB0002C68,"T",0,3);
	SetRegEx(0XB0002C78,"T",0,3);
	SetRegEx(0XB0002CB8,"T",0,3);
	SetRegEx(0XB0002CF8,"T",0,3);
	SetRegEx(0XB0002D08,"T",0,3);
	SetRegEx(0XB0002D44,"T",0,3);
	SetRegEx(0XB0002D68,"T",0,3);
	SetRegEx(0XB0002D78,"T",0,3);
	SetRegEx(0XB0002D98,"T",0,3);
	SetRegEx(0XB0002DA8,"T",0,3);
	SetRegEx(0XB0002DBC,"T",0,3);
	SetRegEx(0XB0002E0C,"T",0,3);
	SetRegEx(0XB0002E50,"T",0,3);
	SetRegEx(0XB0002EC0,"T",0,3);
	SetRegEx(0XB0002ECC,"T",0,3);
	SetRegEx(0XB0002EE8,"T",0,3);
	SetRegEx(0XB0002F04,"T",0,3);
	SetRegEx(0XB0002F2C,"T",0,3);
	SetRegEx(0XB0002F44,"T",0,3);
	SetRegEx(0XB0002F48,"T",0,3);
	SetRegEx(0XB0002F50,"T",0,3);
	SetRegEx(0XB0002F94,"T",0,3);
	SetRegEx(0XB0002FA0,"T",0,3);
	SetRegEx(0XB0002FA4,"T",0,3);
	SetRegEx(0XB0002FE0,"T",0,3);
	SetRegEx(0XB0002FE8,"T",0,3);
	SetRegEx(0XB000300C,"T",0,3);
	SetRegEx(0XB0003028,"T",0,3);
	SetRegEx(0XB0003034,"T",0,3);
	SetRegEx(0XB0003064,"T",0,3);
	SetRegEx(0XB000306C,"T",0,3);
	SetRegEx(0XB0003088,"T",0,3);
	SetRegEx(0XB00030C8,"T",0,3);
	SetRegEx(0XB00030D8,"T",0,3);
	SetRegEx(0XB00030E4,"T",0,3);
	SetRegEx(0XB00030EC,"T",0,3);
	SetRegEx(0XB0003100,"T",0,3);
	SetRegEx(0XB0003110,"T",0,3);
	SetRegEx(0XB0003114,"T",0,3);
	SetRegEx(0XB0003140,"T",0,3);
	SetRegEx(0XB0003164,"T",0,3);
	SetRegEx(0XB0003168,"T",0,3);
	SetRegEx(0XB0003174,"T",0,3);
	SetRegEx(0XB0003184,"T",0,3);
	SetRegEx(0XB000319C,"T",0,3);
	SetRegEx(0XB00031C0,"T",0,3);
	SetRegEx(0XB00031FC,"T",0,3);
	SetRegEx(0XB0003264,"T",0,3);
	SetRegEx(0XB0003278,"T",0,3);
	SetRegEx(0XB00032B4,"T",0,3);
	SetRegEx(0XB00032F8,"T",0,3);
	SetRegEx(0XB00032FC,"T",0,3);
	SetRegEx(0XB000330C,"T",0,3);
	SetRegEx(0XB0003340,"T",0,3);
	SetRegEx(0XB0003374,"T",0,3);
	SetRegEx(0XB000342C,"T",0,3);
	SetRegEx(0XB0003430,"T",0,3);
	SetRegEx(0XB0003468,"T",0,3);
	SetRegEx(0XB0003488,"T",0,3);
	SetRegEx(0XB0003494,"T",0,3);
	SetRegEx(0XB00034B0,"T",0,3);
	SetRegEx(0XB00034C4,"T",0,3);
	SetRegEx(0XB00034D8,"T",0,3);
	SetRegEx(0XB00034F4,"T",0,3);
	SetRegEx(0XB000350C,"T",0,3);
	SetRegEx(0XB0003540,"T",0,3);
	SetRegEx(0XB0003554,"T",0,3);
	SetRegEx(0XB0003564,"T",0,3);
	SetRegEx(0XB0003590,"T",0,3);
	SetRegEx(0XB00035A8,"T",0,3);
	SetRegEx(0XB00035C4,"T",0,3);
	SetRegEx(0XB000360C,"T",0,3);
	SetRegEx(0XB0003628,"T",0,3);
	SetRegEx(0XB0003648,"T",0,3);
	SetRegEx(0XB0003664,"T",0,3);
	SetRegEx(0XB000367C,"T",0,3);
	SetRegEx(0XB0003694,"T",0,3);
	SetRegEx(0XB00036AC,"T",0,3);
	SetRegEx(0XB00036EC,"T",0,3);
	SetRegEx(0XB0003724,"T",0,3);
	SetRegEx(0XB0003730,"T",0,3);
	SetRegEx(0XB0003750,"T",0,3);
	SetRegEx(0XB000375C,"T",0,3);
	SetRegEx(0XB0003770,"T",0,3);
	SetRegEx(0XB0003774,"T",0,3);
	SetRegEx(0XB0003798,"T",0,3);
	SetRegEx(0XB00037A0,"T",0,3);
	SetRegEx(0XB00037B4,"T",0,3);
	SetRegEx(0XB000380C,"T",0,3);
	SetRegEx(0XB0003814,"T",0,3);
	SetRegEx(0XB000382C,"T",0,3);
	SetRegEx(0XB000385C,"T",0,3);
	SetRegEx(0XB0003878,"T",0,3);
	SetRegEx(0XB0003888,"T",0,3);
	SetRegEx(0XB00038A4,"T",0,3);
	SetRegEx(0XB00038DC,"T",0,3);
	SetRegEx(0XB00038EC,"T",0,3);
	SetRegEx(0XB0003924,"T",0,3);
	SetRegEx(0XB0003948,"T",0,3);
	SetRegEx(0XB00039C0,"T",0,3);
	SetRegEx(0XB00039C4,"T",0,3);
	SetRegEx(0XB00039CC,"T",0,3);
	SetRegEx(0XB0003A00,"T",0,3);
	SetRegEx(0XB0003A18,"T",0,3);
	SetRegEx(0XB0003A24,"T",0,3);
	SetRegEx(0XB0003A30,"T",0,3);
	SetRegEx(0XB0003A3C,"T",0,3);
	SetRegEx(0XB0003AAC,"T",0,3);
	SetRegEx(0XB0003B34,"T",0,3);
	SetRegEx(0XB0003B3C,"T",0,3);
	SetRegEx(0XB0003B70,"T",0,3);
	SetRegEx(0XB0003B80,"T",0,3);
	SetRegEx(0XB0003B8C,"T",0,3);
	SetRegEx(0XB0003BBC,"T",0,3);
	SetRegEx(0XB0003BFC,"T",0,3);
	SetRegEx(0XB0003C14,"T",0,3);
	SetRegEx(0XB0003C20,"T",0,3);
	SetRegEx(0XB0003C2C,"T",0,3);
	SetRegEx(0XB0003C38,"T",0,3);
	SetRegEx(0XB0003C6C,"T",0,3);
	SetRegEx(0XB0003C74,"T",0,3);
	SetRegEx(0XB0003D08,"T",0,3);
	SetRegEx(0XB0003D0C,"T",0,3);
	SetRegEx(0XB0003D1C,"T",0,3);
	SetRegEx(0XB0003D58,"T",0,3);
	SetRegEx(0XB0003D94,"T",0,3);
	SetRegEx(0XB0003DAC,"T",0,3);
	SetRegEx(0XB0003DDC,"T",0,3);
	SetRegEx(0XB0003DFC,"T",0,3);
	SetRegEx(0XB0003E18,"T",0,3);
	SetRegEx(0XB0003E34,"T",0,3);
	SetRegEx(0XB0003E5C,"T",0,3);
	SetRegEx(0XB0003E74,"T",0,3);
	SetRegEx(0XB0003E90,"T",0,3);
	SetRegEx(0XB0003EB0,"T",0,3);
	SetRegEx(0XB0003ECC,"T",0,3);
	SetRegEx(0XB0003EE4,"T",0,3);
	SetRegEx(0XB0003EFC,"T",0,3);
	SetRegEx(0XB0003F1C,"T",0,3);
	SetRegEx(0XB0003F34,"T",0,3);
	SetRegEx(0XB0003F50,"T",0,3);
	SetRegEx(0XB0003FAC,"T",0,3);
	SetRegEx(0XB0004098,"T",0,3);
	SetRegEx(0XB00040F0,"T",0,3);
	SetRegEx(0XB0004110,"T",0,3);
	SetRegEx(0XB0004118,"T",0,3);
	SetRegEx(0XB000411C,"T",0,3);
	SetRegEx(0XB0004124,"T",0,3);
	SetRegEx(0XB0004134,"T",0,3);
	SetRegEx(0XB000414C,"T",0,3);
	SetRegEx(0XB0004174,"T",0,3);
	SetRegEx(0XB0004178,"T",0,3);
	SetRegEx(0XB0004188,"T",0,3);
	SetRegEx(0XB00041AC,"T",0,3);
	SetRegEx(0XB00041D4,"T",0,3);
	SetRegEx(0XB00041F4,"T",0,3);
	SetRegEx(0XB0004234,"T",0,3);
	SetRegEx(0XB0004244,"T",0,3);
	SetRegEx(0XB0004278,"T",0,3);
	SetRegEx(0XB0004294,"T",0,3);
	SetRegEx(0XB00042CC,"T",0,3);
	SetRegEx(0XB00042E4,"T",0,3);
	SetRegEx(0XB00042FC,"T",0,3);
	SetRegEx(0XB0004344,"T",0,3);
	SetRegEx(0XB0004350,"T",0,3);
	SetRegEx(0XB0004390,"T",0,3);
	SetRegEx(0XB00043E4,"T",0,3);
	SetRegEx(0XB00043F4,"T",0,3);
	SetRegEx(0XB0004468,"T",0,3);
	SetRegEx(0XB000446C,"T",0,3);
	SetRegEx(0XB0004474,"T",0,3);
	SetRegEx(0XB00044A0,"T",0,3);
	SetRegEx(0XB00044A8,"T",0,3);
	SetRegEx(0XB00044B4,"T",0,3);
	SetRegEx(0XB00044E4,"T",0,3);
	SetRegEx(0XB0004554,"T",0,3);
	SetRegEx(0XB00045C0,"T",0,3);
	SetRegEx(0XB0004634,"T",0,3);
	SetRegEx(0XB0004668,"T",0,3);
	SetRegEx(0XB0004694,"T",0,3);
	SetRegEx(0XB000469C,"T",0,3);
	SetRegEx(0XB00046B4,"T",0,3);
	SetRegEx(0XB00046E0,"T",0,3);
	SetRegEx(0XB00046F4,"T",0,3);
	SetRegEx(0XB00046FC,"T",0,3);
	SetRegEx(0XB0004758,"T",0,3);
	SetRegEx(0XB000476C,"T",0,3);
	SetRegEx(0XB0004790,"T",0,3);
	SetRegEx(0XB0004798,"T",0,3);
	SetRegEx(0XB00047E4,"T",0,3);
	SetRegEx(0XB00047EC,"T",0,3);
	SetRegEx(0XB00047F8,"T",0,3);
	SetRegEx(0XB0004828,"T",0,3);
	SetRegEx(0XB0004840,"T",0,3);
	SetRegEx(0XB00048A4,"T",0,3);
	SetRegEx(0XB00048C0,"T",0,3);
	SetRegEx(0XB00048D8,"T",0,3);
	SetRegEx(0XB00048F0,"T",0,3);
	SetRegEx(0XB0004918,"T",0,3);
	SetRegEx(0XB0004930,"T",0,3);
	SetRegEx(0XB0004960,"T",0,3);
	SetRegEx(0XB000497C,"T",0,3);
	SetRegEx(0XB00049CC,"T",0,3);
	SetRegEx(0XB00049D4,"T",0,3);
	SetRegEx(0XB00049EC,"T",0,3);
	SetRegEx(0XB0004A24,"T",0,3);
	SetRegEx(0XB0004A44,"T",0,3);
	SetRegEx(0XB0004A5C,"T",0,3);
	SetRegEx(0XB0004A8C,"T",0,3);
	SetRegEx(0XB0004AB8,"T",0,3);
	SetRegEx(0XB0004AFC,"T",0,3);
	SetRegEx(0XB0004B00,"T",0,3);
	SetRegEx(0XB0004B08,"T",0,3);
	SetRegEx(0XB0004B18,"T",0,3);
	SetRegEx(0XB0004B30,"T",0,3);
	SetRegEx(0XB0004B60,"T",0,3);
	SetRegEx(0XB0004B90,"T",0,3);
	SetRegEx(0XB0004B98,"T",0,3);
	SetRegEx(0XB0004BA0,"T",0,3);
	SetRegEx(0XB0004BE4,"T",0,3);
	SetRegEx(0XB0004C14,"T",0,3);
	SetRegEx(0XB0004C90,"T",0,3);
	SetRegEx(0XB0004CAC,"T",0,3);
	SetRegEx(0XB0004CB0,"T",0,3);
	SetRegEx(0XB0004CB8,"T",0,3);
	SetRegEx(0XB0004CC8,"T",0,3);
	SetRegEx(0XB0004CD0,"T",0,3);
	SetRegEx(0XB0004CEC,"T",0,3);
	SetRegEx(0XB0004D10,"T",0,3);
	SetRegEx(0XB0004D58,"T",0,3);
	SetRegEx(0XB0004D70,"T",0,3);
	SetRegEx(0XB0004D80,"T",0,3);
	SetRegEx(0XB0004D84,"T",0,3);
	SetRegEx(0XB0004D8C,"T",0,3);
	SetRegEx(0XB0004D9C,"T",0,3);
	SetRegEx(0XB0004DAC,"T",0,3);
	SetRegEx(0XB0004DD0,"T",0,3);
	SetRegEx(0XB0004DDC,"T",0,3);
	SetRegEx(0XB0004E08,"T",0,3);
	SetRegEx(0XB0004E78,"T",0,3);
	SetRegEx(0XB0004EF0,"T",0,3);
	SetRegEx(0XB0004F04,"T",0,3);
	SetRegEx(0XB0004F44,"T",0,3);
	SetRegEx(0XB0004F60,"T",0,3);
	SetRegEx(0XB0004F68,"T",0,3);
	SetRegEx(0XB0004F88,"T",0,3);
	SetRegEx(0XB0004FE8,"T",0,3);
	SetRegEx(0XB0004FF8,"T",0,3);
	SetRegEx(0XB000500C,"T",0,3);
	SetRegEx(0XB0005028,"T",0,3);
	SetRegEx(0XB0005080,"T",0,3);
	SetRegEx(0XB0005088,"T",0,3);
	SetRegEx(0XB000509C,"T",0,3);
	SetRegEx(0XB00050E4,"T",0,3);
	SetRegEx(0XB0005104,"T",0,3);
	SetRegEx(0XB0005118,"T",0,3);
	SetRegEx(0XB000512C,"T",0,3);
	SetRegEx(0XB0005144,"T",0,3);
	SetRegEx(0XB0005160,"T",0,3);
	SetRegEx(0XB00051D0,"T",0,3);
	SetRegEx(0XB00051DC,"T",0,3);
	SetRegEx(0XB000523C,"T",0,3);
	SetRegEx(0XB0005248,"T",0,3);
	SetRegEx(0XB0005270,"T",0,3);
	SetRegEx(0XB0005274,"T",0,3);
	SetRegEx(0XB000528C,"T",0,3);
	SetRegEx(0XB00052C8,"T",0,3);
	SetRegEx(0XB0005300,"T",0,3);
	SetRegEx(0XB0005310,"T",0,3);
	SetRegEx(0XB0005328,"T",0,3);
	SetRegEx(0XB000533C,"T",0,3);
	SetRegEx(0XB0005358,"T",0,3);
	SetRegEx(0XB0005398,"T",0,3);
	SetRegEx(0XB00053A0,"T",0,3);
	SetRegEx(0XB00053E8,"T",0,3);
	SetRegEx(0XB00053FC,"T",0,3);
	SetRegEx(0XB0005404,"T",0,3);
	SetRegEx(0XB000541C,"T",0,3);
	SetRegEx(0XB000543C,"T",0,3);
	SetRegEx(0XB000547C,"T",0,3);
	SetRegEx(0XB0005484,"T",0,3);
	SetRegEx(0XB00054C0,"T",0,3);
	SetRegEx(0XB0005538,"T",0,3);
	SetRegEx(0XB0005544,"T",0,3);
	SetRegEx(0XB000556C,"T",0,3);
	SetRegEx(0XB0005580,"T",0,3);
	SetRegEx(0XB00055A0,"T",0,3);
	SetRegEx(0XB00055B8,"T",0,3);
	SetRegEx(0XB00055D8,"T",0,3);
	SetRegEx(0XB00055F0,"T",0,3);
	SetRegEx(0XB0005620,"T",0,3);
	SetRegEx(0XB00056E8,"T",0,3);
	SetRegEx(0XB00056F4,"T",0,3);
	SetRegEx(0XB00056FC,"T",0,3);
	SetRegEx(0XB000570C,"T",0,3);
	SetRegEx(0XB0005734,"T",0,3);
	SetRegEx(0XB000575C,"T",0,3);
	SetRegEx(0XB000577C,"T",0,3);
	SetRegEx(0XB00057AC,"T",0,3);
	SetRegEx(0XB00057C0,"T",0,3);
	SetRegEx(0XB00057C4,"T",0,3);
	SetRegEx(0XB00057F4,"T",0,3);
	SetRegEx(0XB00057FC,"T",0,3);
	SetRegEx(0XB0005820,"T",0,3);
	SetRegEx(0XB0005844,"T",0,3);
	SetRegEx(0XB0005860,"T",0,3);
	SetRegEx(0XB0005868,"T",0,3);
	SetRegEx(0XB0005874,"T",0,3);
	SetRegEx(0XB0005898,"T",0,3);
	SetRegEx(0XB00058B4,"T",0,3);
	SetRegEx(0XB00058BC,"T",0,3);
	SetRegEx(0XB00058C8,"T",0,3);
	SetRegEx(0XB00058EC,"T",0,3);
	SetRegEx(0XB0005908,"T",0,3);
	SetRegEx(0XB0005910,"T",0,3);
	SetRegEx(0XB000591C,"T",0,3);
	SetRegEx(0XB000593C,"T",0,3);
	SetRegEx(0XB0005958,"T",0,3);
	SetRegEx(0XB0005960,"T",0,3);
	SetRegEx(0XB0005984,"T",0,3);
	SetRegEx(0XB000599C,"T",0,3);
	SetRegEx(0XB00059B4,"T",0,3);
	SetRegEx(0XB00059FC,"T",0,3);
	SetRegEx(0XB0005A08,"T",0,3);
	SetRegEx(0XB0005A18,"T",0,3);
	SetRegEx(0XB0005A34,"T",0,3);
	SetRegEx(0XB0005A6C,"T",0,3);
	SetRegEx(0XB0005A84,"T",0,3);
	SetRegEx(0XB0005A90,"T",0,3);
	SetRegEx(0XB0005A9C,"T",0,3);
	SetRegEx(0XB0005AA4,"T",0,3);
	SetRegEx(0XB0005AC0,"T",0,3);
	SetRegEx(0XB0005ADC,"T",0,3);
	SetRegEx(0XB0005AF4,"T",0,3);
	SetRegEx(0XB0005B04,"T",0,3);
	SetRegEx(0XB0005B2C,"T",0,3);
	SetRegEx(0XB0005B3C,"T",0,3);
	SetRegEx(0XB0005B58,"T",0,3);
	SetRegEx(0XB0005B68,"T",0,3);
	SetRegEx(0XB0005B88,"T",0,3);
	SetRegEx(0XB0005B98,"T",0,3);
	SetRegEx(0XB0005BB4,"T",0,3);
	SetRegEx(0XB0005BD0,"T",0,3);
	SetRegEx(0XB0005BDC,"T",0,3);
	SetRegEx(0XB0005BE4,"T",0,3);
	SetRegEx(0XB0005BEC,"T",0,3);
	SetRegEx(0XB0005C00,"T",0,3);
	SetRegEx(0XB0005C3C,"T",0,3);
	SetRegEx(0XB0005C5C,"T",0,3);
	SetRegEx(0XB0005C64,"T",0,3);
	SetRegEx(0XB0005CBC,"T",0,3);
	SetRegEx(0XB0005CEC,"T",0,3);
	SetRegEx(0XB0005CF4,"T",0,3);
	SetRegEx(0XB0005CFC,"T",0,3);
	SetRegEx(0XB0005D38,"T",0,3);
	SetRegEx(0XB0005D50,"T",0,3);
	SetRegEx(0XB0005D9C,"T",0,3);
	SetRegEx(0XB0005DB8,"T",0,3);
	SetRegEx(0XB0005DCC,"T",0,3);
	SetRegEx(0XB0005DD4,"T",0,3);
	SetRegEx(0XB0005E14,"T",0,3);
	SetRegEx(0XB0005E18,"T",0,3);
	SetRegEx(0XB0005E40,"T",0,3);
	SetRegEx(0XB0005E58,"T",0,3);
	SetRegEx(0XB0005E68,"T",0,3);
	SetRegEx(0XB0005E90,"T",0,3);
	SetRegEx(0XB0005EA0,"T",0,3);
	SetRegEx(0XB0005EE0,"T",0,3);
	SetRegEx(0XB0005F20,"T",0,3);
	SetRegEx(0XB0005F28,"T",0,3);
	SetRegEx(0XB0005F74,"T",0,3);
	SetRegEx(0XB0005FB0,"T",0,3);
	SetRegEx(0XB0005FDC,"T",0,3);
	SetRegEx(0XB0005FE4,"T",0,3);
	SetRegEx(0XB000602C,"T",0,3);
	SetRegEx(0XB000607C,"T",0,3);
	SetRegEx(0XB0006088,"T",0,3);
	SetRegEx(0XB00060A0,"T",0,3);
	SetRegEx(0XB00060F0,"T",0,3);
	SetRegEx(0XB000611C,"T",0,3);
	SetRegEx(0XB0006150,"T",0,3);
	SetRegEx(0XB0006160,"T",0,3);
	SetRegEx(0XB0006170,"T",0,3);
	SetRegEx(0XB0006188,"T",0,3);
	SetRegEx(0XB00061A8,"T",0,3);
	SetRegEx(0XB00061B8,"T",0,3);
	SetRegEx(0XB00061E0,"T",0,3);
	SetRegEx(0XB00061F4,"T",0,3);
	SetRegEx(0XB0006208,"T",0,3);
	SetRegEx(0XB0006218,"T",0,3);
	SetRegEx(0XB0006220,"T",0,3);
	SetRegEx(0XB000628C,"T",0,3);
	SetRegEx(0XB00062B8,"T",0,3);
	SetRegEx(0XB00062D8,"T",0,3);
	SetRegEx(0XB00062EC,"T",0,3);
	SetRegEx(0XB0006300,"T",0,3);
	SetRegEx(0XB0006310,"T",0,3);
	SetRegEx(0XB0006318,"T",0,3);
	SetRegEx(0XB0006348,"T",0,3);
	SetRegEx(0XB0006378,"T",0,3);
	SetRegEx(0XB0006398,"T",0,3);
	SetRegEx(0XB00063DC,"T",0,3);
	SetRegEx(0XB00063E8,"T",0,3);
	SetRegEx(0XB00063F8,"T",0,3);
	SetRegEx(0XB0006444,"T",0,3);
	SetRegEx(0XB0006470,"T",0,3);
	SetRegEx(0XB0006474,"T",0,3);
	SetRegEx(0XB00064A4,"T",0,3);
	SetRegEx(0XB00064C8,"T",0,3);
	SetRegEx(0XB00064E8,"T",0,3);
	SetRegEx(0XB00064F4,"T",0,3);
	SetRegEx(0XB000656C,"T",0,3);
	SetRegEx(0XB0006580,"T",0,3);
	SetRegEx(0XB00065C0,"T",0,3);
	SetRegEx(0XB00065C8,"T",0,3);
	SetRegEx(0XB00065E0,"T",0,3);
	SetRegEx(0XB0006608,"T",0,3);
	SetRegEx(0XB0006644,"T",0,3);
	SetRegEx(0XB0006660,"T",0,3);
	SetRegEx(0XB0006690,"T",0,3);
	SetRegEx(0XB0006698,"T",0,3);
	SetRegEx(0XB00066E0,"T",0,3);
	SetRegEx(0XB0006700,"T",0,3);
	SetRegEx(0XB0006724,"T",0,3);
	SetRegEx(0XB0006748,"T",0,3);
	SetRegEx(0XB0006764,"T",0,3);
	SetRegEx(0XB0006770,"T",0,3);
	SetRegEx(0XB00067A4,"T",0,3);
	SetRegEx(0XB00067D0,"T",0,3);
	SetRegEx(0XB00067FC,"T",0,3);
	SetRegEx(0XB000680C,"T",0,3);
	SetRegEx(0XB000681C,"T",0,3);
	SetRegEx(0XB0006824,"T",0,3);
	SetRegEx(0XB0006834,"T",0,3);
	SetRegEx(0XB000688C,"T",0,3);
	SetRegEx(0XB0006898,"T",0,3);
	SetRegEx(0XB00068D4,"T",0,3);
	SetRegEx(0XB0006944,"T",0,3);
	SetRegEx(0XB000696C,"T",0,3);
	SetRegEx(0XB0006984,"T",0,3);
	SetRegEx(0XB0006990,"T",0,3);
	SetRegEx(0XB00069B8,"T",0,3);
	SetRegEx(0XB0006A14,"T",0,3);
	SetRegEx(0XB0006A40,"T",0,3);
	SetRegEx(0XB0006A68,"T",0,3);
	SetRegEx(0XB0006A98,"T",0,3);
	SetRegEx(0XB0006AA0,"T",0,3);
	SetRegEx(0XB0006AB8,"T",0,3);
	SetRegEx(0XB0006AD0,"T",0,3);
	SetRegEx(0XB0006B04,"T",0,3);
	SetRegEx(0XB0006B1C,"T",0,3);
	SetRegEx(0XB0006B74,"T",0,3);
	SetRegEx(0XB0006BD0,"T",0,3);
	SetRegEx(0XB0006C0C,"T",0,3);
	SetRegEx(0XB0006C10,"T",0,3);
	SetRegEx(0XB0006C1C,"T",0,3);
	SetRegEx(0XB0006C24,"T",0,3);
	SetRegEx(0XB0006C58,"T",0,3);
	SetRegEx(0XB0006D20,"T",0,3);
	SetRegEx(0XB0006D38,"T",0,3);
	SetRegEx(0XB0006D50,"T",0,3);
	SetRegEx(0XB0006D58,"T",0,3);
	SetRegEx(0XB0006D88,"T",0,3);
	SetRegEx(0XB0006DD0,"T",0,3);
	SetRegEx(0XB0006DE8,"T",0,3);
	SetRegEx(0XB0006E24,"T",0,3);
	SetRegEx(0XB0006E50,"T",0,3);
	SetRegEx(0XB0006E58,"T",0,3);
	SetRegEx(0XB0006E80,"T",0,3);
	SetRegEx(0XB0006E88,"T",0,3);
	SetRegEx(0XB0006EB0,"T",0,3);
	SetRegEx(0XB0006EC4,"T",0,3);
	SetRegEx(0XB0006F1C,"T",0,3);
	SetRegEx(0XB0006F20,"T",0,3);
	SetRegEx(0XB0006FD8,"T",0,3);
	SetRegEx(0XB0007024,"T",0,3);
	SetRegEx(0XB0007038,"T",0,3);
	SetRegEx(0XB0007060,"T",0,3);
	SetRegEx(0XB0007068,"T",0,3);
	SetRegEx(0XB00070B8,"T",0,3);
	SetRegEx(0XB00070DC,"T",0,3);
	SetRegEx(0XB00070E4,"T",0,3);
	SetRegEx(0XB00070F4,"T",0,3);
	SetRegEx(0XB0007120,"T",0,3);
	SetRegEx(0XB000716C,"T",0,3);
	SetRegEx(0XB00071A4,"T",0,3);
	SetRegEx(0XB00071B8,"T",0,3);
	SetRegEx(0XB00071F8,"T",0,3);
	SetRegEx(0XB0007280,"T",0,3);
	SetRegEx(0XB00072C0,"T",0,3);
	SetRegEx(0XB00072D4,"T",0,3);
	SetRegEx(0XB0007314,"T",0,3);
	SetRegEx(0XB0007374,"T",0,3);
	SetRegEx(0XB00073B0,"T",0,3);
	SetRegEx(0XB00073C4,"T",0,3);
	SetRegEx(0XB0007404,"T",0,3);
	SetRegEx(0XB0007478,"T",0,3);
	SetRegEx(0XB00074B8,"T",0,3);
	SetRegEx(0XB00074CC,"T",0,3);
	SetRegEx(0XB000750C,"T",0,3);
	SetRegEx(0XB0007590,"T",0,3);
	SetRegEx(0XB00075CC,"T",0,3);
	SetRegEx(0XB00075E0,"T",0,3);
	SetRegEx(0XB0007620,"T",0,3);
	SetRegEx(0XB0007698,"T",0,3);
	SetRegEx(0XB00076D4,"T",0,3);
	SetRegEx(0XB00076E8,"T",0,3);
	SetRegEx(0XB0007728,"T",0,3);
	SetRegEx(0XB0007778,"T",0,3);
	SetRegEx(0XB00077AC,"T",0,3);
	SetRegEx(0XB00077C0,"T",0,3);
	SetRegEx(0XB0007800,"T",0,3);
	SetRegEx(0XB0007854,"T",0,3);
	SetRegEx(0XB000788C,"T",0,3);
	SetRegEx(0XB00078A0,"T",0,3);
	SetRegEx(0XB00078E0,"T",0,3);
	SetRegEx(0XB0007938,"T",0,3);
	SetRegEx(0XB000796C,"T",0,3);
	SetRegEx(0XB0007980,"T",0,3);
	SetRegEx(0XB00079C0,"T",0,3);
	SetRegEx(0XB0007A0C,"T",0,3);
	SetRegEx(0XB0007A40,"T",0,3);
	SetRegEx(0XB0007A54,"T",0,3);
	SetRegEx(0XB0007A94,"T",0,3);
	SetRegEx(0XB0007AF4,"T",0,3);
	SetRegEx(0XB0007B30,"T",0,3);
	SetRegEx(0XB0007B44,"T",0,3);
	SetRegEx(0XB0007B84,"T",0,3);
	SetRegEx(0XB0007C14,"T",0,3);
	SetRegEx(0XB0007C54,"T",0,3);
	SetRegEx(0XB0007C68,"T",0,3);
	SetRegEx(0XB0007CA8,"T",0,3);
	SetRegEx(0XB0007CF4,"T",0,3);
	SetRegEx(0XB0007D28,"T",0,3);
	SetRegEx(0XB0007D3C,"T",0,3);
	SetRegEx(0XB0007D7C,"T",0,3);
	SetRegEx(0XB0007DE8,"T",0,3);
	SetRegEx(0XB0007E20,"T",0,3);
	SetRegEx(0XB0007E34,"T",0,3);
	SetRegEx(0XB0007E74,"T",0,3);
	SetRegEx(0XB0007ECC,"T",0,3);
	SetRegEx(0XB0007F00,"T",0,3);
	SetRegEx(0XB0007F14,"T",0,3);
	SetRegEx(0XB0007F54,"T",0,3);
	SetRegEx(0XB0007FAC,"T",0,3);
	SetRegEx(0XB0007FE4,"T",0,3);
	SetRegEx(0XB0007FF8,"T",0,3);
	SetRegEx(0XB0008038,"T",0,3);
	SetRegEx(0XB0008088,"T",0,3);
	SetRegEx(0XB00080C0,"T",0,3);
	SetRegEx(0XB00080D4,"T",0,3);
	SetRegEx(0XB0008114,"T",0,3);
	SetRegEx(0XB000816C,"T",0,3);
	SetRegEx(0XB00081A0,"T",0,3);
	SetRegEx(0XB00081B4,"T",0,3);
	SetRegEx(0XB00081F4,"T",0,3);
	SetRegEx(0XB0008244,"T",0,3);
	SetRegEx(0XB000827C,"T",0,3);
	SetRegEx(0XB0008290,"T",0,3);
	SetRegEx(0XB00082D0,"T",0,3);
	SetRegEx(0XB0008328,"T",0,3);
	SetRegEx(0XB0008360,"T",0,3);
	SetRegEx(0XB0008374,"T",0,3);
	SetRegEx(0XB00083B4,"T",0,3);
	SetRegEx(0XB000840C,"T",0,3);
	SetRegEx(0XB0008440,"T",0,3);
	SetRegEx(0XB0008454,"T",0,3);
	SetRegEx(0XB0008494,"T",0,3);
	SetRegEx(0XB00084E0,"T",0,3);
	SetRegEx(0XB0008514,"T",0,3);
	SetRegEx(0XB0008528,"T",0,3);
	SetRegEx(0XB0008568,"T",0,3);
	SetRegEx(0XB00085C8,"T",0,3);
	SetRegEx(0XB00085FC,"T",0,3);
	SetRegEx(0XB0008610,"T",0,3);
	SetRegEx(0XB0008650,"T",0,3);
	SetRegEx(0XB00086B4,"T",0,3);
	SetRegEx(0XB00086EC,"T",0,3);
	SetRegEx(0XB0008700,"T",0,3);
	SetRegEx(0XB0008740,"T",0,3);
	SetRegEx(0XB00087A4,"T",0,3);
	SetRegEx(0XB00087DC,"T",0,3);
	SetRegEx(0XB00087F0,"T",0,3);
	SetRegEx(0XB0008830,"T",0,3);
	SetRegEx(0XB0008884,"T",0,3);
	SetRegEx(0XB00088BC,"T",0,3);
	SetRegEx(0XB00088D0,"T",0,3);
	SetRegEx(0XB0008910,"T",0,3);
	SetRegEx(0XB000896C,"T",0,3);
	SetRegEx(0XB00089AC,"T",0,3);
	SetRegEx(0XB00089C0,"T",0,3);
	SetRegEx(0XB0008A00,"T",0,3);
	SetRegEx(0XB0008A5C,"T",0,3);
	SetRegEx(0XB0008A9C,"T",0,3);
	SetRegEx(0XB0008AB0,"T",0,3);
	SetRegEx(0XB0008AF0,"T",0,3);
	SetRegEx(0XB0008B3C,"T",0,3);
	SetRegEx(0XB0008B70,"T",0,3);
	SetRegEx(0XB0008B84,"T",0,3);
	SetRegEx(0XB0008BC4,"T",0,3);
	SetRegEx(0XB0008C14,"T",0,3);
	SetRegEx(0XB0008C48,"T",0,3);
	SetRegEx(0XB0008C5C,"T",0,3);
	SetRegEx(0XB0008C9C,"T",0,3);
	SetRegEx(0XB0008D08,"T",0,3);
	SetRegEx(0XB0008D40,"T",0,3);
	SetRegEx(0XB0008D54,"T",0,3);
	SetRegEx(0XB0008D94,"T",0,3);
	SetRegEx(0XB0008DF0,"T",0,3);
	SetRegEx(0XB0008E28,"T",0,3);
	SetRegEx(0XB0008E3C,"T",0,3);
	SetRegEx(0XB0008E7C,"T",0,3);
	SetRegEx(0XB0008EC8,"T",0,3);
	SetRegEx(0XB0008EFC,"T",0,3);
	SetRegEx(0XB0008F10,"T",0,3);
	SetRegEx(0XB0008F50,"T",0,3);
	SetRegEx(0XB0008FB4,"T",0,3);
	SetRegEx(0XB0008FEC,"T",0,3);
	SetRegEx(0XB0009000,"T",0,3);
	SetRegEx(0XB0009040,"T",0,3);
	SetRegEx(0XB0009098,"T",0,3);
	SetRegEx(0XB00090CC,"T",0,3);
	SetRegEx(0XB00090E0,"T",0,3);
	SetRegEx(0XB0009120,"T",0,3);
	SetRegEx(0XB0009168,"T",0,3);
	SetRegEx(0XB000919C,"T",0,3);
	SetRegEx(0XB00091B0,"T",0,3);
	SetRegEx(0XB00091F0,"T",0,3);
	SetRegEx(0XB0009254,"T",0,3);
	SetRegEx(0XB0009294,"T",0,3);
	SetRegEx(0XB00092A8,"T",0,3);
	SetRegEx(0XB00092E8,"T",0,3);
	SetRegEx(0XB0009338,"T",0,3);
	SetRegEx(0XB0009370,"T",0,3);
	SetRegEx(0XB0009384,"T",0,3);
	SetRegEx(0XB00093C4,"T",0,3);
	SetRegEx(0XB00093D0,"T",0,3);
	SetRegEx(0XB00093DC,"T",0,3);
	SetRegEx(0XB00093E4,"T",0,3);
	SetRegEx(0XB0009458,"T",0,3);
	SetRegEx(0XB0009474,"T",0,3);
	SetRegEx(0XB000947C,"T",0,3);
	SetRegEx(0XB00094A0,"T",0,3);
	SetRegEx(0XB00094B4,"T",0,3);
	SetRegEx(0XB0009668,"T",0,3);
	SetRegEx(0XB00096EC,"T",0,3);
	SetRegEx(0XB0009748,"T",0,3);
	SetRegEx(0XB0009758,"T",0,3);
	SetRegEx(0XB0009760,"T",0,3);
	SetRegEx(0XB0009854,"T",0,3);
	SetRegEx(0XB00098C8,"T",0,3);
	SetRegEx(0XB00098D8,"T",0,3);
	SetRegEx(0XB00098E0,"T",0,3);
	SetRegEx(0XB0009910,"T",0,3);
	SetRegEx(0XB0009A08,"T",0,3);
	SetRegEx(0XB0009A34,"T",0,3);
	SetRegEx(0XB0009A40,"T",0,3);
	SetRegEx(0XB0009A78,"T",0,3);
	SetRegEx(0XB0009A88,"T",0,3);
	SetRegEx(0XB0009AC8,"T",0,3);
	SetRegEx(0XB0009B30,"T",0,3);
	SetRegEx(0XB0009B44,"T",0,3);
	SetRegEx(0XB0009B4C,"T",0,3);
	SetRegEx(0XB0009BA8,"T",0,3);
	SetRegEx(0XB0009C08,"T",0,3);
	SetRegEx(0XB0009C7C,"T",0,3);
	SetRegEx(0XB0009CA8,"T",0,3);
	SetRegEx(0XB0009CB4,"T",0,3);
	SetRegEx(0XB0009CD0,"T",0,3);
	SetRegEx(0XB0009CE0,"T",0,3);
	SetRegEx(0XB0009CEC,"T",0,3);
	SetRegEx(0XB0009D34,"T",0,3);
	SetRegEx(0XB0009D60,"T",0,3);
	SetRegEx(0XB0009D90,"T",0,3);
	SetRegEx(0XB0009D9C,"T",0,3);
	SetRegEx(0XB0009DC4,"T",0,3);
	SetRegEx(0XB0009E08,"T",0,3);
	SetRegEx(0XB0009E28,"T",0,3);
	SetRegEx(0XB0009E34,"T",0,3);
	SetRegEx(0XB0009E64,"T",0,3);
	SetRegEx(0XB0009E94,"T",0,3);
	SetRegEx(0XB0009FC8,"T",0,3);
	SetRegEx(0XB0009FD8,"T",0,3);
	SetRegEx(0XB000A014,"T",0,3);
	SetRegEx(0XB000A01C,"T",0,3);
	SetRegEx(0XB000A038,"T",0,3);
	SetRegEx(0XB000A050,"T",0,3);
	SetRegEx(0XB000A064,"T",0,3);
	SetRegEx(0XB000A07C,"T",0,3);
	SetRegEx(0XB000A08C,"T",0,3);
	SetRegEx(0XB000A098,"T",0,3);
	SetRegEx(0XB000A0F8,"T",0,3);
	SetRegEx(0XB000A134,"T",0,3);
	SetRegEx(0XB000A154,"T",0,3);
	SetRegEx(0XB000A18C,"T",0,3);
	SetRegEx(0XB000A194,"T",0,3);
	SetRegEx(0XB000A1C4,"T",0,3);
	SetRegEx(0XB000A1F0,"T",0,3);
	SetRegEx(0XB000A22C,"T",0,3);
	SetRegEx(0XB000A230,"T",0,3);
	SetRegEx(0XB000A240,"T",0,3);
	SetRegEx(0XB000A248,"T",0,3);
	SetRegEx(0XB000A274,"T",0,3);
	SetRegEx(0XB000A2C8,"T",0,3);
	SetRegEx(0XB000A2D8,"T",0,3);
	SetRegEx(0XB000A2E8,"T",0,3);
	SetRegEx(0XB000A2F8,"T",0,3);
	SetRegEx(0XB000A304,"T",0,3);
	SetRegEx(0XB000A318,"T",0,3);
	SetRegEx(0XB000A330,"T",0,3);
	SetRegEx(0XB000A344,"T",0,3);
	SetRegEx(0XB000A374,"T",0,3);
	SetRegEx(0XB000A384,"T",0,3);
	SetRegEx(0XB000A398,"T",0,3);
	SetRegEx(0XB000A3BC,"T",0,3);
	SetRegEx(0XB000A3C8,"T",0,3);
	SetRegEx(0XB000A3DC,"T",0,3);
	SetRegEx(0XB000A408,"T",0,3);
	SetRegEx(0XB000A424,"T",0,3);
	SetRegEx(0XB000A438,"T",0,3);
	SetRegEx(0XB000A450,"T",0,3);
	SetRegEx(0XB000A494,"T",0,3);
	SetRegEx(0XB000A4BC,"T",0,3);
	SetRegEx(0XB000A4DC,"T",0,3);
	SetRegEx(0XB000A4E8,"T",0,3);
	SetRegEx(0XB000A508,"T",0,3);
	SetRegEx(0XB000A51C,"T",0,3);
	SetRegEx(0XB000A534,"T",0,3);
	SetRegEx(0XB000A55C,"T",0,3);
	SetRegEx(0XB000A568,"T",0,3);
	SetRegEx(0XB000A570,"T",0,3);
	SetRegEx(0XB000A574,"T",0,3);
	SetRegEx(0XB000A58C,"T",0,3);
	SetRegEx(0XB000A5EC,"T",0,3);
	SetRegEx(0XB000A5F8,"T",0,3);
	SetRegEx(0XB000A624,"T",0,3);
	SetRegEx(0XB000A62C,"T",0,3);
	SetRegEx(0XB000A66C,"T",0,3);
	SetRegEx(0XB000A678,"T",0,3);
	SetRegEx(0XB000A680,"T",0,3);
	SetRegEx(0XB000A708,"T",0,3);
	SetRegEx(0XB000A758,"T",0,3);
	SetRegEx(0XB000A790,"T",0,3);
	SetRegEx(0XB000A7B4,"T",0,3);
	SetRegEx(0XB000A7C0,"T",0,3);
	SetRegEx(0XB000A7CC,"T",0,3);
	SetRegEx(0XB000A810,"T",0,3);
	SetRegEx(0XB000A98C,"T",0,3);
	SetRegEx(0XB000A99C,"T",0,3);
	SetRegEx(0XB000A9B8,"T",0,3);
	SetRegEx(0XB000A9EC,"T",0,3);
	SetRegEx(0XB000A9F8,"T",0,3);
	SetRegEx(0XB000AA08,"T",0,3);
	SetRegEx(0XB000AA20,"T",0,3);
	SetRegEx(0XB000AA30,"T",0,3);
	SetRegEx(0XB000AA74,"T",0,3);
	SetRegEx(0XB000AAB4,"T",0,3);
	SetRegEx(0XB000AB0C,"T",0,3);
	SetRegEx(0XB000AB88,"T",0,3);
	SetRegEx(0XB000ABA8,"T",0,3);
	SetRegEx(0XB000ABE8,"T",0,3);
	SetRegEx(0XB000ABF0,"T",0,3);
	SetRegEx(0XB000AC18,"T",0,3);
	SetRegEx(0XB000ACE4,"T",0,3);
	SetRegEx(0XB000ACEC,"T",0,3);
	SetRegEx(0XB000AD10,"T",0,3);
	SetRegEx(0XB000AD40,"T",0,3);
	SetRegEx(0XB000AD44,"T",0,3);
	SetRegEx(0XB000AD7C,"T",0,3);
	SetRegEx(0XB000ADC0,"T",0,3);
	SetRegEx(0XB000ADDC,"T",0,3);
	SetRegEx(0XB000ADEC,"T",0,3);
	SetRegEx(0XB000AE00,"T",0,3);
	SetRegEx(0XB000AE48,"T",0,3);
	SetRegEx(0XB000AE64,"T",0,3);
	SetRegEx(0XB000AE7C,"T",0,3);
	SetRegEx(0XB000AEC4,"T",0,3);
	SetRegEx(0XB000AED4,"T",0,3);
	SetRegEx(0XB000AF14,"T",0,3);
	SetRegEx(0XB000AF28,"T",0,3);
	SetRegEx(0XB000AF34,"T",0,3);
	SetRegEx(0XB000AF78,"T",0,3);
	SetRegEx(0XB000AFA0,"T",0,3);
	SetRegEx(0XB000B064,"T",0,3);
	SetRegEx(0XB000B06C,"T",0,3);
	SetRegEx(0XB000B078,"T",0,3);
	SetRegEx(0XB000B080,"T",0,3);
	SetRegEx(0XB000B0D4,"T",0,3);
	SetRegEx(0XB000B0E0,"T",0,3);
	SetRegEx(0XB000B0F0,"T",0,3);
	SetRegEx(0XB000B100,"T",0,3);
	SetRegEx(0XB000B140,"T",0,3);
	SetRegEx(0XB000B180,"T",0,3);
	SetRegEx(0XB000B1E8,"T",0,3);
	SetRegEx(0XB000B1F4,"T",0,3);
	SetRegEx(0XB000B210,"T",0,3);
	SetRegEx(0XB000B218,"T",0,3);
	SetRegEx(0XB000B294,"T",0,3);
	SetRegEx(0XB000B2C0,"T",0,3);
	SetRegEx(0XB000B30C,"T",0,3);
	SetRegEx(0XB000B31C,"T",0,3);
	SetRegEx(0XB000B328,"T",0,3);
	SetRegEx(0XB000B330,"T",0,3);
	SetRegEx(0XB000B35C,"T",0,3);
	SetRegEx(0XB000B378,"T",0,3);
	SetRegEx(0XB000B38C,"T",0,3);
	SetRegEx(0XB000B3D4,"T",0,3);
	SetRegEx(0XB000B3EC,"T",0,3);
	SetRegEx(0XB000B3F4,"T",0,3);
	SetRegEx(0XB000B414,"T",0,3);
	SetRegEx(0XB000B430,"T",0,3);
	SetRegEx(0XB000B440,"T",0,3);
	SetRegEx(0XB000B45C,"T",0,3);
	SetRegEx(0XB000B464,"T",0,3);
	SetRegEx(0XB000B478,"T",0,3);
	SetRegEx(0XB000B484,"T",0,3);
	SetRegEx(0XB000B494,"T",0,3);
	SetRegEx(0XB000B4B0,"T",0,3);
	SetRegEx(0XB000B4B8,"T",0,3);
	SetRegEx(0XB000B4D4,"T",0,3);
	SetRegEx(0XB000B4F8,"T",0,3);
	SetRegEx(0XB000B4FC,"T",0,3);
	SetRegEx(0XB000B540,"T",0,3);
	SetRegEx(0XB000B568,"T",0,3);
	SetRegEx(0XB000B594,"T",0,3);
	SetRegEx(0XB000B5B0,"T",0,3);
	SetRegEx(0XB000B5C4,"T",0,3);
	SetRegEx(0XB000B5D4,"T",0,3);
	SetRegEx(0XB000B60C,"T",0,3);
	SetRegEx(0XB000B618,"T",0,3);
	SetRegEx(0XB000B634,"T",0,3);
	SetRegEx(0XB000B658,"T",0,3);
	SetRegEx(0XB000B674,"T",0,3);
	SetRegEx(0XB000B698,"T",0,3);
	SetRegEx(0XB000B6B4,"T",0,3);
	SetRegEx(0XB000B6D8,"T",0,3);
	SetRegEx(0XB000B708,"T",0,3);
	SetRegEx(0XB000B728,"T",0,3);
	SetRegEx(0XB000B730,"T",0,3);
	SetRegEx(0XB000B74C,"T",0,3);
	SetRegEx(0XB000B7BC,"T",0,3);
	SetRegEx(0XB000B7E0,"T",0,3);
	SetRegEx(0XB000B814,"T",0,3);
	SetRegEx(0XB000B838,"T",0,3);
	SetRegEx(0XB000B844,"T",0,3);
	SetRegEx(0XB000B880,"T",0,3);
	SetRegEx(0XB000B898,"T",0,3);
	SetRegEx(0XB000B8AC,"T",0,3);
	SetRegEx(0XB000B8DC,"T",0,3);
	SetRegEx(0XB000B904,"T",0,3);
	SetRegEx(0XB000B90C,"T",0,3);
	SetRegEx(0XB000B92C,"T",0,3);
	SetRegEx(0XB000B930,"T",0,3);
	SetRegEx(0XB000B944,"T",0,3);
	SetRegEx(0XB000B948,"T",0,3);
	SetRegEx(0XB000B95C,"T",0,3);
	SetRegEx(0XB000B960,"T",0,3);
	SetRegEx(0XB000B974,"T",0,3);
	SetRegEx(0XB000B978,"T",0,3);
	SetRegEx(0XB000B98C,"T",0,3);
	SetRegEx(0XB000B990,"T",0,3);
	SetRegEx(0XB000B9A4,"T",0,3);
	SetRegEx(0XB000B9A8,"T",0,3);
	SetRegEx(0XB000B9BC,"T",0,3);
	SetRegEx(0XB000B9C0,"T",0,3);
	SetRegEx(0XB000B9D4,"T",0,3);
	SetRegEx(0XB000B9D8,"T",0,3);
	SetRegEx(0XB000B9EC,"T",0,3);
	SetRegEx(0XB000B9F0,"T",0,3);
	SetRegEx(0XB000BA04,"T",0,3);
	SetRegEx(0XB000BA08,"T",0,3);
	SetRegEx(0XB000BA1C,"T",0,3);
	SetRegEx(0XB000BA20,"T",0,3);
	SetRegEx(0XB000BA34,"T",0,3);
	SetRegEx(0XB000BA38,"T",0,3);
	SetRegEx(0XB000BA4C,"T",0,3);
	SetRegEx(0XB000BA50,"T",0,3);
	SetRegEx(0XB000BA64,"T",0,3);
	SetRegEx(0XB000BA78,"T",0,3);
	SetRegEx(0XB000BA8C,"T",0,3);
	SetRegEx(0XB000BA9C,"T",0,3);
	SetRegEx(0XB000BAC4,"T",0,3);
	SetRegEx(0XB000BAD4,"T",0,3);
	SetRegEx(0XB000BB04,"T",0,3);
	SetRegEx(0XB000BB14,"T",0,3);
	SetRegEx(0XB000BB24,"T",0,3);
	SetRegEx(0XB000BB28,"T",0,3);
	SetRegEx(0XB000BB38,"T",0,3);
	SetRegEx(0XB000BB44,"T",0,3);
	SetRegEx(0XB000BB6C,"T",0,3);
	SetRegEx(0XB000BB94,"T",0,3);
	SetRegEx(0XB000BBD4,"T",0,3);
	SetRegEx(0XB000BBE4,"T",0,3);
	SetRegEx(0XB000BBF8,"T",0,3);
	SetRegEx(0XB000BC0C,"T",0,3);
	SetRegEx(0XB000BC28,"T",0,3);
	SetRegEx(0XB000BC58,"T",0,3);
	SetRegEx(0XB000BC9C,"T",0,3);
	SetRegEx(0XB000BCA0,"T",0,3);
	SetRegEx(0XB000BCB0,"T",0,3);
	SetRegEx(0XB000BCB4,"T",0,3);
	SetRegEx(0XB000BCD0,"T",0,3);
	SetRegEx(0XB000BCD4,"T",0,3);
	SetRegEx(0XB000BCE4,"T",0,3);
	SetRegEx(0XB000BCE8,"T",0,3);
	SetRegEx(0XB000BCF8,"T",0,3);
	SetRegEx(0XB000BCFC,"T",0,3);
	SetRegEx(0XB000BD0C,"T",0,3);
	SetRegEx(0XB000BD10,"T",0,3);
	SetRegEx(0XB000BD24,"T",0,3);
	SetRegEx(0XB000BD4C,"T",0,3);
	SetRegEx(0XB000BD5C,"T",0,3);
	SetRegEx(0XB000BD88,"T",0,3);
	SetRegEx(0XB000BD94,"T",0,3);
	SetRegEx(0XB000BDA0,"T",0,3);
	SetRegEx(0XB000BDB0,"T",0,3);
	SetRegEx(0XB000BDD8,"T",0,3);
	SetRegEx(0XB000BDE0,"T",0,3);
	SetRegEx(0XB000BDE4,"T",0,3);
	SetRegEx(0XB000BDE8,"T",0,3);
	SetRegEx(0XB000BE04,"T",0,3);
	SetRegEx(0XB000BE30,"T",0,3);
	SetRegEx(0XB000BE4C,"T",0,3);
	SetRegEx(0XB000BE7C,"T",0,3);
	SetRegEx(0XB000BEA8,"T",0,3);
	SetRegEx(0XB000BED4,"T",0,3);
	SetRegEx(0XB000BF00,"T",0,3);
	SetRegEx(0XB000BF04,"T",0,3);
	SetRegEx(0XB000BF0C,"T",0,3);
	SetRegEx(0XB000BF50,"T",0,3);
	SetRegEx(0XB000BF64,"T",0,3);
	SetRegEx(0XB000C008,"T",0,3);
	SetRegEx(0XB000C02C,"T",0,3);
	SetRegEx(0XB000C068,"T",0,3);
	SetRegEx(0XB000C094,"T",0,3);
	SetRegEx(0XB000C0A0,"T",0,3);
	SetRegEx(0XB000C0A8,"T",0,3);
	SetRegEx(0XB000C0B0,"T",0,3);
	SetRegEx(0XB000C0B8,"T",0,3);
	SetRegEx(0XB000C0C4,"T",0,3);
	SetRegEx(0XB000C0D4,"T",0,3);
	SetRegEx(0XB000C100,"T",0,3);
	SetRegEx(0XB000C108,"T",0,3);
	SetRegEx(0XB000C114,"T",0,3);
	SetRegEx(0XB000C178,"T",0,3);
	SetRegEx(0XB000C198,"T",0,3);
	SetRegEx(0XB000C1BC,"T",0,3);
	SetRegEx(0XB000C1EC,"T",0,3);
	SetRegEx(0XB000C210,"T",0,3);
	SetRegEx(0XB000C240,"T",0,3);
	SetRegEx(0XB000C268,"T",0,3);
	SetRegEx(0XB000C28C,"T",0,3);
	SetRegEx(0XB000C2E0,"T",0,3);
	SetRegEx(0XB000C2E8,"T",0,3);
	SetRegEx(0XB000C310,"T",0,3);
	SetRegEx(0XB000C334,"T",0,3);
	SetRegEx(0XB000C360,"T",0,3);
	SetRegEx(0XB000C380,"T",0,3);
	SetRegEx(0XB000C3B4,"T",0,3);
	SetRegEx(0XB000C400,"T",0,3);
	SetRegEx(0XB000C42C,"T",0,3);
	SetRegEx(0XB000C44C,"T",0,3);
	SetRegEx(0XB000C478,"T",0,3);
	SetRegEx(0XB000C494,"T",0,3);
	SetRegEx(0XB000C4A8,"T",0,3);
	SetRegEx(0XB000C4AC,"T",0,3);
	SetRegEx(0XB000C4B4,"T",0,3);
	SetRegEx(0XB000C4D0,"T",0,3);
	SetRegEx(0XB000C4DC,"T",0,3);
	SetRegEx(0XB000C4F8,"T",0,3);
	SetRegEx(0XB000C520,"T",0,3);
	SetRegEx(0XB000C528,"T",0,3);
	SetRegEx(0XB000C53C,"T",0,3);
	SetRegEx(0XB000C558,"T",0,3);
	SetRegEx(0XB000C5AC,"T",0,3);
	SetRegEx(0XB000C5E0,"T",0,3);
	SetRegEx(0XB000C614,"T",0,3);
	SetRegEx(0XB000C620,"T",0,3);
	SetRegEx(0XB000C634,"T",0,3);
	SetRegEx(0XB000C66C,"T",0,3);
	SetRegEx(0XB000C680,"T",0,3);
	SetRegEx(0XB000C6B4,"T",0,3);
	SetRegEx(0XB000C6F8,"T",0,3);
	SetRegEx(0XB000C72C,"T",0,3);
	SetRegEx(0XB000C754,"T",0,3);
	SetRegEx(0XB000C75C,"T",0,3);
	SetRegEx(0XB000C778,"T",0,3);
	SetRegEx(0XB000C7C8,"T",0,3);
	SetRegEx(0XB000C7D0,"T",0,3);
	SetRegEx(0XB000C7E8,"T",0,3);
	SetRegEx(0XB000C7F4,"T",0,3);
	SetRegEx(0XB000C814,"T",0,3);
	SetRegEx(0XB000C820,"T",0,3);
	SetRegEx(0XB000C834,"T",0,3);
	SetRegEx(0XB000C848,"T",0,3);
	SetRegEx(0XB000C860,"T",0,3);
	SetRegEx(0XB000C868,"T",0,3);
	SetRegEx(0XB000C88C,"T",0,3);
	SetRegEx(0XB000C8C0,"T",0,3);
	SetRegEx(0XB000C8DC,"T",0,3);
	SetRegEx(0XB000C920,"T",0,3);
	SetRegEx(0XB000C950,"T",0,3);
	SetRegEx(0XB000C9C0,"T",0,3);
	SetRegEx(0XB000C9CC,"T",0,3);
	SetRegEx(0XB000C9D0,"T",0,3);
	SetRegEx(0XB000C9F4,"T",0,3);
	SetRegEx(0XB000CA5C,"T",0,3);
	SetRegEx(0XB000CA60,"T",0,3);
	SetRegEx(0XB000CA68,"T",0,3);
	SetRegEx(0XB000CAB4,"T",0,3);
	SetRegEx(0XB000CAC0,"T",0,3);
	SetRegEx(0XB000CAC4,"T",0,3);
	SetRegEx(0XB000CAE8,"T",0,3);
	SetRegEx(0XB000CB00,"T",0,3);
	SetRegEx(0XB000CB24,"T",0,3);
	SetRegEx(0XB000CB68,"T",0,3);
	SetRegEx(0XB000CB74,"T",0,3);
	SetRegEx(0XB000CB88,"T",0,3);
	SetRegEx(0XB000CC18,"T",0,3);
	SetRegEx(0XB000CC44,"T",0,3);
	SetRegEx(0XB000CC50,"T",0,3);
	SetRegEx(0XB000CCB0,"T",0,3);
	SetRegEx(0XB000CCB4,"T",0,3);
	SetRegEx(0XB000CCBC,"T",0,3);
	SetRegEx(0XB000CD10,"T",0,3);
	SetRegEx(0XB000CD28,"T",0,3);
	SetRegEx(0XB000CD34,"T",0,3);
	SetRegEx(0XB000CD38,"T",0,3);
	SetRegEx(0XB000CDC4,"T",0,3);
	SetRegEx(0XB000CDE4,"T",0,3);
	SetRegEx(0XB000CE0C,"T",0,3);
	SetRegEx(0XB000CE18,"T",0,3);
	SetRegEx(0XB000CE2C,"T",0,3);
	SetRegEx(0XB000CE40,"T",0,3);
	SetRegEx(0XB000CE54,"T",0,3);
	SetRegEx(0XB000CE5C,"T",0,3);
	SetRegEx(0XB000CE78,"T",0,3);
	SetRegEx(0XB000CEB8,"T",0,3);
	SetRegEx(0XB000CEC0,"T",0,3);
	SetRegEx(0XB000CED0,"T",0,3);
	SetRegEx(0XB000CEF4,"T",0,3);
	SetRegEx(0XB000CF18,"T",0,3);
	SetRegEx(0XB000CF28,"T",0,3);
	SetRegEx(0XB000CF30,"T",0,3);
	SetRegEx(0XB000CF44,"T",0,3);
	SetRegEx(0XB000CF68,"T",0,3);
	SetRegEx(0XB000CF84,"T",0,3);
	SetRegEx(0XB000CFB0,"T",0,3);
	SetRegEx(0XB000CFD4,"T",0,3);
	SetRegEx(0XB000CFFC,"T",0,3);
	SetRegEx(0XB000D00C,"T",0,3);
	SetRegEx(0XB000D01C,"T",0,3);
	SetRegEx(0XB000D024,"T",0,3);
	SetRegEx(0XB000D070,"T",0,3);
	SetRegEx(0XB000D078,"T",0,3);
	SetRegEx(0XB000D0B0,"T",0,3);
	SetRegEx(0XB000D0CC,"T",0,3);
	SetRegEx(0XB000D0DC,"T",0,3);
	SetRegEx(0XB000D0F4,"T",0,3);
	SetRegEx(0XB000D104,"T",0,3);
	SetRegEx(0XB000D108,"T",0,3);
	SetRegEx(0XB000D130,"T",0,3);
	SetRegEx(0XB000D150,"T",0,3);
	SetRegEx(0XB000D164,"T",0,3);
	SetRegEx(0XB000D18C,"T",0,3);
	SetRegEx(0XB000D1B4,"T",0,3);
	SetRegEx(0XB000D1BC,"T",0,3);
	SetRegEx(0XB000D1C4,"T",0,3);
	SetRegEx(0XB000D1CC,"T",0,3);
	SetRegEx(0XB000D204,"T",0,3);
	SetRegEx(0XB000D20C,"T",0,3);
	SetRegEx(0XB000D244,"T",0,3);
	SetRegEx(0XB000D248,"T",0,3);
	SetRegEx(0XB000D250,"T",0,3);
	SetRegEx(0XB000D260,"T",0,3);
	SetRegEx(0XB000D27C,"T",0,3);
	SetRegEx(0XB000D2BC,"T",0,3);
	SetRegEx(0XB000D2EC,"T",0,3);
	SetRegEx(0XB000D2F4,"T",0,3);
	SetRegEx(0XB000D320,"T",0,3);
	SetRegEx(0XB000D344,"T",0,3);
	SetRegEx(0XB000D364,"T",0,3);
	SetRegEx(0XB000D378,"T",0,3);
	SetRegEx(0XB000D380,"T",0,3);
	SetRegEx(0XB000D390,"T",0,3);
	SetRegEx(0XB0040000,"T",0,3);
	SetRegEx(0XB0040000,"DS",0X2,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
        EndTypeUpdating(UTP_STRUCT);
}

// End of file.
