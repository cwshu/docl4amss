
#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, INFFL_LOADIDC|GetCharPrm(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  SetCharPrm(INF_GENFLAGS, ~INFFL_LOADIDC&GetCharPrm(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("ARM");
	SetCharPrm(INF_COMPILER, 6);
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
	LoadTil("armv12");
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0);
	SetSelector(0X2,0);
	;
	SegCreate(0XB0100000,0XB0106F9F,0X1,1,1,2);
	SegRename(0XB0100000,"LOAD");
	SegClass (0XB0100000,"CODE");
	SegDefReg(0xB0100000,"T",0x0);
	SegDefReg(0xB0100000,"DS",0x2);
	SetSegmentType(0XB0100000,2);
	SegCreate(0XB0140000,0XB01401B9,0X2,1,1,2);
	SegRename(0XB0140000,"LOAD");
	SegClass (0XB0140000,"DATA");
	SegDefReg(0xB0140000,"T",0x0);
	SegDefReg(0xB0140000,"DS",0x2);
	SetSegmentType(0XB0140000,3);
	LowVoids(0xB0100000);
	HighVoids(0xB01401B8);
}

static Enums_0(id) {

	id = AddEnum(-1,"tcr4enum",0x1100000);
	AddConstEx(id,"x4TCR_MY_GLOBAL_ID",	0,	-1);
	AddConstEx(id,"x4TCR_USER_DEFINED_HANDLE",	0X4,	-1);
	AddConstEx(id,"x4TCR_COP_FLAGS",	0X8,	-1);
	AddConstEx(id,"x4TCR_PREEMPT_FLAGS",	0X8,	-1);
	AddConstEx(id,"x4TCR_ACCEPTOR",	0XC,	-1);
	AddConstEx(id,"x4TCR_NOTIFY_MASK",	0X10,	-1);
	AddConstEx(id,"x4TCR_NOTIFY_BITS",	0X14,	-1);
	AddConstEx(id,"x4TCR_PROCESSOR_NO",	0X18,	-1);
	AddConstEx(id,"x4TCR_ERROR_CODE",	0X1C,	-1);
	AddConstEx(id,"x4TCR_VIRTUAL_ACTUAL_SENDER",	0X20,	-1);
	AddConstEx(id,"x4TCR_PREEMPT_CALLBACK_IP",	0X24,	-1);
	AddConstEx(id,"x4TCR_PREEMPTED_IP",	0X28,	-1);
	id = AddEnum(-1,"$2D35F4AC89C217003598D3D05A903541",0x1100000);
	AddConstEx(id,"IGUANA_GETENV_CLIST_SLOT",	0X1,	-1);
	AddConstEx(id,"IGUANA_GETENV_CLIST_USED",	0X2,	-1);
	AddConstEx(id,"IGUANA_GETENV_CLIST_BASE",	0X3,	-1);
	AddConstEx(id,"IGUANA_GETENV_STACK",	0X4,	-1);
	AddConstEx(id,"IGUANA_GETENV_HEAP_BASE",	0X5,	-1);
	AddConstEx(id,"IGUANA_GETENV_HEAP_SIZE",	0X6,	-1);
	AddConstEx(id,"IGUANA_GETENV_CALLBACK",	0X7,	-1);
	AddConstEx(id,"IGUANA_GETENV_DEFAULT_POOL",	0X8,	-1);
	AddConstEx(id,"IGUANA_GETENV_DEFAULT_VIRT_POOL",	0X9,	-1);
	AddConstEx(id,"IGUANA_GETENV_TCM_POOL",	0XA,	-1);
	id = AddEnum(-1,"tlsenum",0x1100000);
	AddConstEx(id,"__L4_TCR_MY_GLOBAL_ID",	0,	-1);
	AddConstEx(id,"__L4_TCR_USER_DEFINED_HANDLE",	0X1,	-1);
	AddConstEx(id,"__L4_TCR_COP_FLAGS",	0X2,	-1);
	AddConstEx(id,"__L4_TCR_PREEMPT_FLAGS",	0X2,	-1);
	AddConstEx(id,"__L4_TCR_ACCEPTOR",	0X3,	-1);
	AddConstEx(id,"__L4_TCR_NOTIFY_MASK",	0X4,	-1);
	AddConstEx(id,"__L4_TCR_NOTIFY_BITS",	0X5,	-1);
	AddConstEx(id,"__L4_TCR_PROCESSOR_NO",	0X6,	-1);
	AddConstEx(id,"__L4_TCR_ERROR_CODE",	0X7,	-1);
	AddConstEx(id,"__L4_TCR_VIRTUAL_ACTUAL_SENDER",	0X8,	-1);
	AddConstEx(id,"__L4_TCR_PREEMPT_CALLBACK_IP",	0X9,	-1);
	AddConstEx(id,"__L4_TCR_PREEMPTED_IP",	0XA,	-1);
	AddConstEx(id,"__L4_TCR_KERNEL_RESERVED0",	0XB,	-1);
	AddConstEx(id,"__L4_TCR_KERNEL_RESERVED1",	0XC,	-1);
	AddConstEx(id,"__L4_TCR_KERNEL_RESERVED2",	0XD,	-1);
	AddConstEx(id,"__L4_TCR_KERNEL_RESERVED3",	0XE,	-1);
	AddConstEx(id,"__L4_TCR_IDL4_RESTORE_COUNT",	0XF,	-1);
	AddConstEx(id,"__L4_TCR_KERNEL_RESERVED4",	0XF,	-1);
	AddConstEx(id,"__L4_TCR_MR_OFFSET",	0X10,	-1);
	AddConstEx(id,"__L4_TCR_PLATFORM_OFFSET",	0X30,	-1);
	id = AddEnum(-1,"$92E3D764AA66F6EDF8647F708AE2EEC8",0x1100000);
	SetEnumBf(id,1);
	AddConstEx(id,"KDB_FEATURE_CLI",	0X1,	0x1);
	AddConstEx(id,"KDB_FEATURE_CONSOLE",	0X2,	0x2);
	AddConstEx(id,"KDB_FEATURE_THREADNAMES",	0X100,	0x100);
	id = AddEnum(-1,"syscalls",0x1100000);
	AddConstEx(id,"SYSCALL_ipc",	0,	-1);
	AddConstEx(id,"SYSCALL_thread_switch",	0X4,	-1);
	AddConstEx(id,"SYSCALL_thread_control",	0X8,	-1);
	AddConstEx(id,"SYSCALL_exchange_registers",	0XC,	-1);
	AddConstEx(id,"SYSCALL_schedule",	0X10,	-1);
	AddConstEx(id,"SYSCALL_map_control",	0X14,	-1);
	AddConstEx(id,"SYSCALL_space_control",	0X18,	-1);
	AddConstEx(id,"SYSCALL_processor_control",	0X1C,	-1);
	AddConstEx(id,"SYSCALL_cache_control",	0X20,	-1);
	AddConstEx(id,"SYSCALL_ipc_control",	0X24,	-1);
	AddConstEx(id,"SYSCALL_lipc",	0X28,	-1);
	AddConstEx(id,"SWINUM_ipc",	0X1400,	-1);
	AddConstEx(id,"SWINUM_thread_switch",	0X1404,	-1);
	AddConstEx(id,"SWINUM_thread_control",	0X1408,	-1);
	AddConstEx(id,"SWINUM_exchange_registers",	0X140C,	-1);
	AddConstEx(id,"SWINUM_schedule",	0X1410,	-1);
	AddConstEx(id,"SWINUM_map_control",	0X1414,	-1);
	AddConstEx(id,"SWINUM_space_control",	0X1418,	-1);
	AddConstEx(id,"SWINUM_processor_control",	0X141C,	-1);
	AddConstEx(id,"SWINUM_cache_control",	0X1420,	-1);
	AddConstEx(id,"SWINUM_ipc_control",	0X1424,	-1);
	AddConstEx(id,"SWINUM_lipc",	0X1428,	-1);
	AddConstEx(id,"SYSNUM_ipc",	0XFFFFFF00,	-1);
	AddConstEx(id,"SYSNUM_thread_switch",	0XFFFFFF04,	-1);
	AddConstEx(id,"SYSNUM_thread_control",	0XFFFFFF08,	-1);
	AddConstEx(id,"SYSNUM_exchange_registers",	0XFFFFFF0C,	-1);
	AddConstEx(id,"SYSNUM_schedule",	0XFFFFFF10,	-1);
	AddConstEx(id,"SYSNUM_map_control",	0XFFFFFF14,	-1);
	AddConstEx(id,"SYSNUM_space_control",	0XFFFFFF18,	-1);
	AddConstEx(id,"SYSNUM_processor_control",	0XFFFFFF1C,	-1);
	AddConstEx(id,"SYSNUM_cache_control",	0XFFFFFF20,	-1);
	AddConstEx(id,"SYSNUM_ipc_control",	0XFFFFFF24,	-1);
	AddConstEx(id,"SYSNUM_lipc",	0XFFFFFF28,	-1);
	id = AddEnum(-1,"$0D789D9EC7801EDB66FF7DD98E93DD77",0x1100000);
	AddConstEx(id,"IGUANA_GETENV_NAMING_SERVER",	0X100,	-1);
	AddConstEx(id,"IGUANA_GETENV_TRACE_SERVER",	0X101,	-1);
	AddConstEx(id,"IGUANA_GETENV_TIMER_SERVER",	0X103,	-1);
	id = AddEnum(-1,"tcrenum3",0x1100000);
	SetEnumBf(id,1);
	AddConstEx(id,"__L4_TCR_PLAT_TLS",	0X30,	0x30);
	AddConstEx(id,"x4TCR_PLAT_TLS",	0XC0,	0xC0);
	id = AddEnum(-1,"$4C9FBA176E1F8D80F8E673A01B13DE92",0x1100000);
	SetEnumBf(id,1);
	AddConstEx(id,"INVALID_ADDR",	0XFFFFFFFF,	-1);
	id = AddEnum(-1,"trapenum",0x1100000);
	AddConstEx(id,"USER_UTCB_REF",	0XFF000FF0,	-1);
	AddConstEx(id,"L4_TRAP_KPUTC",	0XFFFFFFA0,	-1);
	AddConstEx(id,"L4_TRAP_KGETC",	0XFFFFFFA4,	-1);
	AddConstEx(id,"L4_TRAP_KGETC_NB",	0XFFFFFFA8,	-1);
	AddConstEx(id,"L4_TRAP_KDEBUG",	0XFFFFFFAC,	-1);
	AddConstEx(id,"L4_TRAP_GETUTCB",	0XFFFFFFB0,	-1);
	AddConstEx(id,"L4_TRAP_KIP",	0XFFFFFFB4,	-1);
	AddConstEx(id,"L4_TRAP_KSET_THRD_NAME",	0XFFFFFFB8,	-1);
	AddConstEx(id,"L4_TRAP_GETCOUNTER",	0XFFFFFFBC,	-1);
	AddConstEx(id,"L4_TRAP_GETNUMTPS",	0XFFFFFFC0,	-1);
	AddConstEx(id,"L4_TRAP_GETTPNAME",	0XFFFFFFC4,	-1);
	AddConstEx(id,"L4_TRAP_TCCTRL",	0XFFFFFFC8,	-1);
	AddConstEx(id,"L4_TRAP_PMU_RESET",	0XFFFFFFCC,	-1);
	AddConstEx(id,"L4_TRAP_PMU_STOP",	0XFFFFFFD0,	-1);
	AddConstEx(id,"L4_TRAP_PMU_READ",	0XFFFFFFD4,	-1);
	AddConstEx(id,"L4_TRAP_PMU_CONFIG",	0XFFFFFFD8,	-1);
	AddConstEx(id,"L4_TRAP_GETTICK",	0XFFFFFFE0,	-1);
	id = AddEnum(-1,"tcr4enum2",0x1100000);
	AddConstEx(id,"x4TCR_IDL4_RESTORE_COUNT",	0X3C,	-1);
	AddConstEx(id,"x4TCR_MR_OFFSET",	0X40,	-1);
	AddConstEx(id,"x4TCR_PLATFORM_OFFSET",	0XC0,	-1);
	return id;
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        BeginTypeUpdating(UTP_ENUM);
	id = Enums_0(id);
        EndTypeUpdating(UTP_ENUM);
}

static Structures_0(id) {
        auto mid;

	id = AddStrucEx(-1,"clist_info",0);
	id = AddStrucEx(-1,"session2",0);
	id = AddStrucEx(-1,"clist_node",0);
	id = AddStrucEx(-1,"obj_env_t",0);
	id = AddStrucEx(-1,"object_t",0);
	id = AddStrucEx(-1,"L4_KernelInterfacePage_struct::$0F5804C7A5185F2276B339135DDFF993",0);
	id = AddStrucEx(-1,"L4_KernelRootServer_t",0);
	id = AddStrucEx(-1,"L4_KernelConfigurationPage_t",0);
	id = AddStrucEx(-1,"cap_slot",0);
	id = AddStrucEx(-1,"cb_get_handle",0);
	id = AddStrucEx(-1,"cb",0);
	id = AddStrucEx(-1,"mutex",0);
	id = AddStrucEx(-1,"L4_KernelInterfacePage_struct",0);
	id = AddStrucEx(-1,"bin_tree_node",0);
	id = AddStrucEx(-1,"asynch",0);
	id = AddStrucEx(-1,"tlsplatform",0);
	id = AddStrucEx(-1,"double_list",0);
	id = AddStrucEx(-1,"ll",0);
	id = AddStrucEx(-1,"naming_session",0);
	id = AddStrucEx(-1,"clist",0);
	id = AddStrucEx(-1,"__file",0);
	id = AddStrucEx(-1,"header",0);
	id = AddStrucEx(-1,"notify_node",0);
	id = AddStrucEx(-1,"notify",0);
	
	id = GetStrucIdByName("session2");
	mid = AddStrucMember(id,"ref",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"clist",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"cap_pos",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"cap_size",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"own_clist",	0X10,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("clist_info");
	mid = AddStrucMember(id,"clist",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"type",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"length",	0X8,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("clist_node");
	mid = AddStrucMember(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"data",	0X8,	0x60000400,	GetStrucIdByName("clist_info"),	12);
	
	id = GetStrucIdByName("obj_env_t");
	mid = AddStrucMember(id,"key",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"value",	0X4,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("L4_KernelRootServer_t");
	mid = AddStrucMember(id,"_sp",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ip",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"low",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"high",	0XC,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("L4_KernelConfigurationPage_t");
	mid = AddStrucMember(id,"magic",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__padding04",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__padding08",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__padding12",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"Kdebug",	0X10,	0x60000400,	GetStrucIdByName("L4_KernelRootServer_t"),	16);
	mid = AddStrucMember(id,"reserved0",	0X20,	0x60000400,	GetStrucIdByName("L4_KernelRootServer_t"),	16);
	mid = AddStrucMember(id,"reserved1",	0X30,	0x60000400,	GetStrucIdByName("L4_KernelRootServer_t"),	16);
	mid = AddStrucMember(id,"root_server",	0X40,	0x60000400,	GetStrucIdByName("L4_KernelRootServer_t"),	16);
	mid = AddStrucMember(id,"MaxMemoryDescs",	0X50,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"MemoryInfo",	0X54,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"Kdebug_config",	0X58,	0x20000400,	-1,	8);
	mid = AddStrucMember(id,"__padding60",	0X60,	0x20000400,	-1,	64);
	mid = AddStrucMember(id,"__paddingA0",	0XA0,	0x20000400,	-1,	24);
	mid = AddStrucMember(id,"BootInfo",	0XB8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__paddingBC",	0XBC,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("cap_slot");
	mid = AddStrucMember(id,"list",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"pos",	0X4,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("cb_get_handle");
	mid = AddStrucMember(id,"cb",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"tail",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("cb");
	mid = AddStrucMember(id,"head",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"tail",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"end",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"start",	0XC,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"_padding",	0XD,	0x000400,	-1,	3);
	
	id = GetStrucIdByName("L4_KernelInterfacePage_struct::$0F5804C7A5185F2276B339135DDFF993");
	mid = AddStrucMember(id,"low",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"high",	0X4,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("L4_KernelInterfacePage_struct");
	mid = AddStrucMember(id,"magic",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ApiVersion",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ApiFlags",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"KernelVerPtr",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__padding10",	0X10,	0x20000400,	-1,	64);
	mid = AddStrucMember(id,"MaxMemoryDescs",	0X50,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"MemoryInfo",	0X54,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__padding58",	0X58,	0x20000400,	-1,	8);
	mid = AddStrucMember(id,"MainMem",	0X60,	0x60000400,	GetStrucIdByName("L4_KernelInterfacePage_struct::$0F5804C7A5185F2276B339135DDFF993"),	8);
	mid = AddStrucMember(id,"ReservedMem",	0X68,	0x60000400,	GetStrucIdByName("L4_KernelInterfacePage_struct::$0F5804C7A5185F2276B339135DDFF993"),	16);
	mid = AddStrucMember(id,"DedicatedMem",	0X78,	0x60000400,	GetStrucIdByName("L4_KernelInterfacePage_struct::$0F5804C7A5185F2276B339135DDFF993"),	40);
	mid = AddStrucMember(id,"SpaceInfo",	0XA0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"VirtualRegInfo",	0XA4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"UtcbAreaInfo",	0XA8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"KipAreaInfo",	0XAC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"BootInfoVirt",	0XB0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"BootInfoEnd",	0XB4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"BootInfo",	0XB8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ProcDescPtr",	0XBC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ClockInfo",	0XC0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ThreadInfo",	0XC4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"PageInfo",	0XC8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ProcessorInfo",	0XCC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"MapControl",	0XD0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"SpaceControl",	0XD4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ThreadControl",	0XD8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ProcessorControl",	0XDC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"CacheControl",	0XE0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"Ipc",	0XE4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"Lipc",	0XE8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ExchangeRegisters",	0XEC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__paddingF0",	0XF0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ThreadSwitch",	0XF4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"Schedule",	0XF8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"IpcControl",	0XFC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__padding100",	0X100,	0x20000400,	-1,	16);
	mid = AddStrucMember(id,"ArchSyscall0",	0X110,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ArchSyscall1",	0X114,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ArchSyscall2",	0X118,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"ArchSyscall3",	0X11C,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("bin_tree_node");
	mid = AddStrucMember(id,"left",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"right",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"key",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"data",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("asynch");
	mid = AddStrucMember(id,"asynch_bit",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"object_type",	0X4,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("tlsplatform");
	mid = AddStrucMember(id,"skip0",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"skip1",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"skip2",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__synch_bits",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"asynch_mask",	0X10,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"asynch_objects",	0X14,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("double_list");
	mid = AddStrucMember(id,"head",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"tail",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("ll");
	mid = AddStrucMember(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"data",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("object_t");
	mid = AddStrucMember(id,"obj",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"server",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"session",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"call_cb",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"return_cb",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("naming_session");
	mid = AddStrucMember(id,"__naming_object",	0,	0x60000400,	GetStrucIdByName("object_t"),	20);
	mid = AddStrucMember(id,"naming_sync_mask",	0X14,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"naming_type",	0X18,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"__naming_session",	0X1C,	0x60000400,	-1/*!!*/,	0);
	
	id = GetStrucIdByName("clist");
	mid = AddStrucMember(id,"slot",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"size",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"cap_free",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"clist_memsect",	0XC,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"cap_list",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("mutex");
	mid = AddStrucMember(id,"holder",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"needed",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"count",	0X8,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("__file");
	mid = AddStrucMember(id,"handle",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"read_fn",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"write_fn",	0X8,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"close_fn",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"eof_fn",	0X10,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"buffering_mode",	0X14,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"buffer",	0X18,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"unget_pos",	0X1C,	0x000400,	-1,	1);
	mid = AddStrucMember(id,"current_pos",	0X20,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"mutex",	0X24,	0x60000400,	GetStrucIdByName("mutex"),	12);
	mid = AddStrucMember(id,"eof",	0X30,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"error",	0X34,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"unget_stack",	0X38,	0x000400,	-1,	10);
	mid = AddStrucMember(id,"_padding",	0X42,	0x000400,	-1,	2);
	
	id = GetStrucIdByName("header");
	mid = AddStrucMember(id,"ptr",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"size",	0X4,	0x20000400,	-1,	4);
	
	id = GetStrucIdByName("notify");
	mid = AddStrucMember(id,"thread",	0,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"mask",	0X4,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"flags",	0X8,	0x20000400,	-1,	4);
	mid = AddStrucMember(id,"naming_info",	0XC,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	
	id = GetStrucIdByName("notify_node");
	mid = AddStrucMember(id,"next",	0,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"prev",	0X4,	0x25500400,	0XFFFFFFFF,	4,	0XFFFFFFFF,	0,	0x000002);
	mid = AddStrucMember(id,"data",	0X8,	0x60000400,	GetStrucIdByName("notify"),	16);
	return id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        BeginTypeUpdating(UTP_STRUCT);	id = Structures_0(id);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0XB0100000,	0,	"; File Name   : C:\\Documents and Settings\\newsham\\Desktop\\adp1\\ig_naming\\ig_naming2");
	ExtLinA		(0XB0100000,	1,	"; Format      : ELF (Executable)");
	ExtLinA		(0XB0100000,	2,	"; ");
	ExtLinA		(0XB0100000,	3,	"; Options     : EF_ARM_SOFT_FLOAT");
	ExtLinA		(0XB0100000,	4,	"; ");
	ExtLinA		(0XB0100000,	5,	"");
	ExtLinA		(0XB0100000,	6,	"A note and warning: This was analyzed using an OLD version of IDAPro");
	ExtLinA		(0XB0100000,	7,	"and as a result some of the auto-analysis is wrong.  For example sometimes");
	ExtLinA		(0XB0100000,	8,	"a structure is passed in several registers, but IDAPro is asuming one arg");
	ExtLinA		(0XB0100000,	9,	"per register r0..r3.");
	ExtLinA		(0XB0100000,	10,	"");
	ExtLinA		(0XB0100000,	11,	"");
	ExtLinA		(0XB0100000,	12,	"libs/c/arch/arm/crt/crt0.spp");
	MakeCode	(0XB0100000);
	MakeName	(0XB0100000,	"_start");
	MakeRptCmt	(0XB0100008,	"env");
	MakeCode	(x=0XB0100008);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB010000C,	"argc");
	MakeCode	(x=0XB010000C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0100010,	"argv");
	MakeCode	(x=0XB0100010);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100014,	"__bss_start__");
	MakeCode	(x=0XB0100014);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100018,	"__bss_end__");
	MakeCode	(x=0XB0100018);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100038);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010003C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB010004C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0100050);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0100054);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0100058);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB010005C,	0,	"");
	ExtLinA		(0XB010005C,	1,	"");
	ExtLinA		(0XB010005C,	2,	"iguana/naming/src/naming_server.c");
	MakeCode	(x=0XB010005C);
	OpStkvar	(x,	1);
	MakeName	(0XB010005C,	"main");
	MakeCode	(x=0XB0100060);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100064,	"cb");
	MakeCode	(x=0XB010006C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100078);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100084,	"expression");
	MakeCode	(x=0XB0100084);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100088,	"file");
	MakeCode	(x=0XB0100088);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010008C,	"function");
	MakeCode	(x=0XB010008C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100090,	"line");
	MakeCode	(x=0XB010009C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01000A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01000A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01000A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01000AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01000AC,	"expression");
	MakeDword	(x=0XB01000B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01000B0,	"file");
	MakeDword	(x=0XB01000B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01000B4,	"function");
	MakeCode	(0XB01000B8);
	MakeName	(0XB01000B8,	"create_name_node");
	MakeComm	(0XB01000C0,	"src");
	MakeComm	(0XB01000C4,	"dst");
	MakeComm	(0XB01000CC,	"s");
	MakeComm	(0XB01000D4,	"sz");
	MakeRptCmt	(0XB01000E0,	"naming_info->name");
	MakeComm	(0XB01000E8,	"src");
	MakeComm	(0XB01000EC,	"dst");
	MakeCode	(x=0XB01000FC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100100,	"key");
	MakeComm	(0XB0100108,	"tree");
	MakeComm	(0XB010010C,	"data");
	MakeComm	(0XB0100120,	"naming_info->notifies");
	MakeCode	(0XB0100138);
	MakeDword	(x=0XB0100144);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0100148);
	MakeName	(0XB0100148,	"notify_list");
	MakeCode	(0XB010016C);
	MakeCode	(0XB01001B0);
	MakeName	(0XB01001B0,	"naming_write_insert_impl");
	MakeCode	(x=0XB01001B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01001C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01001CC,	"key");
	MakeComm	(0XB01001D0,	"tree");
	MakeComm	(0XB01001F0,	"naming_info");
	MakeComm	(0XB01001F4,	"caller");
	MakeComm	(0XB01001F8,	"mask");
	MakeCode	(x=0XB01001FC);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeComm	(0XB0100200,	"flags");
	MakeComm	(0XB0100214,	"name");
	MakeCode	(0XB010021C);
	MakeCode	(x=0XB0100224);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeDword	(x=0XB0100230);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0100234);
	MakeName	(0XB0100234,	"naming_write_modify_impl");
	MakeCode	(x=0XB0100238);
	OpStkvar	(x,	1);
	MakeComm	(0XB010023C,	"key");
	MakeCode	(x=0XB0100240);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100250,	"tree");
	MakeComm	(0XB0100260,	"caller");
	MakeComm	(0XB0100264,	"mask");
	MakeComm	(0XB010026C,	"flags");
	MakeDword	(x=0XB0100288);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010028C);
	MakeName	(0XB010028C,	"naming_write_delete_impl");
	MakeCode	(x=0XB0100290);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010029C,	"key");
	MakeComm	(0XB01002A4,	"tree");
	MakeComm	(0XB01002D4,	"caller");
	MakeComm	(0XB01002D8,	"mask");
	MakeComm	(0XB01002E0,	"flags");
	MakeComm	(0XB01002F4,	"tree");
	MakeCode	(0XB01002F4);
	MakeComm	(0XB01002FC,	"mem");
	MakeDword	(x=0XB0100308);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB010030C);
	OpStkvar	(x,	1);
	MakeName	(0XB010030C,	"naming_read_lookup_impl");
	MakeCode	(x=0XB0100310);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0100314,	"key");
	MakeComm	(0XB0100318,	"tree");
	MakeCode	(x=0XB0100330);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0100334);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0100338,	0,	"note: this prototype might not be accurate here");
	MakeCode	(0XB0100338);
	MakeName	(0XB0100338,	"naming_read_notify_impl");
	MakeCode	(x=0XB0100340);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100344);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100350,	"tree");
	MakeComm	(0XB0100354,	"key");
	MakeCode	(x=0XB010035C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100370,	"dl");
	MakeComm	(0XB0100374,	"payload");
	MakeCode	(x=0XB0100384);
	OpStroffEx	(x,	1,	GetStrucIdByName("notify"),	0);
	MakeCode	(x=0XB010038C);
	OpStroffEx	(x,	1,	GetStrucIdByName("notify"),	0);
	MakeCode	(x=0XB0100398);
	OpStroffEx	(x,	1,	GetStrucIdByName("notify"),	0);
	MakeCode	(x=0XB010039C);
	OpStroffEx	(x,	1,	GetStrucIdByName("notify"),	0);
	MakeCode	(x=0XB01003A4);
	OpHex		(x,	1);
	MakeComm	(0XB01003B4,	"to");
	MakeCode	(0XB01003B4);
	MakeComm	(0XB01003B8,	"mask");
	MakeComm	(0XB01003C8,	"name");
	MakeCode	(0XB01003C8);
	MakeComm	(0XB01003E0,	"dl");
	MakeComm	(0XB01003E4,	"payload");
	MakeComm	(0XB0100404,	"tree");
	MakeCode	(0XB0100404);
	MakeComm	(0XB0100408,	"key");
	MakeComm	(0XB0100410,	"mem");
	MakeDword	(x=0XB010041C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0100420);
	MakeName	(0XB0100420,	"naming_notify__cancel_impl");
	MakeComm	(0XB0100428,	"ll");
	MakeCode	(0XB0100448);
	MakeComm	(0XB0100450,	"key");
	MakeCode	(x=0XB0100458);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010045C,	"tree");
	MakeComm	(0XB0100464,	"mem");
	MakeDword	(x=0XB0100470);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0100474);
	MakeName	(0XB0100474,	"check_async");
	MakeCode	(x=0XB0100478);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010047C,	"size");
	MakeComm	(0XB0100480,	"cbg");
	ExtLinB		(0XB01004A0,	0,	"end of naming_server.c");
	ExtLinB		(0XB01004A0,	1,	"");
	ExtLinB		(0XB01004A0,	2,	"");
	MakeDword	(x=0XB01004A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB01004A4,	0,	"");
	ExtLinA		(0XB01004A4,	1,	"");
	ExtLinA		(0XB01004A4,	2,	"build/iguana/include/interfaces/naming_serverloop.c");
	ExtLinA		(0XB01004A4,	3,	"This is code that is autogenerated by magpie from");
	ExtLinA		(0XB01004A4,	4,	"libs/naming/include/interfaces/naming.idl4");
	ExtLinA		(0XB01004A4,	5,	"");
	ExtLinA		(0XB01004A4,	6,	"note: this code differs a bit from the code ");
	ExtLinA		(0XB01004A4,	7,	"generated in okl4 1.4.1.1.");
	ExtLinA		(0XB01004A4,	8,	"");
	MakeCode	(0XB01004A4);
	MakeName	(0XB01004A4,	"handle_naming_write_insert");
	MakeComm	(0XB01004B0,	"name");
	MakeComm	(0XB01004B4,	"mask");
	MakeCode	(x=0XB01004C4);
	OpStkvar	(x,	1);
	MakeComm	(0XB01004C8,	"nameserver");
	MakeComm	(0XB01004E4,	"caller");
	MakeComm	(0XB01004E8,	"data");
	MakeCode	(x=0XB01004EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01004F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01004F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01004F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100500);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100508);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100534);
	MakeName	(0XB0100534,	"naming_write_insert_reply");
	MakeCode	(x=0XB0100550);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100594);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100598);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01005A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01005A4);
	OpHex		(x,	1);
	MakeComm	(0XB01005AC,	"FromSpecifier");
	MakeComm	(0XB01005B0,	"tag");
	MakeComm	(0XB01005B4,	"from");
	MakeCode	(x=0XB01005B8);
	OpStkvar	(x,	1);
	MakeCode	(0XB01005C8);
	MakeName	(0XB01005C8,	"handle_naming_write_modify");
	MakeComm	(0XB01005D4,	"name");
	MakeComm	(0XB01005D8,	"mask");
	MakeCode	(x=0XB01005E8);
	OpStkvar	(x,	1);
	MakeComm	(0XB01005EC,	"nameserver");
	MakeComm	(0XB0100608,	"caller");
	MakeComm	(0XB010060C,	"data");
	MakeCode	(x=0XB0100610);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100614);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100618);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010061C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100624);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010062C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100658);
	MakeName	(0XB0100658,	"naming_write_modify_reply");
	MakeCode	(x=0XB0100674);
	OpHex		(x,	1);
	MakeCode	(x=0XB01006B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01006BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01006C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01006C8);
	OpHex		(x,	1);
	MakeComm	(0XB01006D0,	"FromSpecifier");
	MakeComm	(0XB01006D4,	"tag");
	MakeComm	(0XB01006D8,	"from");
	MakeCode	(x=0XB01006DC);
	OpStkvar	(x,	1);
	MakeCode	(0XB01006EC);
	MakeName	(0XB01006EC,	"handle_naming_write_delete");
	MakeComm	(0XB01006F4,	"name");
	MakeComm	(0XB01006F8,	"env");
	MakeCode	(x=0XB010070C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100710,	"nameserver");
	MakeComm	(0XB0100728,	"caller");
	MakeComm	(0XB010072C,	"mask");
	MakeCode	(x=0XB010072C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100730);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100734);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010073C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100744);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100770);
	MakeName	(0XB0100770,	"naming_write_delete_reply");
	MakeCode	(x=0XB010078C);
	OpHex		(x,	1);
	MakeCode	(x=0XB01007D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01007D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01007DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01007E0);
	OpHex		(x,	1);
	MakeComm	(0XB01007E8,	"FromSpecifier");
	MakeComm	(0XB01007EC,	"tag");
	MakeComm	(0XB01007F0,	"from");
	MakeCode	(x=0XB01007F4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100804);
	MakeName	(0XB0100804,	"handle_naming_read_lookup");
	MakeComm	(0XB010080C,	"name");
	MakeCode	(x=0XB0100824);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100828,	"nameserver");
	MakeComm	(0XB0100840,	"env");
	MakeComm	(0XB0100844,	"caller");
	MakeCode	(x=0XB010084C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100878);
	MakeName	(0XB0100878,	"naming_read_lookup_reply");
	MakeCode	(x=0XB0100890);
	OpHex		(x,	1);
	MakeCode	(x=0XB01008D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01008D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01008DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01008E0);
	OpHex		(x,	1);
	MakeComm	(0XB01008E8,	"FromSpecifier");
	MakeComm	(0XB01008EC,	"tag");
	MakeComm	(0XB01008F0,	"from");
	MakeCode	(x=0XB01008F4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100904);
	MakeName	(0XB0100904,	"handle_naming_read_notify");
	MakeComm	(0XB0100910,	"thread");
	MakeCode	(x=0XB0100914);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100928);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100930,	"nameserver");
	MakeComm	(0XB0100950,	"name");
	MakeCode	(x=0XB0100954);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100958,	"caller");
	MakeComm	(0XB010095C,	"flags");
	MakeCode	(x=0XB0100960);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100964);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100968);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010096C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100970);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100974);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010097C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100984);
	OpStkvar	(x,	1);
	MakeCode	(0XB01009B0);
	MakeName	(0XB01009B0,	"naming_read_notify_reply");
	MakeCode	(x=0XB01009CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100A10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100A14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100A1C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100A20);
	OpHex		(x,	1);
	MakeComm	(0XB0100A28,	"FromSpecifier");
	MakeComm	(0XB0100A2C,	"tag");
	MakeComm	(0XB0100A30,	"from");
	MakeCode	(x=0XB0100A34);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100A44);
	MakeName	(0XB0100A44,	"handle_naming_notify__cancel");
	MakeComm	(0XB0100A58,	"notify_obj");
	MakeComm	(0XB0100A5C,	"env");
	MakeComm	(0XB0100A60,	"caller");
	MakeCode	(x=0XB0100A64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100A6C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100A94);
	MakeName	(0XB0100A94,	"naming_notify__cancel_reply");
	MakeCode	(x=0XB0100AAC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100AEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100AF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100AF8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100AFC);
	OpHex		(x,	1);
	MakeComm	(0XB0100B04,	"FromSpecifier");
	MakeComm	(0XB0100B08,	"tag");
	MakeComm	(0XB0100B0C,	"from");
	MakeCode	(x=0XB0100B10);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100B20);
	MakeName	(0XB0100B20,	"msg_is_error");
	MakeCode	(x=0XB0100B24);
	OpHex		(x,	1);
	MakeCode	(0XB0100B2C);
	MakeName	(0XB0100B2C,	"get_function_id");
	MakeCode	(x=0XB0100B30);
	OpHex		(x,	1);
	MakeCode	(0XB0100B38);
	MakeName	(0XB0100B38,	"dispatch_naming_write");
	MakeCode	(x=0XB0100B40);
	OpHex		(x,	1);
	MakeComm	(0XB0100B6C,	"env");
	MakeCode	(0XB0100B70);
	MakeComm	(0XB0100B74,	"name");
	MakeCode	(x=0XB0100B80);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100B84,	"nameserver");
	MakeComm	(0XB0100BA0,	"caller");
	MakeComm	(0XB0100BA4,	"data");
	MakeCode	(x=0XB0100BA8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100BAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100BB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100BB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100BBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100BC4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100BDC);
	MakeComm	(0XB0100BE0,	"name");
	MakeCode	(x=0XB0100BEC);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100BF0,	"nameserver");
	MakeComm	(0XB0100C0C,	"caller");
	MakeComm	(0XB0100C10,	"data");
	MakeCode	(x=0XB0100C14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C30);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100C4C);
	MakeComm	(0XB0100C50,	"name");
	MakeCode	(x=0XB0100C5C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100C60,	"nameserver");
	MakeComm	(0XB0100C78,	"caller");
	MakeComm	(0XB0100C7C,	"mask");
	MakeCode	(x=0XB0100C7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100C98);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100CA0);
	MakeName	(0XB0100CA0,	"dispatch_naming_read");
	MakeCode	(x=0XB0100CAC);
	OpHex		(x,	1);
	MakeComm	(0XB0100CCC,	"thread");
	MakeCode	(0XB0100CD0);
	MakeComm	(0XB0100CD4,	"name");
	MakeCode	(x=0XB0100CDC);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100CE4,	"nameserver");
	MakeComm	(0XB0100CF8,	"env");
	MakeCode	(x=0XB0100CF8);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100CFC,	"caller");
	MakeCode	(x=0XB0100D04);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100D2C);
	MakeCode	(x=0XB0100D34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D44);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100D68,	"name");
	MakeCode	(x=0XB0100D6C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100D70,	"caller");
	MakeComm	(0XB0100D74,	"flags");
	MakeCode	(x=0XB0100D78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D84);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100D94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100DA0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100DB8);
	MakeName	(0XB0100DB8,	"dispatch_naming_notify");
	MakeCode	(x=0XB0100DC4);
	OpHex		(x,	1);
	MakeComm	(0XB0100DE4,	"caller");
	MakeCode	(0XB0100DE4);
	MakeComm	(0XB0100DE8,	"notify_obj");
	MakeCode	(x=0XB0100DEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100DF4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0100E14);
	MakeName	(0XB0100E14,	"server_loop");
	MakeCode	(x=0XB0100E28);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100E4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100E58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100E5C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0100E64,	"tag.flags &= 7");
	MakeCode	(x=0XB0100E64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100E70);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100E74);
	OpHex		(x,	1);
	MakeComm	(0XB0100E7C,	"tag");
	MakeComm	(0XB0100E80,	"FromSpecifier");
	MakeComm	(0XB0100E84,	"from");
	MakeComm	(0XB0100E88,	"to");
	MakeCode	(x=0XB0100E88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100E8C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100E94,	"msgtag");
	MakeCode	(x=0XB0100EA8);
	OpDecimal	(x,	1);
	MakeCode	(x=0XB0100EB4);
	OpDecimal	(x,	1);
	MakeComm	(0XB0100EBC,	"partner");
	MakeComm	(0XB0100EC0,	"mr");
	MakeCode	(x=0XB0100ECC);
	OpDecimal	(x,	1);
	MakeComm	(0XB0100ED4,	"partner");
	MakeComm	(0XB0100ED8,	"mr");
	MakeComm	(0XB0100EE4,	"s");
	MakeCode	(x=0XB0100EE4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100EEC);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100EF4,	"partner");
	MakeCode	(0XB0100EF4);
	MakeComm	(0XB0100EF8,	"mr");
	ExtLinB		(0XB0100F04,	0,	"end of naming_serverloop.c");
	ExtLinB		(0XB0100F04,	1,	"");
	ExtLinB		(0XB0100F04,	2,	"");
	MakeDword	(x=0XB0100F04);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0100F04,	"s");
	ExtLinA		(0XB0100F08,	0,	"");
	ExtLinA		(0XB0100F08,	1,	"");
	ExtLinA		(0XB0100F08,	2,	"libs/c/src/assert.c");
	MakeCode	(x=0XB0100F08);
	OpStkvar	(x,	1);
	MakeName	(0XB0100F08,	"__assert");
	MakeCode	(x=0XB0100F0C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100F1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100F24);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100F28,	"stream");
	MakeComm	(0XB0100F30,	"format");
	MakeCode	(x=0XB0100F30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0100F3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0100F40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0100F40,	"format");
	ExtLinA		(0XB0100F44,	0,	"");
	ExtLinA		(0XB0100F44,	1,	"");
	ExtLinA		(0XB0100F44,	2,	"libs/c/src/fprintf.c");
	MakeCode	(0XB0100F44);
	MakeName	(0XB0100F44,	"fprintf");
	MakeCode	(x=0XB0100F48);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100F4C,	"format");
	MakeCode	(x=0XB0100F4C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0100F50,	"arg");
	MakeCode	(x=0XB0100F50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0100F58);
	OpStkvar	(x,	1);
	ExtLinA		(0XB0100F64,	0,	"");
	ExtLinA		(0XB0100F64,	1,	"");
	ExtLinA		(0XB0100F64,	2,	"libs/c/src/malloc.c");
	MakeCode	(0XB0100F64);
	MakeName	(0XB0100F64,	"malloc");
	MakeComm	(0XB0100F70,	"mutex_t");
	MakeCode	(x=0XB0100F70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100F7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100F8C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0100F94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0100F9C);
	OpStroffEx	(x,	1,	GetStrucIdByName("header"),	0);
	MakeCode	(0XB0100FA4);
	MakeComm	(0XB0100FB4,	"num_units");
	MakeComm	(0XB0100FD4,	"mutex_t");
	MakeCode	(x=0XB0100FD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0100FE4);
	MakeComm	(0XB0100FFC,	"mutex_t");
	MakeCode	(x=0XB0100FFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0101010);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101014);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101018);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010101C);
	MakeName	(0XB010101C,	"free");
	MakeCode	(x=0XB0101028);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010102C,	"mutex_t");
	MakeCode	(x=0XB010102C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101040);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01010E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0101104);
	MakeCode	(0XB0101114);
	MakeDword	(x=0XB010111C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101120);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101124);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0101128,	0,	"");
	ExtLinA		(0XB0101128,	1,	"");
	ExtLinA		(0XB0101128,	2,	"libs/c/src/puts.c");
	MakeCode	(0XB0101128);
	MakeName	(0XB0101128,	"puts");
	MakeComm	(0XB0101130,	"c");
	MakeCode	(x=0XB0101138);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101140);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0101144,	"stream");
	MakeComm	(0XB0101158,	"stream");
	MakeComm	(0XB010115C,	"c");
	MakeDword	(x=0XB010116C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0101170,	0,	"");
	ExtLinA		(0XB0101170,	1,	"");
	ExtLinA		(0XB0101170,	2,	"libs/c/src/strcpy.c");
	MakeCode	(0XB0101170);
	MakeName	(0XB0101170,	"strcpy");
	ExtLinA		(0XB010119C,	0,	"");
	ExtLinA		(0XB010119C,	1,	"");
	ExtLinA		(0XB010119C,	2,	"libs/c/src/strlen.c");
	MakeCode	(0XB010119C);
	MakeName	(0XB010119C,	"strlen");
	ExtLinA		(0XB01011C0,	0,	"");
	ExtLinA		(0XB01011C0,	1,	"");
	ExtLinA		(0XB01011C0,	2,	"libs/c/src/vfprintf.c");
	MakeCode	(x=0XB01011C0);
	OpStkvar	(x,	1);
	MakeName	(0XB01011C0,	"vfprintf");
	MakeComm	(0XB01011C4,	"fmt");
	MakeComm	(0XB01011CC,	"stream");
	MakeComm	(0XB01011D0,	"stream_or_memory");
	MakeComm	(0XB01011D4,	"n");
	MakeCode	(x=0XB01011D4);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeComm	(0XB01011D8,	"output");
	ExtLinA		(0XB01011E8,	0,	"");
	ExtLinA		(0XB01011E8,	1,	"");
	ExtLinA		(0XB01011E8,	2,	"libs/c/src/sys-baremetal/sys_abort.c");
	MakeCode	(x=0XB01011E8);
	OpStkvar	(x,	1);
	MakeName	(0XB01011E8,	"abort");
	MakeComm	(0XB01011EC,	"str");
	MakeCode	(x=0XB01011EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB01011F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01011F8,	"str");
	ExtLinA		(0XB01011FC,	0,	"");
	ExtLinA		(0XB01011FC,	1,	"");
	ExtLinA		(0XB01011FC,	2,	"libs/c/src/sys-iguana/sys_init.c");
	MakeCode	(x=0XB01011FC);
	OpStkvar	(x,	1);
	MakeName	(0XB01011FC,	"__libc_setup");
	MakeComm	(0XB0101208,	"key");
	MakeCode	(x=0XB0101210);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101218);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB010121C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0101220);
	MakeName	(0XB0101220,	"__lib_init");
	MakeComm	(0XB0101224,	"heap_base");
	MakeComm	(0XB010122C,	"key");
	MakeCode	(x=0XB010122C);
	OpEnumEx		(x,	1,	GetEnum("$2D35F4AC89C217003598D3D05A903541"),0);
	MakeComm	(0XB0101238,	"key");
	MakeCode	(x=0XB0101238);
	OpEnumEx		(x,	1,	GetEnum("$2D35F4AC89C217003598D3D05A903541"),0);
	MakeComm	(0XB0101244,	"callback");
	MakeComm	(0XB010124C,	"stdin_p");
	MakeComm	(0XB0101250,	"stdout_p");
	MakeComm	(0XB0101254,	"stderr_p");
	MakeComm	(0XB0101260,	"key");
	MakeCode	(x=0XB0101260);
	OpEnumEx		(x,	1,	GetEnum("$2D35F4AC89C217003598D3D05A903541"),0);
	MakeComm	(0XB0101270,	"key");
	MakeCode	(x=0XB0101270);
	OpEnumEx		(x,	1,	GetEnum("$0D789D9EC7801EDB66FF7DD98E93DD77"),0);
	MakeCode	(0XB0101288);
	MakeName	(0XB0101288,	"__sys_entry");
	MakeComm	(0XB0101298,	"argv");
	MakeComm	(0XB010129C,	"argc");
	ExtLinB		(0XB01012A4,	0,	"end sys_init.c");
	ExtLinB		(0XB01012A4,	1,	"");
	ExtLinB		(0XB01012A4,	2,	"");
	ExtLinA		(0XB01012A8,	0,	"");
	ExtLinA		(0XB01012A8,	1,	"");
	ExtLinA		(0XB01012A8,	2,	"libs/c/src/sys-iguana/sys_morecore.c");
	MakeCode	(0XB01012A8);
	MakeName	(0XB01012A8,	"__malloc_init");
	MakeCode	(x=0XB01012B4);
	OpStroffEx	(x,	1,	GetStrucIdByName("header"),	0);
	MakeCode	(0XB01012C0);
	MakeName	(0XB01012C0,	"__morecore_init");
	MakeComm	(0XB01012C4,	"slot");
	MakeCode	(x=0XB01012CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01012E0,	"slot");
	MakeComm	(0XB01012E4,	"cap");
	MakeCode	(x=0XB01012F8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0101308);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010130C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0101310);
	MakeName	(0XB0101310,	"morecore");
	MakeRptCmt	(0XB0101328,	"iguana_memsection_create is inlined here");
	MakeCode	(x=0XB0101328);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010134C,	"size");
	MakeCode	(x=0XB010134C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101354,	"base");
	MakeComm	(0XB010136C,	"slot");
	MakeComm	(0XB0101370,	"cap");
	MakeCode	(x=0XB0101380);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0101398,	"memsect");
	MakeComm	(0XB01013A4,	"memsect");
	MakeCode	(x=0XB01013B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01013BC);
	OpStroffEx	(x,	1,	GetStrucIdByName("header"),	0);
	MakeComm	(0XB01013C0,	"mem");
	MakeCode	(x=0XB01013C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB01013D8);
	MakeDword	(x=0XB01013E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01013E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinB		(0XB01013E8,	0,	"end sys_morecore.c");
	ExtLinB		(0XB01013E8,	1,	"");
	ExtLinB		(0XB01013E8,	2,	"");
	MakeDword	(x=0XB01013E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB01013EC,	0,	"");
	ExtLinA		(0XB01013EC,	1,	"");
	ExtLinA		(0XB01013EC,	2,	"libs/c/src/sys-iguana/sys_stdio.c");
	MakeCode	(0XB01013EC);
	MakeName	(0XB01013EC,	"null_write");
	MakeCode	(0XB01013F4);
	MakeName	(0XB01013F4,	"null_read");
	MakeCode	(0XB01013FC);
	MakeName	(0XB01013FC,	"l4kdb_write");
	MakeCode	(x=0XB0101418);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010141C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101428);
	MakeComm	(0XB0101430,	"L4_KDB_ReadChar and L4_KDB_ConsoleEnabled inlined here");
	MakeComm	(0XB0101434,	"KernelId");
	MakeComm	(0XB0101438,	"ApiVersion");
	MakeCode	(x=0XB0101448);
	OpStroffEx	(x,	1,	GetStrucIdByName("L4_KernelConfigurationPage_t"),	0);
	MakeCode	(x=0XB0101450);
	OpStroffEx	(x,	1,	GetStrucIdByName("L4_KernelConfigurationPage_t"),	0);
	MakeCode	(x=0XB0101454);
	OpEnumEx		(x,	1,	GetEnum("$92E3D764AA66F6EDF8647F708AE2EEC8"),0);
	MakeComm	(0XB010145C,	"c");
	MakeCode	(0XB010147C);
	MakeName	(0XB010147C,	"l4kdb_read");
	MakeCode	(x=0XB0101494);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101498);
	OpStkvar	(x,	1);
	MakeComm	(0XB01014A4,	"ApiFlags");
	MakeComm	(0XB01014A8,	"KernelId");
	MakeComm	(0XB01014AC,	"ApiVersion");
	MakeCode	(x=0XB01014C4);
	OpHex		(x,	1);
	MakeCode	(0XB01014F8);
	MakeCode	(0XB0101500);
	MakeName	(0XB0101500,	"init_write");
	MakeComm	(0XB0101514,	"ApiFlags");
	MakeCode	(x=0XB0101514);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101518,	"KernelId");
	MakeComm	(0XB010151C,	"ApiVersion");
	MakeCode	(x=0XB010151C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101528);
	OpStroffEx	(x,	1,	GetStrucIdByName("L4_KernelConfigurationPage_t"),	0);
	MakeCode	(x=0XB010152C);
	OpEnumEx		(x,	1,	GetEnum("$92E3D764AA66F6EDF8647F708AE2EEC8"),0);
	MakeCode	(x=0XB0101530);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101534);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101538);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010153C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101540);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101544);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101548);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB010154C);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0101550);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0101554);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB010156C);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeDword	(x=0XB0101578);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010157C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101580);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101584);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0101588);
	MakeName	(0XB0101588,	"init_read");
	MakeComm	(0XB010159C,	"ApiFlags");
	MakeCode	(x=0XB010159C);
	OpStkvar	(x,	1);
	MakeComm	(0XB01015A0,	"KernelId");
	MakeComm	(0XB01015A4,	"ApiVersion");
	MakeCode	(x=0XB01015A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01015B0);
	OpStroffEx	(x,	1,	GetStrucIdByName("L4_KernelConfigurationPage_t"),	0);
	MakeCode	(x=0XB01015B4);
	OpEnumEx		(x,	1,	GetEnum("$92E3D764AA66F6EDF8647F708AE2EEC8"),0);
	MakeCode	(x=0XB01015B8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01015BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01015C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01015C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01015CC);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB01015E0);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeDword	(x=0XB01015EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01015F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinB		(0XB01015F4,	0,	"end sys_stdio.c");
	ExtLinB		(0XB01015F4,	1,	"");
	ExtLinB		(0XB01015F4,	2,	"");
	MakeDword	(x=0XB01015F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB01015F8,	0,	"");
	ExtLinA		(0XB01015F8,	1,	"libs/c/src/exit.c");
	MakeCode	(x=0XB01015F8);
	OpStkvar	(x,	1);
	MakeName	(0XB01015F8,	"exit");
	ExtLinA		(0XB0101600,	0,	"");
	ExtLinA		(0XB0101600,	1,	"");
	ExtLinA		(0XB0101600,	2,	"libs/c/src/format.c");
	MakeName	(0XB0101600,	"format_string");
	MakeCode	(x=0XB010160C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101614);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101618);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101624);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101628);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101630);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101638);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010163C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101640,	"mutex_t");
	MakeCode	(x=0XB0101640);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0101648);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101660);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101680);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010168C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101694);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101698);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01016F0);
	OpStkvar	(x,	1);
	MakeComm	(0XB01016F8,	"mutex_t");
	MakeCode	(x=0XB01016F8);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0101700);
	OpStkvar	(x,	1);
	MakeCode	(0XB010170C);
	MakeCode	(x=0XB0101710);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101714);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010171C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101724);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101728);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010172C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101730);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101734);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0101758);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010175C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101760);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101764);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101768);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010176C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101770);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101774);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101778);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010177C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101780);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101784);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101788);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010178C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101790);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101794);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101798);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010179C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017C8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017E8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01017FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101800);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101804);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101808);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010180C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101810);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101814);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101818);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010181C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101820);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101824);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101828);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010182C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101830);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101834);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101838);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010183C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101840);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101844);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101848);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010184C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101850);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101854);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101858);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010185C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101860);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101864);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101868);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010186C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101870);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101874);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101878);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010187C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101880);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101884);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101888);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010188C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101890);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101894);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101898);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010189C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018B0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01018C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeComm	(0XB01018C4,	"c");
	MakeCode	(0XB01018C4);
	MakeComm	(0XB01018C8,	"stream");
	MakeCode	(x=0XB01018C8);
	OpStkvar	(x,	1);
	MakeCode	(0XB01018D4);
	MakeCode	(x=0XB01018D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01018E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01018EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01018F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101904);
	OpChr		(x,	1);
	MakeCode	(x=0XB0101910);
	OpChr		(x,	1);
	MakeCode	(x=0XB0101918);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101924);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010192C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101930);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101938);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101948);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101964,	"stream");
	MakeCode	(x=0XB0101964);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010196C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101978);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101980);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101984);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101990,	"c");
	MakeCode	(x=0XB010199C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01019A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01019B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01019B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01019BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01019C0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01019D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01019D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01019DC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01019E0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01019E4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01019E8);
	MakeCode	(x=0XB01019EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01019F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A3C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101A44);
	MakeCode	(x=0XB0101A58);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0101A6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101A98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101AA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101AAC);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101ABC,	"num");
	MakeComm	(0XB0101AC4,	"den");
	MakeComm	(0XB0101AD4,	"den");
	MakeComm	(0XB0101ADC,	"num");
	MakeCode	(x=0XB0101B00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101B10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101B28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101B2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101B3C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101B48);
	MakeCode	(x=0XB0101B4C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101B54);
	MakeDword	(x=0XB0101B64);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101B68);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101B6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101B70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101B74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0101B78);
	MakeCode	(0XB0101B84);
	MakeCode	(0XB0101B90);
	MakeDword	(x=0XB0101BA0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101BA4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101BA8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101BAC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0101BB0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0101BB4);
	MakeCode	(0XB0101BC0);
	MakeCode	(x=0XB0101BC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BEC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101BFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C08);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C0C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C30);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101C48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C54);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C60);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C68);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C6C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101C70,	"mutex_t");
	MakeCode	(x=0XB0101C70);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0101C78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101C90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101CBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101CC4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101CE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101CE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101D00);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101D10);
	MakeComm	(0XB0101D40,	"stream");
	MakeCode	(x=0XB0101D40);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101D48);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101D54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101D6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101D70);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101D88);
	MakeComm	(0XB0101DBC,	"stream");
	MakeCode	(x=0XB0101DBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101DC4);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101DD0,	"c");
	MakeCode	(x=0XB0101DE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E58);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E60);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101E64,	"mutex_t");
	MakeCode	(x=0XB0101E64);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0101E6C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E70);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E80);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E84);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101E90);
	MakeCode	(x=0XB0101E94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101E9C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101EB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101EC0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101ED0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101EDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101EE4);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101EEC);
	MakeCode	(x=0XB0101EF0);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101EFC);
	MakeCode	(x=0XB0101F00);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101F04);
	OpChr		(x,	1);
	MakeCode	(x=0XB0101F10);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101F18,	"stream");
	MakeCode	(x=0XB0101F20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101F24);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101F30);
	MakeCode	(x=0XB0101F3C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0101F44);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101F48);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101F54,	"c");
	MakeCode	(0XB0101F54);
	MakeCode	(x=0XB0101F5C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101F64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101F70);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101F74);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101F80);
	MakeCode	(x=0XB0101F84);
	OpStkvar	(x,	1);
	MakeCode	(0XB0101F90);
	MakeCode	(0XB0101F9C);
	MakeComm	(0XB0101FA4,	"c");
	MakeCode	(0XB0101FA4);
	MakeCode	(x=0XB0101FB0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101FDC,	"stream");
	MakeCode	(x=0XB0101FDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0101FE4);
	OpStkvar	(x,	1);
	MakeComm	(0XB0101FF0,	"c");
	MakeCode	(0XB010200C);
	MakeComm	(0XB0102018,	"s");
	MakeCode	(0XB0102018);
	MakeCode	(x=0XB0102020);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102028);
	MakeCode	(x=0XB0102034);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010203C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102058);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102060);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010206C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102080);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010208C);
	OpStkvar	(x,	1);
	MakeCode	(0XB010209C);
	MakeCode	(x=0XB01020A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01020F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102100);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102108);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102118);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102128);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010213C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102144);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102150);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010215C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102168);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102170);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010217C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102184);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102190);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102198);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010219C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01021B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01021C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01021C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01021D0);
	OpStkvar	(x,	1);
	MakeCode	(0XB01021E0);
	MakeCode	(x=0XB01021F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01021F8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0102200);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0102204);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinB		(0XB0102208,	0,	"end format.c");
	MakeDword	(x=0XB0102208);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB010220C,	0,	"");
	ExtLinA		(0XB010220C,	1,	"libs/c/src/fputc.c");
	MakeCode	(0XB010220C);
	MakeName	(0XB010220C,	"fputc");
	MakeCode	(x=0XB0102214);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102218);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeComm	(0XB0102228,	"mutex_t");
	MakeCode	(x=0XB0102234);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB010223C);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB0102244);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeComm	(0XB010224C,	"mutex_t");
	MakeCode	(x=0XB0102254);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeCode	(x=0XB010225C);
	OpStroffEx	(x,	1,	GetStrucIdByName("__file"),	0);
	MakeComm	(0XB0102270,	"mutex_t");
	MakeCode	(0XB0102270);
	ExtLinA		(0XB0102280,	0,	"");
	ExtLinA		(0XB0102280,	1,	"libs/c/src/sys-iguana/sys_exit.c");
	MakeCode	(x=0XB0102280);
	OpStkvar	(x,	1);
	MakeName	(0XB0102280,	"_Exit");
	MakeComm	(0XB010228C,	"expression");
	MakeCode	(x=0XB010228C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0102290,	"file");
	MakeCode	(x=0XB0102290);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0102294,	"function");
	MakeCode	(x=0XB0102294);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0102298,	"line");
	MakeDword	(x=0XB01022A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01022A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01022AC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB01022B0,	0,	"");
	ExtLinA		(0XB01022B0,	1,	"this is stuff from libs/gcc/src/__*.c");
	ExtLinA		(0XB01022B0,	2,	"(ie okl4_release_1.5.2 libs/gcc/src/__udivsi3.c).");
	ExtLinA		(0XB01022B0,	3,	"I didn't bother analyzing all this stuff, ");
	ExtLinA		(0XB01022B0,	4,	"its of little interest to us.");
	MakeCode	(0XB01022B0);
	MakeName	(0XB01022B0,	"__umodsi3");
	MakeCode	(0XB01022C0);
	MakeName	(0XB01022C0,	"__unidentified");
	MakeCode	(0XB01022D0);
	MakeCode	(0XB01022D8);
	MakeName	(0XB01022D8,	"__udivmodsi4");
	MakeCode	(x=0XB01022FC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0102304);
	OpHex		(x,	1);
	MakeCode	(0XB010230C);
	MakeCode	(0XB0102318);
	MakeCode	(x=0XB0102330);
	OpHex		(x,	1);
	MakeCode	(x=0XB0102338);
	OpHex		(x,	1);
	MakeCode	(0XB0102454);
	MakeCode	(x=0XB01026CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01026E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01026F0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01026F8);
	OpHex		(x,	1);
	ExtLinA		(0XB0102714,	0,	"");
	ExtLinA		(0XB0102714,	1,	"libs/ll/src/linked_list.c");
	MakeCode	(x=0XB0102714);
	OpStkvar	(x,	1);
	MakeName	(0XB0102714,	"ll_new");
	MakeComm	(0XB0102718,	"sz");
	MakeCode	(x=0XB0102728);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB010272C);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102730);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102734);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102738);
	MakeName	(0XB0102738,	"ll_insert_before");
	MakeComm	(0XB0102740,	"sz");
	MakeCode	(x=0XB0102754);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102758);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102760);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(0XB010276C);
	MakeName	(0XB010276C,	"ll_delete");
	MakeCode	(x=0XB0102770);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102774);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102778);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB010277C);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102780);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB0102790);
	OpStroffEx	(x,	1,	GetStrucIdByName("double_list"),	0);
	MakeName	(0XB0102790,	"dl_list_init");
	MakeCode	(x=0XB0102794);
	OpStroffEx	(x,	1,	GetStrucIdByName("double_list"),	0);
	MakeCode	(0XB010279C);
	MakeName	(0XB010279C,	"dl_list_create_back");
	MakeComm	(0XB01027A4,	"sz");
	MakeCode	(x=0XB01027B0);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB01027B4);
	OpStroffEx	(x,	1,	GetStrucIdByName("double_list"),	0);
	MakeCode	(x=0XB01027B8);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB01027BC);
	OpStroffEx	(x,	1,	GetStrucIdByName("double_list"),	0);
	MakeCode	(x=0XB01027C0);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB01027C8);
	OpStroffEx	(x,	1,	GetStrucIdByName("ll"),	0);
	MakeCode	(x=0XB01027CC);
	OpStroffEx	(x,	1,	GetStrucIdByName("double_list"),	0);
	ExtLinB		(0XB01027D4,	0,	"end linked_list.c");
	ExtLinB		(0XB01027D4,	1,	"");
	ExtLinB		(0XB01027D4,	2,	"");
	ExtLinA		(0XB01027D8,	0,	"");
	ExtLinA		(0XB01027D8,	1,	"");
	ExtLinA		(0XB01027D8,	2,	"libs/binary_tree/src/binary_tree.c");
	MakeCode	(x=0XB01027D8);
	OpStkvar	(x,	1);
	MakeName	(0XB01027D8,	"binary_tree_new");
	MakeComm	(0XB01027DC,	"sz");
	MakeCode	(x=0XB01027FC);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102800);
	MakeName	(0XB0102800,	"find_node");
	MakeComm	(0XB010282C,	"s2");
	MakeCode	(x=0XB010282C);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB0102830,	"s1");
	MakeComm	(0XB0102840,	"left");
	MakeCode	(x=0XB0102840);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB0102844);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(0XB0102864);
	MakeName	(0XB0102864,	"binary_tree_insert");
	MakeComm	(0XB0102870,	"sz");
	MakeComm	(0XB0102890,	"left");
	MakeCode	(x=0XB0102890);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB0102894);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01028A0);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01028A4);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB01028BC,	"key");
	MakeCode	(0XB01028BC);
	MakeComm	(0XB01028C0,	"cmp_p");
	MakeCode	(x=0XB01028C8);
	OpStkvar	(x,	1);
	MakeComm	(0XB01028D4,	"left");
	MakeCode	(x=0XB01028D4);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01028D8);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB01028E0,	"mem");
	MakeCode	(0XB01028E0);
	MakeCode	(x=0XB01028E8);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeCode	(x=0XB01028F0);
	OpStkvar	(x,	1);
	MakeName	(0XB01028F0,	"binary_tree_lookup");
	MakeComm	(0XB01028F8,	"parent");
	MakeComm	(0XB0102904,	"cmp_p");
	MakeComm	(0XB0102908,	"root");
	MakeCode	(x=0XB0102914);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010291C);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(0XB0102930);
	MakeName	(0XB0102930,	"binary_tree_remove");
	MakeComm	(0XB0102938,	"root");
	MakeComm	(0XB0102950,	"cmp_p");
	MakeCode	(x=0XB0102950);
	OpStkvar	(x,	1);
	MakeComm	(0XB0102954,	"parent");
	MakeCode	(x=0XB010295C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0102968,	"mem");
	MakeCode	(x=0XB0102968);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeComm	(0XB0102970,	"left");
	MakeCode	(x=0XB0102970);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB010297C);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB0102980,	"left");
	MakeCode	(x=0XB0102980);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB0102988,	"left");
	MakeCode	(x=0XB0102988);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB0102990);
	OpStkvar	(x,	1);
	MakeComm	(0XB0102994,	"left");
	MakeCode	(x=0XB0102994);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB010299C,	"left");
	MakeCode	(x=0XB010299C);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01029A0);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01029B0);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(0XB01029C0);
	MakeComm	(0XB01029C8,	"largest_node is inlined here");
	MakeCode	(x=0XB01029C8);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01029DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01029E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01029EC);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01029F0);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01029F4);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeComm	(0XB01029F8,	"left");
	MakeCode	(x=0XB01029F8);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	MakeCode	(x=0XB01029FC);
	OpStroffEx	(x,	1,	GetStrucIdByName("bin_tree_node"),	0);
	ExtLinB		(0XB0102A10,	0,	"end binary_tree.c");
	ExtLinA		(0XB0102A14,	0,	"");
	ExtLinA		(0XB0102A14,	1,	"");
	ExtLinA		(0XB0102A14,	2,	"libs/l4/arch/arm/src/kdebug.spp");
	MakeCode	(0XB0102A14);
	MakeName	(0XB0102A14,	"L4_KDB_Enter");
	MakeCode	(x=0XB0102A1C);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102A2C);
	MakeName	(0XB0102A2C,	"L4_KDB_GetTick");
	MakeCode	(x=0XB0102A34);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102A44);
	MakeName	(0XB0102A44,	"L4_KDB_ReadChar_Blocked_ASM");
	MakeCode	(x=0XB0102A4C);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102A5C);
	MakeName	(0XB0102A5C,	"L4_KDB_ReadChar_ASM");
	MakeCode	(x=0XB0102A64);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102A74);
	MakeName	(0XB0102A74,	"L4_KDB_PrintChar_ASM");
	MakeCode	(x=0XB0102A7C);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102A8C);
	MakeName	(0XB0102A8C,	"L4_KDB_GetTracepointCount");
	MakeCode	(x=0XB0102A94);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102AA4);
	MakeName	(0XB0102AA4,	"L4_KDB_GetNumTracepoints");
	MakeCode	(x=0XB0102AAC);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102ABC);
	MakeName	(0XB0102ABC,	"L4_KDB_GetTracepointNameIntroMRs");
	MakeCode	(x=0XB0102AC4);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102AD4);
	MakeName	(0XB0102AD4,	"L4_KDB_TCCtrl");
	MakeCode	(x=0XB0102ADC);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102AEC);
	MakeName	(0XB0102AEC,	"L4_KDB__PMU_Reset");
	MakeCode	(x=0XB0102AF4);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102B04);
	MakeName	(0XB0102B04,	"L4_KDB__PMU_Stop");
	MakeCode	(x=0XB0102B0C);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102B1C);
	MakeName	(0XB0102B1C,	"L4_KDB_PMU_Read");
	MakeCode	(x=0XB0102B24);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102B34);
	MakeName	(0XB0102B34,	"L4_KDB__PMU_Config");
	MakeCode	(x=0XB0102B3C);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102B4C);
	MakeName	(0XB0102B4C,	"L4_KDB_SetThreadName_ASM");
	MakeCode	(x=0XB0102B64);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	ExtLinB		(0XB0102B70,	0,	"end kdebug.spp");
	ExtLinB		(0XB0102B70,	1,	"");
	ExtLinA		(0XB0102B74,	0,	"");
	ExtLinA		(0XB0102B74,	1,	"libs/l4/arch/arm/src/syscalls.spp");
	MakeCode	(0XB0102B74);
	MakeName	(0XB0102B74,	"L4_KernelInterface");
	MakeCode	(x=0XB0102B88);
	OpEnumEx		(x,	1,	GetEnum("trapenum"),0);
	MakeCode	(0XB0102BAC);
	MakeName	(0XB0102BAC,	"L4_ExchangeRegisters");
	MakeCode	(x=0XB0102BB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102BB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102BB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102BC0);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102BC4);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102BC8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102BEC);
	MakeName	(0XB0102BEC,	"L4_ThreadControl");
	MakeCode	(x=0XB0102BF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102BF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102BF8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102C00);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102C04);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102C0C);
	MakeName	(0XB0102C0C,	"L4_ThreadSwitch");
	MakeCode	(x=0XB0102C14);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102C18);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102C20);
	MakeName	(0XB0102C20,	"L4_Schedule");
	MakeCode	(x=0XB0102C24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102C28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102C30);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102C34);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102C38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102C3C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102C54);
	MakeName	(0XB0102C54,	"L4_Ipc");
	MakeCode	(x=0XB0102C80);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102C84);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102CBC);
	MakeName	(0XB0102CBC,	"L4_Notify");
	MakeCode	(x=0XB0102CD0);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102CD4);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102CE0);
	MakeName	(0XB0102CE0,	"L4_WaitNotify");
	MakeCode	(x=0XB0102CE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102CEC);
	OpSign		(x,	1);
	OpHex		(x,	1);
	MakeCode	(x=0XB0102CF8);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102CFC);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102D00);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102D10);
	MakeName	(0XB0102D10,	"L4_Lipc");
	MakeCode	(x=0XB0102D14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102D18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102D44);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102D48);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102D4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0102D50);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102D84);
	MakeName	(0XB0102D84,	"L4_MapControl");
	MakeCode	(x=0XB0102D8C);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102D90);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102D98);
	MakeName	(0XB0102D98,	"L4_SpaceControl");
	MakeCode	(x=0XB0102DA0);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102DA4);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102DA8);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102DB8);
	MakeName	(0XB0102DB8,	"L4_ProcessorControl");
	MakeCode	(x=0XB0102DC0);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102DC4);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102DCC);
	MakeName	(0XB0102DCC,	"L4_CacheControl");
	MakeCode	(x=0XB0102DD4);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102DD8);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102DE0);
	MakeName	(0XB0102DE0,	"L4_IpcControl");
	MakeCode	(x=0XB0102DE8);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102DEC);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	ExtLinB		(0XB0102DF0,	0,	"end syscalls.spp");
	ExtLinB		(0XB0102DF0,	1,	"");
	ExtLinA		(0XB0102DF4,	0,	"");
	ExtLinA		(0XB0102DF4,	1,	"libs/mutex/src/mutex.c");
	MakeCode	(0XB0102DF4);
	MakeName	(0XB0102DF4,	"mutex_init");
	MakeCode	(x=0XB0102DF8);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102E00);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(0XB0102E08);
	MakeName	(0XB0102E08,	"mutex_count_lock");
	MakeCode	(x=0XB0102E14);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102E1C);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102E24);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeName	(0XB0102E24,	"mutex_count_unlock");
	MakeCode	(x=0XB0102E34);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeComm	(0XB0102E3C,	"mutex_unlock inlined here");
	MakeCode	(x=0XB0102E3C);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeComm	(0XB0102E48,	"holder");
	MakeCode	(x=0XB0102E48);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102E50);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	ExtLinB		(0XB0102E54,	0,	"end mutex.c");
	ExtLinB		(0XB0102E54,	1,	"");
	ExtLinB		(0XB0102E54,	2,	"");
	ExtLinA		(0XB0102E58,	0,	"");
	ExtLinA		(0XB0102E58,	1,	"libs/mutex/arch/arm/src/arm_mutex.spp");
	MakeCode	(0XB0102E58);
	MakeName	(0XB0102E58,	"mutex_lock");
	MakeCode	(x=0XB0102E68);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0102E6C);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeCode	(x=0XB0102E74);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),1);
	MakeComm	(0XB0102E78,	"holder");
	MakeCode	(x=0XB0102E78);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102E94);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),1);
	MakeCode	(x=0XB0102E9C);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102EA8);
	OpEnumEx		(x,	1,	GetEnum("syscalls"),0);
	MakeCode	(x=0XB0102EAC);
	OpEnumEx		(x,	0,	GetEnum("syscalls"),0);
	MakeCode	(0XB0102EB8);
	MakeCode	(x=0XB0102EBC);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeComm	(0XB0102EC0,	"holder");
	MakeCode	(x=0XB0102EC0);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0102EC4);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),1);
	MakeCode	(0XB0102ECC);
	MakeCode	(x=0XB0102ED0);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),1);
	ExtLinA		(0XB0102ED8,	0,	"");
	ExtLinA		(0XB0102ED8,	1,	"");
	ExtLinA		(0XB0102ED8,	2,	"libs/l4e/src/l4e_misc.c");
	MakeCode	(0XB0102ED8);
	MakeName	(0XB0102ED8,	"l4e_min_pagebits");
	MakeCode	(x=0XB0102EDC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0102EFC,	"KernelId");
	MakeCode	(0XB0102EFC);
	MakeComm	(0XB0102F00,	"ApiVersion");
	MakeCode	(x=0XB0102F00);
	OpStkvar	(x,	1);
	MakeComm	(0XB0102F04,	"ApiFlags");
	MakeCode	(x=0XB0102F04);
	OpStkvar	(x,	1);
	MakeComm	(0XB0102F0C,	"L4_PageSizeMask inlined here");
	MakeCode	(x=0XB0102F0C);
	OpStroffEx	(x,	1,	GetStrucIdByName("L4_KernelInterfacePage_struct"),	0);
	MakeCode	(x=0XB0102F10);
	OpHex		(x,	1);
	MakeCode	(x=0XB0102F14);
	OpHex		(x,	1);
	MakeCode	(0XB0102F1C);
	MakeCode	(x=0XB0102F28);
	OpHex		(x,	1);
	MakeDword	(x=0XB0102F38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0102F3C);
	OpStkvar	(x,	1);
	MakeName	(0XB0102F3C,	"l4e_min_pagesize");
	MakeCode	(x=0XB0102F4C);
	OpStkvar	(x,	1);
	MakeCode	(0XB0102F50);
	MakeName	(0XB0102F50,	"l4e_biggest_fpage");
	MakeCode	(0XB0102F70);
	MakeCode	(x=0XB0102FD0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0102FD4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0102FDC);
	OpHex		(x,	1);
	ExtLinB		(0XB0102FE0,	0,	"end l4e_misc.c");
	ExtLinB		(0XB0102FE0,	1,	"");
	ExtLinA		(0XB0102FE4,	0,	"");
	ExtLinA		(0XB0102FE4,	1,	"libs/circular_buffer/src/cb_attach.c");
	MakeCode	(0XB0102FE4);
	MakeName	(0XB0102FE4,	"cb_attach");
	MakeComm	(0XB0102FEC,	"sz");
	MakeComm	(0XB0102FFC,	"cb");
	MakeComm	(0XB0103000,	"cbg");
	ExtLinA		(0XB0103018,	0,	"");
	ExtLinA		(0XB0103018,	1,	"libs/circular_buffer/src/cb_get.c");
	MakeCode	(x=0XB0103018);
	OpStkvar	(x,	1);
	MakeName	(0XB0103018,	"cb_get");
	MakeCode	(x=0XB010301C);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb_get_handle"),	0);
	MakeCode	(x=0XB0103020);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb_get_handle"),	0);
	MakeCode	(x=0XB0103024);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb"),	0);
	MakeComm	(0XB0103034,	"head");
	MakeCode	(x=0XB0103034);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb"),	0);
	MakeCode	(x=0XB010303C);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb"),	0);
	MakeCode	(x=0XB0103040);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb_get_handle"),	0);
	MakeComm	(0XB0103044,	"head");
	MakeCode	(x=0XB0103044);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb"),	0);
	MakeCode	(x=0XB0103068);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb_get_handle"),	0);
	MakeCode	(x=0XB0103070);
	OpStkvar	(x,	1);
	ExtLinA		(0XB0103074,	0,	"");
	ExtLinA		(0XB0103074,	1,	"libs/circular_buffer/src/circular_buffer.c");
	MakeCode	(x=0XB0103074);
	OpStroffEx	(x,	1,	GetStrucIdByName("cb"),	0);
	MakeName	(0XB0103074,	"cb_attach_allocated");
	ExtLinA		(0XB0103080,	0,	"");
	ExtLinA		(0XB0103080,	1,	"");
	ExtLinA		(0XB0103080,	2,	"libs/naming/src/naming.c");
	MakeCode	(x=0XB0103080);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0103080,	"__naming_init");
	MakeDword	(x=0XB010308C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103090);
	MakeName	(0XB0103090,	"__naming_thread_init");
	MakeCode	(x=0XB0103094);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01030B4,	"__L4_TCR_ThreadLocalStorage inlined");
	MakeCode	(x=0XB01030B4);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeComm	(0XB01030B8,	"SESSION() inlined");
	MakeCode	(0XB01030CC);
	MakeCode	(x=0XB01030D4);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeComm	(0XB01030FC,	"server");
	MakeComm	(0XB0103104,	"session");
	MakeComm	(0XB0103108,	"clist");
	MakeComm	(0XB010310C,	"server_tid");
	MakeComm	(0XB0103110,	"object");
	MakeCode	(x=0XB010311C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103120,	"expression");
	MakeCode	(x=0XB0103120);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103124);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103134,	"function");
	MakeCode	(x=0XB0103134);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeComm	(0XB0103138,	"SESSION");
	MakeCode	(0XB0103148);
	MakeDword	(x=0XB0103150);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103154);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103158);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010315C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103160);
	MakeName	(0XB0103160,	"__naming_thread_free");
	MakeCode	(x=0XB0103168);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB010316C,	"SESSION");
	MakeCode	(0XB0103174);
	MakeName	(0XB0103174,	"__naming_thread_free_tls");
	MakeCode	(x=0XB0103178);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB010318C,	"ps?");
	MakeCode	(x=0XB0103194);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103198);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01031A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01031A8,	"ps->__naming_object.session");
	MakeCode	(x=0XB01031A8);
	OpStroffEx	(x,	1,	GetStrucIdByName("naming_session"),	0);
	MakeComm	(0XB01031B0,	"arg1");
	MakeCode	(x=0XB01031B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01031B4,	"arg2");
	MakeCode	(x=0XB01031B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01031BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01031C4,	"s");
	MakeCode	(0XB01031D8);
	MakeComm	(0XB01031DC,	"ps->__naming_object.session");
	MakeCode	(x=0XB01031DC);
	OpStroffEx	(x,	1,	GetStrucIdByName("naming_session"),	0);
	MakeCode	(0XB01031E4);
	MakeDword	(x=0XB01031EC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01031F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01031F0,	"arg1");
	MakeDword	(x=0XB01031F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01031F4,	"arg2");
	MakeDword	(x=0XB01031F8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01031FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103200);
	MakeName	(0XB0103200,	"naming_init_buf_size");
	MakeCode	(0XB0103208);
	MakeName	(0XB0103208,	"naming_insert");
	MakeCode	(x=0XB0103218);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103224);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB0103228,	"SESSION");
	MakeCode	(x=0XB010322C);
	OpStroffEx	(x,	1,	GetStrucIdByName("naming_session"),	0);
	MakeCode	(x=0XB0103234);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103238);
	OpStroffEx	(x,	1,	GetStrucIdByName("naming_session"),	0);
	MakeRptCmt	(0XB0103240,	"naming_write_insert inlined");
	MakeRptCmt	(0XB0103278,	"op = 0");
	MakeCode	(x=0XB0103284);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum2"),0);
	MakeCode	(x=0XB0103290);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103294);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010329C);
	OpHex		(x,	1);
	MakeCode	(x=0XB01032A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01032A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01032AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01032B4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01032B8);
	OpHex		(x,	1);
	MakeComm	(0XB01032C0,	"tag");
	MakeComm	(0XB01032C4,	"FromSpecifier");
	MakeComm	(0XB01032C8,	"from");
	MakeComm	(0XB01032CC,	"to");
	MakeCode	(x=0XB01032D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01032EC);
	OpStkvar	(x,	1);
	MakeCode	(0XB0103308);
	MakeName	(0XB0103308,	"naming_modify");
	MakeCode	(x=0XB0103318);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103324);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB0103328,	"SESSION");
	MakeRptCmt	(0XB0103344,	"naming_write_modify inlined");
	MakeRptCmt	(0XB010337C,	"op = 1");
	MakeCode	(x=0XB0103394);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103398);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01033A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01033A4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01033AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01033B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01033B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01033BC);
	OpHex		(x,	1);
	MakeComm	(0XB01033C4,	"tag");
	MakeComm	(0XB01033C8,	"FromSpecifier");
	MakeComm	(0XB01033CC,	"from");
	MakeComm	(0XB01033D0,	"to");
	MakeCode	(x=0XB01033D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01033F0);
	OpStkvar	(x,	1);
	MakeCode	(0XB010340C);
	MakeName	(0XB010340C,	"naming_delete");
	MakeCode	(x=0XB010341C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103428);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB010342C,	"SESSION");
	MakeRptCmt	(0XB0103448,	"naming_write_delete inlined");
	MakeRptCmt	(0XB010347C,	"op = 2");
	MakeCode	(x=0XB0103494);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103498);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01034A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01034A4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01034AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01034B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01034B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01034BC);
	OpHex		(x,	1);
	MakeComm	(0XB01034C4,	"tag");
	MakeComm	(0XB01034C8,	"FromSpecifier");
	MakeComm	(0XB01034CC,	"from");
	MakeComm	(0XB01034D0,	"to");
	MakeCode	(x=0XB01034D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01034F0);
	OpStkvar	(x,	1);
	MakeCode	(0XB010350C);
	MakeName	(0XB010350C,	"naming_lookup");
	MakeCode	(x=0XB0103518);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB010351C,	"SESSION");
	MakeRptCmt	(0XB0103524,	"naming_write_lookup inlined");
	MakeRptCmt	(0XB010356C,	"op = 0");
	MakeCode	(x=0XB0103584);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103588);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103590);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103594);
	OpHex		(x,	1);
	MakeCode	(x=0XB010359C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01035A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01035A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01035AC);
	OpHex		(x,	1);
	MakeComm	(0XB01035B4,	"to");
	MakeComm	(0XB01035B8,	"from");
	MakeComm	(0XB01035BC,	"tag");
	MakeComm	(0XB01035C0,	"FromSpecifier");
	MakeCode	(x=0XB01035C4);
	OpStkvar	(x,	1);
	MakeCode	(0XB01035E0);
	MakeName	(0XB01035E0,	"naming_notify");
	MakeCode	(x=0XB01035EC);
	OpStkvar	(x,	1);
	MakeComm	(0XB01035FC,	"sz");
	MakeCode	(x=0XB010361C);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103624);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeRptCmt	(0XB0103628,	"SESSION");
	MakeComm	(0XB010362C,	"synch_mask");
	MakeComm	(0XB0103630,	"obj_type");
	MakeCode	(x=0XB0103648);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB010364C,	"SESSION");
	MakeCode	(x=0XB0103650);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeRptCmt	(0XB0103654,	"naming_read_notify inlined");
	MakeComm	(0XB0103668,	"to");
	MakeRptCmt	(0XB01036B8,	"op = 1");
	MakeCode	(x=0XB01036D0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01036D4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01036DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01036E0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01036E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01036EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01036F4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01036F8);
	OpHex		(x,	1);
	MakeComm	(0XB0103700,	"tag");
	MakeComm	(0XB0103704,	"from");
	MakeComm	(0XB0103708,	"FromSpecifier");
	MakeCode	(x=0XB010370C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103720);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103738);
	OpStkvar	(x,	1);
	MakeComm	(0XB0103748,	"src");
	MakeComm	(0XB010374C,	"dst");
	MakeCode	(0XB0103760);
	MakeComm	(0XB0103768,	"object");
	MakeComm	(0XB010376C,	"synch_mask");
	MakeComm	(0XB0103774,	"mem");
	MakeComm	(0XB0103784,	"mem");
	MakeCode	(0XB0103784);
	MakeCode	(0XB0103794);
	MakeName	(0XB0103794,	"naming_cancel");
	MakeCode	(x=0XB01037A0);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB01037A4,	"naming_notify__cancel inlined");
	MakeComm	(0XB01037C4,	"to");
	MakeCode	(x=0XB01037D8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01037DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01037E8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01037F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01037F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01037FC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103800);
	OpHex		(x,	1);
	MakeComm	(0XB0103808,	"tag");
	MakeComm	(0XB010380C,	"from");
	MakeComm	(0XB0103810,	"FromSpecifier");
	MakeCode	(x=0XB0103814);
	OpStkvar	(x,	1);
	MakeComm	(0XB010382C,	"synch_mask");
	MakeComm	(0XB0103830,	"object");
	MakeComm	(0XB0103838,	"mem");
	MakeCode	(0XB010384C);
	MakeName	(0XB010384C,	"naming_wait");
	MakeCode	(x=0XB0103854);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB0103858,	"SESSION");
	MakeCode	(x=0XB010385C);
	OpStroffEx	(x,	1,	GetStrucIdByName("naming_session"),	0);
	MakeCode	(0XB0103868);
	MakeName	(0XB0103868,	"naming_poll");
	MakeCode	(x=0XB0103870);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeRptCmt	(0XB0103874,	"SESSION");
	MakeCode	(x=0XB0103878);
	OpStroffEx	(x,	1,	GetStrucIdByName("naming_session"),	0);
	ExtLinB		(0XB0103880,	0,	"end naming.c");
	ExtLinB		(0XB0103880,	1,	"");
	ExtLinB		(0XB0103880,	2,	"");
	ExtLinA		(0XB0103884,	0,	"");
	ExtLinA		(0XB0103884,	1,	"libs/iguana/src/asynch.c");
	MakeCode	(0XB0103884);
	MakeName	(0XB0103884,	"__asynch_thread_init");
	MakeCode	(x=0XB0103890);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103898);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB010389C);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB01038A0);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB01038A8);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB01038B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01038B4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01038BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01038C0);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeDword	(x=0XB01038D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01038D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01038D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01038DC);
	MakeName	(0XB01038DC,	"__asynch_thread_free");
	MakeCode	(x=0XB01038E4);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB01038E8);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB01038F0);
	MakeName	(0XB01038F0,	"__asynch_thread_free_tls");
	MakeCode	(x=0XB01038FC);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103904);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103908);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010390C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0103924);
	MakeDword	(x=0XB0103930);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103934);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103938);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010393C);
	MakeName	(0XB010393C,	"asynch_get_bit");
	MakeCode	(x=0XB0103944);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103948);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB0103968);
	MakeCode	(x=0XB0103988);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB0103990);
	MakeCode	(0XB0103994);
	MakeName	(0XB0103994,	"asynch_free_bit");
	MakeCode	(x=0XB010399C);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB01039A0);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB01039AC);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB01039B4);
	MakeName	(0XB01039B4,	"asynch_insert");
	MakeCode	(x=0XB01039D4);
	OpStroffEx	(x,	1,	GetStrucIdByName("asynch"),	0);
	MakeCode	(x=0XB01039DC);
	OpStroffEx	(x,	1,	GetStrucIdByName("asynch"),	0);
	MakeCode	(x=0XB01039F8);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103A00);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103A0C);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103A10);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103A18);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103A24);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103A28,	"file");
	MakeCode	(x=0XB0103A28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103A2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103A38);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103A3C);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB0103A4C);
	MakeCode	(x=0XB0103A54);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103A5C);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeDword	(x=0XB0103A6C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103A70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103A74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103A78);
	MakeName	(0XB0103A78,	"asynch_remove");
	MakeComm	(0XB0103A80,	"bit");
	MakeCode	(x=0XB0103A94);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103A9C);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103AC0);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103AC8);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103AD4);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103ADC);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103AE4);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB0103AEC);
	MakeName	(0XB0103AEC,	"asynch_check_mask");
	MakeCode	(x=0XB0103AFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103B04);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103B08);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103B28);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeComm	(0XB0103B2C,	"mask");
	MakeCode	(x=0XB0103B38);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103B50);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103B54);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103B58);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103B60);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103B6C);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103B70);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB0103B80);
	MakeCode	(x=0XB0103BA0);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103BA4);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103BB0);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103BB4);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103BB8);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(0XB0103BC8);
	MakeComm	(0XB0103BCC,	"format");
	MakeCode	(x=0XB0103BCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103BDC);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB0103BE4);
	OpStroffEx	(x,	1,	GetStrucIdByName("tlsplatform"),	0);
	MakeCode	(x=0XB0103BE8);
	OpHex		(x,	1);
	MakeComm	(0XB0103BEC,	"format");
	MakeCode	(x=0XB0103BEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103BF4,	"expression");
	MakeCode	(x=0XB0103BF4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103BF8,	"file");
	MakeCode	(x=0XB0103BF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103BFC,	"function");
	MakeCode	(x=0XB0103BFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103C00,	"line");
	MakeCode	(0XB0103C10);
	MakeComm	(0XB0103C14,	"format");
	MakeCode	(x=0XB0103C14);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103C18);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeComm	(0XB0103C2C,	"expression");
	MakeCode	(x=0XB0103C2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103C30,	"file");
	MakeCode	(x=0XB0103C30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103C34,	"function");
	MakeCode	(x=0XB0103C34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103C38,	"line");
	MakeDword	(x=0XB0103C44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103C48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103C4C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103C50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103C54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103C58);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinB		(0XB0103C5C,	0,	"end asynch.c");
	ExtLinB		(0XB0103C5C,	1,	"");
	ExtLinB		(0XB0103C5C,	2,	"");
	MakeDword	(x=0XB0103C5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0103C60,	0,	"");
	ExtLinA		(0XB0103C60,	1,	"libs/iguana/src/cap.c");
	ExtLinA		(0XB0103C60,	2,	"note: the code differs a little here from 1.4.1.1.");
	ExtLinA		(0XB0103C60,	3,	"");
	ExtLinA		(0XB0103C60,	4,	"");
	ExtLinA		(0XB0103C60,	5,	"This version of __cap_init is simpler than the one in okl4 1.4.1.1.");
	ExtLinA		(0XB0103C60,	6,	"");
	MakeCode	(0XB0103C60);
	MakeName	(0XB0103C60,	"__cap_init");
	MakeComm	(0XB0103C68,	"key");
	MakeCode	(x=0XB0103C68);
	OpEnumEx		(x,	1,	GetEnum("$2D35F4AC89C217003598D3D05A903541"),0);
	MakeComm	(0XB0103C74,	"key");
	MakeCode	(x=0XB0103C74);
	OpEnumEx		(x,	1,	GetEnum("$2D35F4AC89C217003598D3D05A903541"),0);
	MakeRptCmt	(0XB0103C7C,	"__cap_init inlined here");
	MakeCode	(x=0XB0103C84);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103C90);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103C94,	"dl");
	MakeCode	(x=0XB0103C94);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103CA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103CA8);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0103CB0);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeCode	(x=0XB0103CB4);
	OpStroffEx	(x,	1,	GetStrucIdByName("mutex"),	0);
	MakeComm	(0XB0103CBC,	"dl");
	MakeCode	(x=0XB0103CBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103CC0,	"payload");
	MakeRptCmt	(0XB0103CC4,	"clist_list_create_back inlined");
	MakeCode	(x=0XB0103CD4);
	OpStroffEx	(x,	1,	GetStrucIdByName("clist"),	0);
	MakeCode	(x=0XB0103CD8);
	OpStroffEx	(x,	1,	GetStrucIdByName("clist"),	0);
	MakeCode	(x=0XB0103CDC);
	OpStroffEx	(x,	1,	GetStrucIdByName("clist"),	0);
	MakeCode	(x=0XB0103CE0);
	OpStroffEx	(x,	1,	GetStrucIdByName("clist"),	0);
	MakeDword	(x=0XB0103CE8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103CEC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103CF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0103CF0,	"dl");
	MakeDword	(x=0XB0103CF4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103CF8);
	MakeName	(0XB0103CF8,	"iguana_cap_set");
	MakeCode	(x=0XB0103D18);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103D1C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103D20);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103D28,	"mutex_t");
	MakeCode	(x=0XB0103D28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103D34);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0103D48);
	MakeDword	(x=0XB0103D50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103D54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103D58);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103D5C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103D60);
	MakeName	(0XB0103D60,	"iguana_cap_get_slot");
	MakeCode	(x=0XB0103D64);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103D98,	"mutex_t");
	MakeCode	(x=0XB0103D98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0103DA0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0103DA4,	"last");
	MakeRptCmt	(0XB0103DA8,	"note: offsets differ from 1.4.1.1 here\ndata_size");
	MakeCode	(x=0XB0103DA8);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0103DAC,	"cap_free");
	MakeRptCmt	(0XB0103DC4,	"cap_free ++");
	MakeComm	(0XB0103DD4,	"mutex_t");
	MakeCode	(x=0XB0103DD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0103DE0);
	MakeComm	(0XB0103DE8,	"expression");
	MakeCode	(x=0XB0103DE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103DEC,	"file");
	MakeCode	(x=0XB0103DEC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103DF0,	"function");
	MakeCode	(x=0XB0103DF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103DF4,	"line");
	MakeComm	(0XB0103E00,	"create_new_clist inlined here");
	MakeCode	(0XB0103E00);
	MakeComm	(0XB0103E14,	"size");
	MakeCode	(x=0XB0103E14);
	OpStkvar	(x,	1);
	MakeComm	(0XB0103E18,	"base");
	MakeCode	(x=0XB0103E1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103E20);
	OpStkvar	(x,	1);
	MakeComm	(0XB0103E38,	"ll");
	MakeCode	(x=0XB0103E40);
	OpStkvar	(x,	1);
	MakeCode	(0XB0103E4C);
	MakeComm	(0XB0103E50,	"clist");
	MakeCode	(x=0XB0103E50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103E74);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103E7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103E80);
	OpStkvar	(x,	1);
	MakeComm	(0XB0103E9C,	"ll");
	MakeCode	(0XB0103E9C);
	MakeCode	(x=0XB0103EA4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0103EA8,	"iguana_memsection_delete inlined here");
	MakeComm	(0XB0103EB0,	"to");
	MakeCode	(x=0XB0103EB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103ED8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103EDC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103EE8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103EEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103EF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103EF4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0103EFC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0103F00);
	OpHex		(x,	1);
	MakeComm	(0XB0103F08,	"tag");
	MakeComm	(0XB0103F0C,	"from");
	MakeCode	(x=0XB0103F0C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0103F10,	"FromSpecifier");
	MakeCode	(x=0XB0103F14);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0103F30);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103F34);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103F38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103F3C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103F40);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103F44);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0103F48);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0103F4C);
	MakeName	(0XB0103F4C,	"lookup_clist");
	MakeCode	(x=0XB0103F50);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103F58,	"mutex_t");
	MakeCode	(x=0XB0103F58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103FBC,	"mutex_t");
	MakeCode	(x=0XB0103FBC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103FC4,	"line");
	MakeComm	(0XB0103FCC,	"expression");
	MakeCode	(x=0XB0103FCC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103FD0,	"file");
	MakeCode	(x=0XB0103FD0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103FD4,	"function");
	MakeCode	(x=0XB0103FD4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0103FF0,	"mutex_t");
	MakeCode	(x=0XB0103FF0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB010400C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104010);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104014);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104018);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010401C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104020);
	MakeName	(0XB0104020,	"iguana_cap_free_slot");
	MakeComm	(0XB0104030,	"mutex_t");
	MakeCode	(x=0XB0104030);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0104064);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010407C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0104088);
	MakeComm	(0XB0104094,	"slot");
	MakeComm	(0XB0104098,	"clist");
	MakeComm	(0XB01040A0,	"memsect");
	MakeComm	(0XB01040A8,	"ll");
	MakeDword	(x=0XB01040B4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01040B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB01040BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB01040BC,	"iguana_get_cap");
	MakeComm	(0XB01040C8,	"mutex_t");
	MakeCode	(x=0XB01040C8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01040DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01040E0,	"first");
	MakeRptCmt	(0XB01040E4,	"next");
	MakeRptCmt	(0XB01040F4,	"data size");
	MakeRptCmt	(0XB0104138,	"IS_VALID_CAP");
	MakeComm	(0XB0104150,	"mutex_t");
	MakeCode	(x=0XB0104150);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0104164);
	MakeCode	(0XB010416C);
	MakeDword	(x=0XB0104174);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104178);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010417C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeComm	(0XB0104180,	"r0/r1 = cap_t cap, r2 = object");
	MakeCode	(0XB0104180);
	MakeName	(0XB0104180,	"cap_matches");
	MakeCode	(0XB01041A0);
	MakeCode	(0XB01041AC);
	MakeName	(0XB01041AC,	"iguana_get_clist");
	MakeCode	(x=0XB01041B0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01041B4,	"mutex_t");
	MakeCode	(x=0XB01041BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01041C0,	"mutex_t");
	MakeDword	(x=0XB01041D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01041D8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01041DC);
	MakeName	(0XB01041DC,	"cap_clist_list_delete");
	MakeCode	(x=0XB01041E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01041E8,	"mutex_t");
	MakeComm	(0XB01041F0,	"ll");
	ExtLinB		(0XB0104204,	0,	"end of cap.c");
	ExtLinB		(0XB0104204,	1,	"");
	MakeDword	(x=0XB0104204);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0104208,	0,	"");
	ExtLinA		(0XB0104208,	1,	"libs/iguana/src/memsection.c");
	MakeCode	(0XB0104208);
	MakeName	(0XB0104208,	"_cap_memsection_create");
	MakeCode	(x=0XB010420C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104228,	"iguana_pd_create_memsection inlined here");
	MakeCode	(x=0XB0104264);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104268);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104270);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104278);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010427C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104284);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104288);
	OpHex		(x,	1);
	MakeComm	(0XB0104290,	"tag");
	MakeComm	(0XB0104294,	"from");
	MakeComm	(0XB0104298,	"to");
	MakeComm	(0XB010429C,	"FromSpecifier");
	MakeCode	(x=0XB01042A0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01042D0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeComm	(0XB01042D4,	"ret_base");
	MakeCode	(0XB01042D4);
	MakeName	(0XB01042D4,	"memsection_create");
	MakeComm	(0XB01042DC,	"pool");
	MakeComm	(0XB01042E8,	"size");
	MakeComm	(0XB01042EC,	"base");
	MakeComm	(0XB01042F0,	"flags");
	MakeCode	(x=0XB01042F4);
	OpStkvar	(x,	1);
	MakeComm	(0XB0104304,	"ret_base");
	MakeCode	(0XB0104304);
	MakeName	(0XB0104304,	"memsection_create_with_pool");
	MakeComm	(0XB010430C,	"pool");
	MakeComm	(0XB0104318,	"size");
	MakeComm	(0XB010431C,	"base");
	MakeComm	(0XB0104320,	"flags");
	MakeCode	(x=0XB0104324);
	OpStkvar	(x,	1);
	MakeComm	(0XB0104334,	"ret_base");
	MakeCode	(0XB0104334);
	MakeName	(0XB0104334,	"memsection_create_user");
	MakeComm	(0XB010433C,	"pool");
	MakeComm	(0XB0104348,	"size");
	MakeComm	(0XB010434C,	"base");
	MakeComm	(0XB0104350,	"flags");
	MakeCode	(x=0XB0104354);
	OpStkvar	(x,	1);
	MakeCode	(0XB0104364);
	MakeName	(0XB0104364,	"memsection_create_fixed");
	MakeComm	(0XB010436C,	"pool");
	MakeCode	(x=0XB0104378);
	OpStkvar	(x,	1);
	MakeComm	(0XB010437C,	"size");
	MakeComm	(0XB0104380,	"base");
	MakeComm	(0XB0104384,	"flags");
	MakeCode	(x=0XB0104388);
	OpStkvar	(x,	1);
	MakeCode	(0XB0104398);
	MakeName	(0XB0104398,	"memsection_create_fixed_user");
	MakeComm	(0XB01043A0,	"pool");
	MakeCode	(x=0XB01043AC);
	OpStkvar	(x,	1);
	MakeComm	(0XB01043B0,	"size");
	MakeComm	(0XB01043B4,	"base");
	MakeComm	(0XB01043B8,	"flags");
	MakeCode	(x=0XB01043BC);
	OpStkvar	(x,	1);
	MakeCode	(0XB01043CC);
	MakeName	(0XB01043CC,	"memsection_register_server");
	MakeCode	(x=0XB01043D0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01043D4,	"iguana_memsection_register_server inlined here");
	MakeCode	(x=0XB0104408);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010440C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104418);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104420);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104424);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104430);
	OpHex		(x,	1);
	MakeComm	(0XB0104438,	"to");
	MakeComm	(0XB010443C,	"from");
	MakeComm	(0XB0104440,	"tag");
	MakeComm	(0XB0104444,	"FromSpecifier");
	MakeCode	(x=0XB0104448);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0104464);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104468);
	MakeName	(0XB0104468,	"memsection_lookup");
	MakeCode	(x=0XB010446C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104470,	"iguana_memsection_lookup inlined here");
	MakeCode	(x=0XB01044A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01044A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01044B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01044B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01044BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01044C4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01044C8);
	OpHex		(x,	1);
	MakeComm	(0XB01044D0,	"to");
	MakeComm	(0XB01044D8,	"tag");
	MakeComm	(0XB01044DC,	"from");
	MakeComm	(0XB01044E0,	"FromSpecifier");
	MakeCode	(x=0XB01044E4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0104508);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010450C);
	MakeName	(0XB010450C,	"memsection_delete");
	MakeComm	(0XB0104518,	"mutex_t");
	MakeCode	(x=0XB0104518);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104520,	"memsection");
	MakeCode	(x=0XB0104520);
	OpHex		(x,	1);
	MakeCode	(x=0XB010452C);
	OpHex		(x,	1);
	MakeComm	(0XB0104560,	"expression");
	MakeCode	(x=0XB0104560);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104564,	"file");
	MakeCode	(x=0XB0104564);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104568,	"function");
	MakeCode	(x=0XB0104568);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010456C,	"line");
	MakeCode	(x=0XB0104578);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB010457C,	"iguana_memsection_delete inlined here");
	MakeComm	(0XB0104584,	"to");
	MakeCode	(x=0XB01045A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01045AC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01045B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01045BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01045C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01045C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01045CC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01045D0);
	OpHex		(x,	1);
	MakeComm	(0XB01045D8,	"FromSpecifier");
	MakeComm	(0XB01045DC,	"from");
	MakeComm	(0XB01045E0,	"tag");
	MakeCode	(x=0XB01045E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010461C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104634,	"mutex_t");
	MakeCode	(x=0XB0104634);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104644,	"line");
	MakeCode	(0XB0104644);
	MakeComm	(0XB0104648,	"expression");
	MakeCode	(x=0XB0104648);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB010464C,	"file");
	MakeCode	(x=0XB010464C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104650,	"function");
	MakeCode	(x=0XB0104650);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB0104660);
	MakeComm	(0XB010466C,	"clist");
	MakeComm	(0XB0104670,	"slot");
	MakeComm	(0XB0104678,	"memsect");
	MakeComm	(0XB0104680,	"list");
	MakeDword	(x=0XB010468C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104690);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104694);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104698);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010469C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01046A0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01046A4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01046A8);
	MakeName	(0XB01046A8,	"memsection_set_attributes");
	MakeCode	(x=0XB01046AC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01046B0,	"iguana_memsection_set_attributes inlined here");
	MakeCode	(x=0XB01046E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01046EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01046F4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01046FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104700);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104708);
	OpHex		(x,	1);
	MakeCode	(x=0XB010470C);
	OpHex		(x,	1);
	MakeComm	(0XB0104714,	"to");
	MakeComm	(0XB0104718,	"from");
	MakeComm	(0XB010471C,	"tag");
	MakeComm	(0XB0104720,	"FromSpecifier");
	MakeCode	(x=0XB0104724);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB010473C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104740);
	MakeName	(0XB0104740,	"memsection_base");
	MakeCode	(x=0XB0104744);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104748,	"iguana_memsection_set_attributes inlined here");
	MakeCode	(x=0XB010477C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104780);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104788);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104790);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104794);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010479C);
	OpHex		(x,	1);
	MakeCode	(x=0XB01047A0);
	OpHex		(x,	1);
	MakeComm	(0XB01047A8,	"to");
	MakeComm	(0XB01047AC,	"from");
	MakeComm	(0XB01047B0,	"tag");
	MakeComm	(0XB01047B4,	"FromSpecifier");
	MakeCode	(x=0XB01047B8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01047D4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01047D8);
	MakeName	(0XB01047D8,	"memsection_size");
	MakeCode	(x=0XB01047DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01047E0,	"iguana_memsection_info is inlined here");
	MakeCode	(x=0XB0104814);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104818);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104820);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104828);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010482C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104834);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104838);
	OpHex		(x,	1);
	MakeComm	(0XB0104840,	"to");
	MakeComm	(0XB0104844,	"from");
	MakeComm	(0XB0104848,	"tag");
	MakeComm	(0XB010484C,	"FromSpecifier");
	MakeCode	(x=0XB0104850);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB010486C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104870);
	MakeName	(0XB0104870,	"memsection_page_map");
	MakeCode	(x=0XB0104874);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104878,	"iguana_memsection_page_map inlined here");
	MakeRptCmt	(0XB0104884,	"note: this is \"7\" in 1.4.1.1, not 5.");
	MakeCode	(x=0XB01048B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01048B8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01048C0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01048C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01048CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01048D4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01048D8);
	OpHex		(x,	1);
	MakeComm	(0XB01048E0,	"to");
	MakeComm	(0XB01048E4,	"from");
	MakeComm	(0XB01048E8,	"tag");
	MakeComm	(0XB01048EC,	"FromSpecifier");
	MakeCode	(x=0XB01048F0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB010490C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104910);
	MakeName	(0XB0104910,	"memsection_page_unmap");
	MakeCode	(x=0XB0104914);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104918,	"iguana_memsection_page_unmap inlined here");
	MakeRptCmt	(0XB0104924,	"note: this is 8 in 1.4.1.1, not 6.");
	MakeCode	(x=0XB0104950);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104954);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010495C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104964);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104968);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104970);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104974);
	OpHex		(x,	1);
	MakeComm	(0XB010497C,	"to");
	MakeComm	(0XB0104980,	"from");
	MakeComm	(0XB0104984,	"tag");
	MakeComm	(0XB0104988,	"FromSpecifier");
	MakeCode	(x=0XB010498C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01049A8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01049AC);
	MakeName	(0XB01049AC,	"memsection_back_range");
	MakeComm	(0XB01049D8,	"memsect");
	MakeComm	(0XB0104A00,	"memsect");
	MakeComm	(0XB0104A0C,	"memsect");
	MakeComm	(0XB0104A2C,	"size");
	MakeComm	(0XB0104A30,	"base");
	MakeCode	(x=0XB0104A38);
	OpStkvar	(x,	1);
	MakeComm	(0XB0104A5C,	"addr");
	MakeComm	(0XB0104A60,	"base");
	MakeComm	(0XB0104A64,	"end");
	MakeCode	(x=0XB0104A70);
	OpStkvar	(x,	1);
	MakeComm	(0XB0104A74,	"addr");
	MakeComm	(0XB0104A78,	"end");
	MakeComm	(0XB0104A7C,	"base");
	MakeCode	(x=0XB0104A88);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104A98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104AAC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104B00);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104B04);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104B0C);
	OpHex		(x,	1);
	MakeComm	(0XB0104B10,	"from_page");
	MakeComm	(0XB0104B14,	"to_page");
	MakeComm	(0XB0104B18,	"memsect");
	MakeCode	(x=0XB0104B2C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104B4C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104B58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104B6C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104BC0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104BC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104BCC);
	OpHex		(x,	1);
	MakeComm	(0XB0104BD0,	"from_page");
	MakeComm	(0XB0104BD4,	"to_page");
	MakeComm	(0XB0104BD8,	"memsect");
	MakeComm	(0XB0104BF0,	"line");
	MakeCode	(0XB0104BF0);
	MakeComm	(0XB0104BF8,	"file");
	MakeCode	(x=0XB0104BF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104BFC,	"function");
	MakeCode	(x=0XB0104BFC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C00,	"expression");
	MakeCode	(x=0XB0104C00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C20,	"line");
	MakeComm	(0XB0104C28,	"expression");
	MakeCode	(x=0XB0104C28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C2C,	"file");
	MakeCode	(x=0XB0104C2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C30,	"function");
	MakeCode	(x=0XB0104C30);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C3C,	"line");
	MakeCode	(0XB0104C3C);
	MakeComm	(0XB0104C44,	"expression");
	MakeCode	(x=0XB0104C44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C48,	"file");
	MakeCode	(x=0XB0104C48);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C4C,	"function");
	MakeCode	(x=0XB0104C4C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C58,	"expression");
	MakeCode	(x=0XB0104C58);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C5C,	"file");
	MakeCode	(x=0XB0104C5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C60,	"function");
	MakeCode	(x=0XB0104C60);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104C64,	"line");
	MakeDword	(x=0XB0104C70);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104C74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104C78);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104C7C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104C80);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinB		(0XB0104C84,	0,	"end memsection.c");
	ExtLinB		(0XB0104C84,	1,	"");
	MakeDword	(x=0XB0104C84);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0104C88,	0,	"");
	ExtLinA		(0XB0104C88,	1,	"");
	ExtLinA		(0XB0104C88,	2,	"libs/iguana/src/object.c");
	MakeCode	(0XB0104C88);
	MakeName	(0XB0104C88,	"object_get_interface");
	MakeComm	(0XB0104C90,	"sz");
	MakeComm	(0XB0104C9C,	"server_tid");
	MakeComm	(0XB0104CA0,	"object");
	MakeRptCmt	(0XB0104CAC,	"store obj, point r1 at server");
	MakeCode	(x=0XB0104CAC);
	OpStroffEx	(x,	1,	GetStrucIdByName("object_t"),	0);
	MakeCode	(x=0XB0104CB4);
	OpStroffEx	(x,	1,	GetStrucIdByName("object_t"),	0);
	MakeCode	(0XB0104CC4);
	MakeName	(0XB0104CC4,	"object_get_async_interface");
	MakeComm	(0XB0104CD0,	"base");
	MakeComm	(0XB0104CD8,	"size = PAGESIZE");
	MakeCode	(x=0XB0104CE0);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0104CE4,	"PAGESIZE / 2");
	MakeComm	(0XB0104CE8,	"size");
	MakeComm	(0XB0104CEC,	"mem");
	MakeRptCmt	(0XB0104CF4,	"PAGESIZE / 2");
	MakeCode	(x=0XB0104CF8);
	OpStroffEx	(x,	1,	GetStrucIdByName("object_t"),	0);
	MakeComm	(0XB0104CFC,	"mem");
	MakeCode	(x=0XB0104CFC);
	OpHex		(x,	1);
	MakeComm	(0XB0104D04,	"call_buf");
	MakeCode	(x=0XB0104D08);
	OpStroffEx	(x,	1,	GetStrucIdByName("object_t"),	0);
	MakeComm	(0XB0104D0C,	"return_buf");
	MakeCode	(x=0XB0104D0C);
	OpHex		(x,	1);
	MakeComm	(0XB0104D10,	"session");
	MakeCode	(x=0XB0104D10);
	OpStroffEx	(x,	1,	GetStrucIdByName("object_t"),	0);
	MakeCode	(0XB0104D24);
	MakeName	(0XB0104D24,	"object_print");
	MakeCode	(x=0XB0104D28);
	OpStroffEx	(x,	1,	GetStrucIdByName("object_t"),	0);
	MakeCode	(x=0XB0104D2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104D30,	"object");
	MakeDword	(x=0XB0104D38);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0104D3C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0104D3C,	"iguana_getenv");
	MakeRptCmt	(0XB0104D40,	"key");
	MakeCode	(x=0XB0104D40);
	OpStroffEx	(x,	1,	GetStrucIdByName("obj_env_t"),	0);
	MakeRptCmt	(0XB0104D58,	"next object, fetch key");
	MakeCode	(x=0XB0104D6C);
	OpStroffEx	(x,	1,	GetStrucIdByName("obj_env_t"),	0);
	ExtLinB		(0XB0104D74,	0,	"end object.c");
	ExtLinB		(0XB0104D74,	1,	"");
	MakeDword	(x=0XB0104D74);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0104D78,	0,	"");
	ExtLinA		(0XB0104D78,	1,	"");
	ExtLinA		(0XB0104D78,	2,	"libs/iguana/src/pd.c");
	MakeCode	(0XB0104D78);
	MakeName	(0XB0104D78,	"pd_myself");
	MakeCode	(x=0XB0104D7C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104DA8,	"iguana_pd_mypd inlined here");
	MakeCode	(0XB0104DA8);
	MakeCode	(x=0XB0104DAC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0104DB4,	"to");
	MakeCode	(x=0XB0104DC8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104DCC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104DD8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104DE0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104DE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104DEC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104DF0);
	OpHex		(x,	1);
	MakeComm	(0XB0104DF8,	"tag");
	MakeComm	(0XB0104DFC,	"FromSpecifier");
	MakeCode	(x=0XB0104E00);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0104E1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0104E20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104E24);
	MakeName	(0XB0104E24,	"pd_create");
	MakeCode	(x=0XB0104E28);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104E38,	"iguana_pd_create_pd inlined here");
	MakeCode	(x=0XB0104E64);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104E68);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104E70);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104E78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104E7C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104E84);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104E88);
	OpHex		(x,	1);
	MakeComm	(0XB0104E90,	"to");
	MakeComm	(0XB0104E94,	"from");
	MakeComm	(0XB0104E98,	"tag");
	MakeComm	(0XB0104E9C,	"FromSpecifier");
	MakeCode	(x=0XB0104EA0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0104EBC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104EC0);
	MakeName	(0XB0104EC0,	"pd_create_pd");
	MakeCode	(x=0XB0104EC4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104EC8,	"iguana_pd_create_pd inlined here");
	MakeCode	(x=0XB0104EFC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104F00);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104F08);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104F10);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104F14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104F1C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104F20);
	OpHex		(x,	1);
	MakeComm	(0XB0104F28,	"to");
	MakeComm	(0XB0104F2C,	"from");
	MakeComm	(0XB0104F30,	"tag");
	MakeComm	(0XB0104F34,	"FromSpecifier");
	MakeCode	(x=0XB0104F38);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0104F54);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104F58);
	MakeName	(0XB0104F58,	"pd_create_restricted");
	MakeCode	(x=0XB0104F5C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104F6C,	"iguana_pd_create_restricted_pd inlined here");
	MakeCode	(x=0XB0104F98);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104F9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104FA4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104FAC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104FB0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0104FB8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0104FBC);
	OpHex		(x,	1);
	MakeComm	(0XB0104FC4,	"to");
	MakeComm	(0XB0104FC8,	"from");
	MakeComm	(0XB0104FCC,	"tag");
	MakeComm	(0XB0104FD0,	"FromSpecifier");
	MakeCode	(x=0XB0104FD4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0104FF0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0104FF4);
	MakeName	(0XB0104FF4,	"pd_create_restricted_in_pd");
	MakeCode	(x=0XB0104FF8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0104FFC,	"iguana_pd_create_restricted_pd inlined here");
	MakeCode	(x=0XB0105030);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105034);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010503C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105044);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105048);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105050);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105054);
	OpHex		(x,	1);
	MakeComm	(0XB010505C,	"to");
	MakeComm	(0XB0105060,	"from");
	MakeComm	(0XB0105064,	"tag");
	MakeComm	(0XB0105068,	"FromSpecifier");
	MakeCode	(x=0XB010506C);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105088);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010508C);
	MakeName	(0XB010508C,	"pd_delete");
	MakeCode	(x=0XB0105090);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105094,	"iguana_pd_delete inlined here");
	MakeComm	(0XB010509C,	"FromSpecifier");
	MakeCode	(x=0XB01050C8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01050CC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01050D4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01050DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01050E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01050E8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01050EC);
	OpHex		(x,	1);
	MakeComm	(0XB01050F4,	"to");
	MakeComm	(0XB01050F8,	"from");
	MakeComm	(0XB01050FC,	"tag");
	MakeCode	(x=0XB0105100);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105118);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010511C);
	MakeName	(0XB010511C,	"pd_create_thread");
	MakeCode	(x=0XB0105120);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105124,	"iguana_pd_create_thread inlined here");
	MakeCode	(x=0XB0105160);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105164);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010516C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105174);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105178);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105180);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105184);
	OpHex		(x,	1);
	MakeComm	(0XB0105190,	"tag");
	MakeComm	(0XB0105194,	"from");
	MakeComm	(0XB0105198,	"to");
	MakeComm	(0XB010519C,	"FromSpecifier");
	MakeCode	(x=0XB01051A0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01051C4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01051C8);
	MakeName	(0XB01051C8,	"pd_create_thread_with_priority");
	MakeCode	(x=0XB01051CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01051D0,	"iguana_pd_create_thread inlined here");
	MakeCode	(x=0XB0105208);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010520C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105214);
	OpHex		(x,	1);
	MakeCode	(x=0XB010521C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105220);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105228);
	OpHex		(x,	1);
	MakeCode	(x=0XB010522C);
	OpHex		(x,	1);
	MakeComm	(0XB0105238,	"from");
	MakeComm	(0XB010523C,	"tag");
	MakeComm	(0XB0105240,	"to");
	MakeComm	(0XB0105244,	"FromSpecifier");
	MakeCode	(x=0XB0105248);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB010526C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105270);
	MakeName	(0XB0105270,	"_pd_create_memsection");
	MakeCode	(x=0XB0105278);
	OpHex		(x,	1);
	MakeCode	(x=0XB010527C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0105280);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105284,	"mutex_t");
	MakeCode	(x=0XB0105284);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0105298);
	OpHex		(x,	1);
	MakeCode	(x=0XB01052A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01052AC);
	OpHex		(x,	1);
	MakeRptCmt	(0XB01052B0,	"note: in 1.4.1.1 this is call=1,count=7, not ocunt=6");
	MakeCode	(x=0XB01052B8);
	OpHex		(x,	1);
	MakeComm	(0XB01052CC,	"mutex_t");
	MakeCode	(x=0XB01052CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01052E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01052E4,	"iguana_pd_create_memsection inlined here");
	MakeComm	(0XB01052EC,	"to");
	MakeCode	(x=0XB01052F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01052F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105320);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105324);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105330);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105334);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105338);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010533C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105344);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105348);
	OpHex		(x,	1);
	MakeComm	(0XB0105350,	"tag");
	MakeComm	(0XB0105354,	"FromSpecifier");
	MakeCode	(x=0XB0105358);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010536C);
	OpStkvar	(x,	1);
	MakeComm	(0XB01053A0,	"slot");
	MakeComm	(0XB01053A4,	"cap");
	MakeCode	(0XB01053B0);
	MakeDword	(x=0XB01053B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01053BC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB01053C0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB01053C4);
	OpStkvar	(x,	1);
	MakeName	(0XB01053C4,	"pd_create_memsection");
	MakeComm	(0XB01053C8,	"pool");
	MakeCode	(x=0XB01053CC);
	OpStkvar	(x,	1);
	MakeComm	(0XB01053D0,	"flags");
	MakeComm	(0XB01053D4,	"base");
	MakeCode	(x=0XB01053E4);
	OpStkvar	(x,	1);
	MakeName	(0XB01053E4,	"pd_create_memsection_user");
	MakeComm	(0XB01053E8,	"pool");
	MakeCode	(x=0XB01053EC);
	OpStkvar	(x,	1);
	MakeComm	(0XB01053F0,	"flags");
	MakeComm	(0XB01053F4,	"base");
	MakeCode	(x=0XB0105404);
	OpStkvar	(x,	1);
	MakeName	(0XB0105404,	"pd_create_memsection_fixed_user");
	MakeComm	(0XB0105408,	"pool");
	MakeCode	(x=0XB010540C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105410,	"flags");
	MakeCode	(x=0XB0105414);
	OpStkvar	(x,	1);
	MakeCode	(0XB0105424);
	MakeName	(0XB0105424,	"pd_set_callback");
	MakeCode	(x=0XB0105428);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB010542C,	"iguana_pd_set_callback inlined here");
	MakeCode	(x=0XB0105464);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105468);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105470);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105478);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010547C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105484);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105488);
	OpHex		(x,	1);
	MakeComm	(0XB0105490,	"to");
	MakeComm	(0XB0105494,	"from");
	MakeComm	(0XB0105498,	"tag");
	MakeComm	(0XB010549C,	"FromSpecifier");
	MakeCode	(x=0XB01054A0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01054B8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01054BC);
	MakeName	(0XB01054BC,	"pd_add_clist");
	MakeCode	(x=0XB01054C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01054C4,	"iguana_pd_add_clist inlined here");
	MakeCode	(x=0XB01054FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105500);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105508);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105510);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105514);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010551C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105520);
	OpHex		(x,	1);
	MakeComm	(0XB0105528,	"to");
	MakeComm	(0XB010552C,	"from");
	MakeComm	(0XB0105530,	"tag");
	MakeComm	(0XB0105534,	"FromSpecifier");
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_1(void) {
        auto x;
#define id x

	MakeCode	(x=0XB0105538);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105554);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105558);
	MakeName	(0XB0105558,	"pd_release_clist");
	MakeCode	(x=0XB010555C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105560,	"iguana_pd_release_clist inlined here");
	MakeCode	(x=0XB010559C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01055A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01055A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01055B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01055B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01055BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01055C0);
	OpHex		(x,	1);
	MakeComm	(0XB01055C8,	"to");
	MakeComm	(0XB01055CC,	"from");
	MakeComm	(0XB01055D0,	"tag");
	MakeComm	(0XB01055D4,	"FromSpecifier");
	MakeCode	(x=0XB01055D8);
	OpStkvar	(x,	1);
	ExtLinB		(0XB01055F0,	0,	"end libs/iguana/src/pd.c");
	ExtLinB		(0XB01055F0,	1,	"");
	MakeDword	(x=0XB01055F0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB01055F4,	0,	"");
	ExtLinA		(0XB01055F4,	1,	"libs/iguana/src/session.c");
	MakeCode	(0XB01055F4);
	MakeName	(0XB01055F4,	"_session_create");
	MakeCode	(x=0XB0105608);
	OpEnumEx		(x,	1,	GetEnum("$4C9FBA176E1F8D80F8E673A01B13DE92"),0);
	MakeCode	(x=0XB0105610);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105614,	"server");
	MakeCode	(x=0XB0105614);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105638);
	OpEnumEx		(x,	1,	GetEnum("$4C9FBA176E1F8D80F8E673A01B13DE92"),0);
	MakeCode	(x=0XB0105640);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105650,	"thread_myself inlined");
	MakeRptCmt	(0XB0105654,	"iguana_pd_create_session inlined here");
	MakeCode	(x=0XB010565C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010568C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105690);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010569C);
	OpHex		(x,	1);
	MakeCode	(x=0XB01056A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01056A4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01056A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01056B0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01056B4);
	OpHex		(x,	1);
	MakeComm	(0XB01056BC,	"tag");
	MakeComm	(0XB01056C0,	"from");
	MakeCode	(x=0XB01056C0);
	OpStkvar	(x,	1);
	MakeComm	(0XB01056C4,	"to");
	MakeComm	(0XB01056C8,	"FromSpecifier");
	MakeCode	(x=0XB01056CC);
	OpStkvar	(x,	1);
	MakeComm	(0XB01056F4,	"thrd");
	MakeCode	(x=0XB01056F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01056FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105700);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105704,	"ref");
	MakeCode	(x=0XB0105704);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeComm	(0XB0105708,	"memsect");
	MakeComm	(0XB0105714,	"memsect");
	MakeCode	(x=0XB0105720);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB0105724);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeDword	(x=0XB0105738);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB010573C);
	MakeName	(0XB010573C,	"session_create_with_clist");
	MakeComm	(0XB0105744,	"sz");
	MakeComm	(0XB0105754,	"clist");
	MakeComm	(0XB010575C,	"server_tid");
	MakeComm	(0XB0105760,	"object");
	MakeComm	(0XB0105764,	"session");
	MakeComm	(0XB0105784,	"mem");
	MakeCode	(0XB010578C);
	MakeCode	(0XB0105798);
	MakeName	(0XB0105798,	"session_create");
	MakeComm	(0XB01057AC,	"base");
	MakeComm	(0XB01057B4,	"server_tid");
	MakeComm	(0XB01057BC,	"clist");
	MakeComm	(0XB01057C0,	"object");
	MakeCode	(x=0XB01057DC);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(0XB01057F4);
	MakeCode	(0XB01057FC);
	MakeName	(0XB01057FC,	"session_create_full_share");
	MakeComm	(0XB0105808,	"slot");
	MakeComm	(0XB0105814,	"server");
	MakeComm	(0XB010581C,	"server_tid");
	MakeComm	(0XB0105820,	"clist");
	MakeComm	(0XB0105824,	"object");
	MakeCode	(0XB0105834);
	MakeName	(0XB0105834,	"session_add_async");
	MakeCode	(x=0XB0105838);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB010583C,	"iguana_session_add_buffer inlined here");
	MakeComm	(0XB010584C,	"to");
	MakeCode	(x=0XB010587C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105880);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105888);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105890);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105894);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010589C);
	OpHex		(x,	1);
	MakeCode	(x=0XB01058A0);
	OpHex		(x,	1);
	MakeComm	(0XB01058A8,	"tag");
	MakeComm	(0XB01058AC,	"from");
	MakeComm	(0XB01058B0,	"FromSpecifier");
	MakeCode	(x=0XB01058B4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01058CC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB01058D0);
	MakeName	(0XB01058D0,	"session_provide_access");
	MakeCode	(x=0XB01058E8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01058EC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01058F0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01058F8);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB01058FC);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(0XB0105924);
	MakeComm	(0XB0105930,	"expression");
	MakeCode	(x=0XB0105930);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0105934,	"file");
	MakeCode	(x=0XB0105934);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010593C);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB0105940);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeComm	(0XB010594C,	"function");
	MakeComm	(0XB0105950,	"line");
	MakeCode	(x=0XB0105954);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(0XB010595C);
	MakeCode	(0XB0105964);
	MakeDword	(x=0XB0105970);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0105974);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0105978);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010597C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105980);
	MakeName	(0XB0105980,	"session_unidentified1");
	MakeComm	(0XB0105994,	"interface");
	MakeComm	(0XB0105998,	"session");
	MakeComm	(0XB010599C,	"object");
	MakeCode	(0XB01059C0);
	MakeName	(0XB01059C0,	"session_revoke_access");
	MakeCode	(x=0XB01059C8);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB01059CC);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB01059D4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0105A0C);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB0105A18);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB0105A28);
	OpHex		(x,	1);
	MakeComm	(0XB0105A30,	"object");
	MakeComm	(0XB0105A34,	"cap");
	MakeComm	(0XB0105A38,	"interface");
	MakeComm	(0XB0105A4C,	"from");
	MakeCode	(x=0XB0105A4C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105A74,	"iguana_session_revoke inlined here");
	MakeRptCmt	(0XB0105A7C,	"ref");
	MakeCode	(x=0XB0105A7C);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeCode	(x=0XB0105A80);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0105A88,	"to");
	MakeCode	(x=0XB0105A94);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105A9C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105AB4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105AB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105AC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105AC8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105ACC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105AD0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105AD8);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105ADC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105AE4);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeComm	(0XB0105AE8,	"tag");
	MakeComm	(0XB0105AEC,	"FromSpecifier");
	MakeCode	(x=0XB0105AF0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105B04);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeDword	(x=0XB0105B1C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0105B20);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105B24);
	MakeName	(0XB0105B24,	"session_delete");
	MakeCode	(x=0XB0105B3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105B44);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105B48,	"iguana_session_delete inlined here");
	MakeComm	(0XB0105B50,	"to");
	MakeCode	(x=0XB0105B74);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105B78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105B84);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105B8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105B90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105B98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105B9C);
	OpHex		(x,	1);
	MakeComm	(0XB0105BA4,	"from");
	MakeComm	(0XB0105BA8,	"tag");
	MakeComm	(0XB0105BAC,	"FromSpecifier");
	MakeCode	(x=0XB0105BB0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105BBC,	"mem");
	MakeComm	(0XB0105BD0,	"object");
	MakeCode	(0XB0105BD0);
	ExtLinB		(0XB0105BE0,	0,	"end libs/iguana/src/session.c");
	ExtLinB		(0XB0105BE0,	1,	"");
	ExtLinB		(0XB0105BE0,	2,	"");
	MakeDword	(x=0XB0105BE0);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0105BE4,	0,	"Just like session_delete() but uses the current pager");
	ExtLinA		(0XB0105BE4,	1,	"instead of the iguana_pager variable.  Not present");
	ExtLinA		(0XB0105BE4,	2,	"in okl4 1.4.1.1");
	MakeCode	(0XB0105BE4);
	MakeName	(0XB0105BE4,	"session_delete_2");
	MakeComm	(0XB0105BE8,	"The start of this function is identical to session_delete(s);");
	MakeCode	(x=0XB0105BE8);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeComm	(0XB0105BF0,	"flags");
	MakeCode	(x=0XB0105C00);
	OpHex		(x,	1);
	MakeComm	(0XB0105C08,	"L4_PagerOf() inlined here");
	MakeCode	(x=0XB0105C0C);
	OpHex		(x,	1);
	MakeComm	(0XB0105C10,	"dest");
	MakeComm	(0XB0105C14,	"control = L4_ExReg_Deliver");
	MakeCode	(x=0XB0105C18);
	OpHex		(x,	1);
	MakeComm	(0XB0105C1C,	"sp");
	MakeComm	(0XB0105C20,	"ip");
	MakeRptCmt	(0XB0105C24,	"old_userDefHandle");
	MakeCode	(x=0XB0105C24);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C28,	"old_pager");
	MakeCode	(x=0XB0105C28);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C2C,	"old_control");
	MakeCode	(x=0XB0105C2C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C30,	"old_sp");
	MakeCode	(x=0XB0105C30);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C34,	"old_ip");
	MakeCode	(x=0XB0105C34);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C38,	"old_flags");
	MakeCode	(x=0XB0105C38);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C3C,	"flags = 0");
	MakeCode	(x=0XB0105C3C);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C40,	"userDefHandle = 0");
	MakeCode	(x=0XB0105C40);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C44,	"pager = 0");
	MakeCode	(x=0XB0105C44);
	OpHex		(x,	1);
	MakeRptCmt	(0XB0105C4C,	"ref");
	MakeCode	(x=0XB0105C4C);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	MakeRptCmt	(0XB0105C50,	"iguana_session_delete inlined here");
	MakeComm	(0XB0105C60,	"to");
	MakeCode	(x=0XB0105C60);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105C74);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105C78);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105C84);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105C8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105C90);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105C98);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105C9C);
	OpHex		(x,	1);
	MakeComm	(0XB0105CA4,	"tag");
	MakeComm	(0XB0105CA8,	"from");
	MakeCode	(x=0XB0105CA8);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105CAC,	"FromSpecifier");
	MakeCode	(x=0XB0105CB0);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105CC8,	"object");
	MakeCode	(x=0XB0105CC8);
	OpStroffEx	(x,	1,	GetStrucIdByName("session2"),	0);
	ExtLinA		(0XB0105CD8,	0,	"");
	ExtLinA		(0XB0105CD8,	1,	"");
	ExtLinA		(0XB0105CD8,	2,	"libs/iguana/src/setup.c");
	MakeCode	(x=0XB0105CD8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeName	(0XB0105CD8,	"__lib_iguana_init_env");
	MakeDword	(x=0XB0105CE4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105CE8);
	MakeName	(0XB0105CE8,	"__lib_iguana_init_pager");
	MakeComm	(0XB0105CEC,	"L4_Pager is inlined here");
	MakeComm	(0XB0105CF4,	"flags");
	MakeComm	(0XB0105CFC,	"dest");
	MakeCode	(x=0XB0105D00);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105D04,	"sp");
	MakeComm	(0XB0105D08,	"ip");
	MakeCode	(x=0XB0105D0C);
	OpStkvar	(x,	1);
	MakeComm	(0XB0105D10,	"control");
	MakeCode	(x=0XB0105D14);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D18);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D1C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D20);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D24);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D28);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D2C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D30);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D34);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105D40);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeDword	(x=0XB0105D50);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(x=0XB0105D54);
	OpStkvar	(x,	1);
	MakeName	(0XB0105D54,	"__lib_iguana_init");
	MakeCode	(x=0XB0105D5C);
	OpStkvar	(x,	1);
	ExtLinB		(0XB0105D60,	0,	"end libs/iguana/src/setup.");
	ExtLinB		(0XB0105D60,	1,	"");
	ExtLinA		(0XB0105D64,	0,	"");
	ExtLinA		(0XB0105D64,	1,	"libs/iguana/src/thread.c");
	MakeCode	(0XB0105D64);
	MakeName	(0XB0105D64,	"thread_myself");
	MakeCode	(x=0XB0105D70);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105D74,	"L4_Myself inlined");
	MakeCode	(x=0XB0105D74);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeComm	(0XB0105D78,	"to");
	MakeRptCmt	(0XB0105D80,	"iguana_thread_id inlined here");
	MakeCode	(x=0XB0105DA0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105DA4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105DB0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105DB8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105DBC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105DC4);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105DC8);
	OpHex		(x,	1);
	MakeComm	(0XB0105DD0,	"tag");
	MakeComm	(0XB0105DD4,	"from");
	MakeComm	(0XB0105DD8,	"FromSpecifier");
	MakeCode	(x=0XB0105DDC);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105DF8);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105DFC);
	MakeName	(0XB0105DFC,	"thread_l4tid");
	MakeCode	(x=0XB0105E00);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105E04,	"iguana_thread_l4id inlined here");
	MakeCode	(x=0XB0105E38);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105E3C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105E44);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105E4C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105E50);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105E58);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105E5C);
	OpHex		(x,	1);
	MakeComm	(0XB0105E64,	"to");
	MakeComm	(0XB0105E68,	"from");
	MakeComm	(0XB0105E6C,	"tag");
	MakeComm	(0XB0105E70,	"FromSpecifier");
	MakeCode	(x=0XB0105E74);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105E90);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105E94);
	MakeName	(0XB0105E94,	"thread_id");
	MakeCode	(x=0XB0105E98);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0105EA4,	"FromSpecifier");
	MakeCode	(x=0XB0105ECC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105ED0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105EDC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105EE4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105EE8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105EF0);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105EF4);
	OpHex		(x,	1);
	MakeComm	(0XB0105EFC,	"to");
	MakeComm	(0XB0105F00,	"from");
	MakeComm	(0XB0105F04,	"tag");
	MakeCode	(x=0XB0105F08);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105F24);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105F28);
	MakeName	(0XB0105F28,	"thread_create_priority");
	MakeCode	(x=0XB0105F2C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105F44,	"iguana_pd_create_thread inlined here");
	MakeCode	(x=0XB0105F74);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105F78);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105F80);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105F88);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105F8C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0105F94);
	OpHex		(x,	1);
	MakeCode	(x=0XB0105F98);
	OpHex		(x,	1);
	MakeComm	(0XB0105FA0,	"tag");
	MakeComm	(0XB0105FA4,	"from");
	MakeComm	(0XB0105FA8,	"to");
	MakeComm	(0XB0105FAC,	"FromSpecifier");
	MakeCode	(x=0XB0105FB0);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0105FD4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0105FD8);
	MakeName	(0XB0105FD8,	"thread_create");
	MakeCode	(0XB0105FE4);
	MakeName	(0XB0105FE4,	"thread_start");
	MakeCode	(x=0XB0105FE8);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB0105FEC,	"iguana_thread_start inlined here");
	MakeRptCmt	(0XB0105FF8,	"call=5 here, call=2 in okl4 1.4.1.1");
	MakeCode	(x=0XB0106028);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010602C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106034);
	OpHex		(x,	1);
	MakeCode	(x=0XB010603C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106040);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106048);
	OpHex		(x,	1);
	MakeCode	(x=0XB010604C);
	OpHex		(x,	1);
	MakeComm	(0XB0106054,	"to");
	MakeComm	(0XB0106058,	"from");
	MakeComm	(0XB010605C,	"tag");
	MakeComm	(0XB0106060,	"FromSpecifier");
	MakeCode	(x=0XB0106064);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB010607C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0106080);
	MakeName	(0XB0106080,	"thread_create_simple");
	MakeComm	(0XB0106090,	"size = STACK_SIZE");
	MakeComm	(0XB0106094,	"base");
	MakeCode	(x=0XB0106094);
	OpHex		(x,	1);
	MakeCode	(x=0XB01060BC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01060D4);
	OpStkvar	(x,	1);
	MakeComm	(0XB01060DC,	"ip");
	MakeCode	(x=0XB01060DC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01060E0,	"sp");
	MakeCode	(x=0XB01060E0);
	OpHex		(x,	1);
	MakeDword	(x=0XB01060F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB01060F4,	"ip");
	MakeCode	(0XB01060F8);
	MakeName	(0XB01060F8,	"thread_delete");
	MakeCode	(x=0XB0106104);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB010610C,	"iguana_thread_id inlined here");
	MakeCode	(x=0XB0106130);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106134);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106140);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106148);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010614C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106154);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106158);
	OpHex		(x,	1);
	MakeComm	(0XB0106160,	"tag");
	MakeComm	(0XB0106164,	"FromSpecifier");
	MakeComm	(0XB0106168,	"from");
	MakeCode	(x=0XB0106168);
	OpStkvar	(x,	1);
	MakeComm	(0XB010616C,	"to");
	MakeCode	(x=0XB0106170);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0106178,	"iguana_thread_id inlined here");
	MakeRptCmt	(0XB0106180,	"call=6 here, call=3 in okl4 1.4.1.1");
	MakeCode	(x=0XB010619C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01061A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01061A8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01061B0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01061B4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01061BC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01061C0);
	OpHex		(x,	1);
	MakeComm	(0XB01061C8,	"to");
	MakeComm	(0XB01061CC,	"from");
	MakeComm	(0XB01061D0,	"tag");
	MakeComm	(0XB01061D4,	"FromSpecifier");
	MakeCode	(x=0XB01061D8);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB01061F4);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB01061F8,	0,	"");
	ExtLinA		(0XB01061F8,	1,	"");
	ExtLinA		(0XB01061F8,	2,	"I'm not sure this functions purpose.  The RPC call");
	ExtLinA		(0XB01061F8,	3,	"numbers are different here and I cant line it up");
	ExtLinA		(0XB01061F8,	4,	"with a helper in thread.c");
	MakeCode	(0XB01061F8);
	MakeName	(0XB01061F8,	"thread_unidentified1");
	MakeRptCmt	(0XB01061FC,	"L4_PagerOf inlined here");
	MakeComm	(0XB0106208,	"flags");
	MakeCode	(x=0XB0106210);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106214);
	OpStkvar	(x,	1);
	MakeComm	(0XB0106220,	"dest");
	MakeComm	(0XB0106224,	"control = L4_ExReg_Deliver");
	MakeComm	(0XB0106228,	"sp");
	MakeComm	(0XB010622C,	"ip");
	MakeCode	(x=0XB0106230);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106234);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106238);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010623C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106240);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106244);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106248);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010624C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106250);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0106258,	"some iguana_thread_* function inlined here");
	MakeRptCmt	(0XB010625C,	"call=2, UUID=24 (iguana threads)");
	MakeComm	(0XB0106268,	"to");
	MakeCode	(x=0XB0106268);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106284);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106288);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106290);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106298);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010629C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01062A4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01062A8);
	OpHex		(x,	1);
	MakeComm	(0XB01062B0,	"tag");
	MakeComm	(0XB01062B4,	"from");
	MakeCode	(x=0XB01062B4);
	OpStkvar	(x,	1);
	MakeComm	(0XB01062B8,	"FromSpecifier");
	MakeCode	(x=0XB01062BC);
	OpStkvar	(x,	1);
	MakeCode	(0XB01062D4);
	MakeName	(0XB01062D4,	"thread_unidentified2");
	MakeRptCmt	(0XB01062D8,	"L4_PagerOf inlined here");
	MakeComm	(0XB01062E4,	"flags");
	MakeCode	(x=0XB01062EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01062F0);
	OpStkvar	(x,	1);
	MakeComm	(0XB01062F8,	"ip");
	MakeComm	(0XB01062FC,	"dest");
	MakeComm	(0XB0106300,	"control");
	MakeComm	(0XB0106304,	"sp");
	MakeCode	(x=0XB0106308);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010630C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106310);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106314);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106318);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010631C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106320);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106324);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106328);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0106330,	"some iguana_thread_* function inlined here");
	MakeRptCmt	(0XB0106334,	"call=3, uuid=24 (threads)");
	MakeComm	(0XB0106340,	"to");
	MakeCode	(x=0XB0106340);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106358);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010635C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106364);
	OpHex		(x,	1);
	MakeCode	(x=0XB010636C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106370);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106378);
	OpHex		(x,	1);
	MakeCode	(x=0XB010637C);
	OpHex		(x,	1);
	MakeComm	(0XB0106384,	"tag");
	MakeComm	(0XB0106388,	"from");
	MakeCode	(x=0XB0106388);
	OpStkvar	(x,	1);
	MakeComm	(0XB010638C,	"FromSpecifier");
	MakeCode	(x=0XB0106390);
	OpStkvar	(x,	1);
	MakeCode	(0XB01063AC);
	MakeName	(0XB01063AC,	"thread_unidentified3");
	MakeRptCmt	(0XB01063B0,	"L4_PagerOf inlined here");
	MakeComm	(0XB01063BC,	"flags");
	MakeCode	(x=0XB01063C4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063C8);
	OpStkvar	(x,	1);
	MakeComm	(0XB01063D0,	"ip");
	MakeComm	(0XB01063D4,	"dest");
	MakeComm	(0XB01063D8,	"control");
	MakeComm	(0XB01063DC,	"sp");
	MakeCode	(x=0XB01063E0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063E4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063E8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063F0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063F4);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063F8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01063FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106400);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB0106408,	"some iguana_thread_* function inlined here");
	MakeRptCmt	(0XB010640C,	"call=4, uuid=24 (threads)");
	MakeComm	(0XB0106418,	"to");
	MakeCode	(x=0XB0106418);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106430);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106434);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010643C);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106444);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106448);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106450);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106454);
	OpHex		(x,	1);
	MakeComm	(0XB010645C,	"tag");
	MakeComm	(0XB0106460,	"from");
	MakeCode	(x=0XB0106460);
	OpStkvar	(x,	1);
	MakeComm	(0XB0106464,	"FromSpecifier");
	MakeCode	(x=0XB0106468);
	OpStkvar	(x,	1);
	MakeComm	(0XB0106484,	"L4_Myself inlined");
	MakeCode	(0XB0106484);
	MakeName	(0XB0106484,	"thread_delete_self");
	MakeCode	(0XB0106494);
	MakeName	(0XB0106494,	"thread_unidentified4");
	MakeRptCmt	(0XB0106498,	"some iguana_thread_* function inlined here");
	MakeCode	(x=0XB01064A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01064A4,	"call=7, uuid=24 (threads)");
	MakeCode	(x=0XB01064DC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01064E0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01064E8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01064F0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01064F4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01064FC);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106500);
	OpHex		(x,	1);
	MakeComm	(0XB0106508,	"to");
	MakeComm	(0XB010650C,	"from");
	MakeComm	(0XB0106510,	"tag");
	MakeComm	(0XB0106514,	"FromSpecifier");
	MakeCode	(x=0XB0106518);
	OpStkvar	(x,	1);
	ExtLinB		(0XB0106530,	0,	"end libs/iguana/src/thread.c");
	ExtLinB		(0XB0106530,	1,	"");
	ExtLinB		(0XB0106530,	2,	"");
	MakeDword	(x=0XB0106530);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0106534,	0,	"");
	ExtLinA		(0XB0106534,	1,	"libs/iguana/src/tls.c");
	MakeCode	(0XB0106534);
	MakeName	(0XB0106534,	"__tls_init");
	MakeRptCmt	(0XB0106538,	"__L4_TCR_Set_ThreadLocalStorage inlined");
	MakeCode	(x=0XB0106540);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeComm	(0XB0106544,	"buf");
	MakeCode	(0XB010655C);
	MakeName	(0XB010655C,	"__tls_init_malloc");
	MakeComm	(0XB0106560,	"size");
	MakeComm	(0XB0106564,	"nmemb");
	MakeCode	(x=0XB0106570);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB0106578);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010657C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB0106584,	"size");
	MakeComm	(0XB0106588,	"nmemb");
	MakeCode	(x=0XB0106594);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB010659C);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01065A0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01065AC,	"size");
	MakeComm	(0XB01065B0,	"nmemb");
	MakeCode	(x=0XB01065BC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01065C0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(x=0XB01065C4);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeCode	(0XB01065E4);
	MakeCode	(0XB01065EC);
	MakeCode	(0XB01065F4);
	MakeDword	(x=0XB01065FC);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0106600);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0106604);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB0106608);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeDword	(x=0XB010660C);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeCode	(0XB0106610);
	MakeName	(0XB0106610,	"tls_free_tls");
	MakeComm	(0XB0106620,	"p");
	MakeCode	(x=0XB0106634);
	OpStkvar	(x,	1);
	MakeName	(0XB0106634,	"__tls_free");
	MakeRptCmt	(0XB0106640,	"__L4_TCR_ThreadLocalStorage inlined");
	MakeCode	(x=0XB0106648);
	OpEnumEx		(x,	1,	GetEnum("tcrenum3"),0);
	MakeCode	(x=0XB010664C);
	OpStkvar	(x,	1);
	ExtLinB		(0XB0106650,	0,	"end libs/iguana/src/tls.c");
	ExtLinB		(0XB0106650,	1,	"");
	ExtLinA		(0XB0106654,	0,	"");
	ExtLinA		(0XB0106654,	1,	"libs/iguana/arch/arm/src/thread_stub.spp");
	MakeCode	(0XB0106654);
	MakeName	(0XB0106654,	"__thread_stub");
	ExtLinA		(0XB0106668,	0,	"");
	ExtLinA		(0XB0106668,	1,	"okl4_release_1.5.2 libs/gcc/src/__udivdi3.c");
	MakeCode	(x=0XB0106668);
	OpStkvar	(x,	1);
	MakeName	(0XB0106668,	"__udivdi3");
	MakeComm	(0XB0106670,	"rem_p");
	MakeCode	(x=0XB0106674);
	OpStkvar	(x,	1);
	ExtLinA		(0XB0106684,	0,	"");
	ExtLinA		(0XB0106684,	1,	"okl4_release_1.5.2 libs/gcc/src/__udivmoddi4.c");
	MakeCode	(0XB0106684);
	MakeName	(0XB0106684,	"__udivmoddi4");
	MakeCode	(x=0XB010669C);
	OpStkvar	(x,	1);
	MakeRptCmt	(0XB01066A0,	"test den==0 (from r2/r3, now in r4/r5)");
	MakeCode	(x=0XB01066A8);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01066FC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010671C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010672C);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106778);
	OpStkvar	(x,	1);
	MakeCode	(0XB0106788);
	MakeCode	(x=0XB010678C);
	OpStkvar	(x,	1);
	ExtLinA		(0XB0106798,	0,	"");
	ExtLinA		(0XB0106798,	1,	"similar to okl4_1.5.2 libs/gcc/src/__umoddi3.c");
	MakeCode	(x=0XB0106798);
	OpStkvar	(x,	1);
	MakeName	(0XB0106798,	"__umoddi3");
	MakeComm	(0XB010679C,	"rem_p");
	MakeCode	(x=0XB01067A0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01067A4);
	OpHex		(x,	1);
	ExtLinA		(0XB01067B8,	0,	"similar to okl4_1.5.2 libs/gcc/src/__diverror.c");
	MakeCode	(0XB01067B8);
	MakeName	(0XB01067B8,	"__divide_error");
	MakeRptCmt	(0XB01067BC,	"L4_Myself inlined");
	MakeCode	(x=0XB01067C8);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeComm	(0XB01067CC,	"format");
	MakeCode	(x=0XB01067CC);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeRptCmt	(0XB01067D4,	"L4_Send inlined (with L4_Ipc inlined)");
	MakeComm	(0XB01067DC,	"to = L4_Myself()");
	MakeCode	(x=0XB01067DC);
	OpEnumEx		(x,	1,	GetEnum("tcr4enum"),0);
	MakeCode	(x=0XB01067E0);
	OpHex		(x,	1);
	MakeCode	(x=0XB01067E4);
	OpHex		(x,	1);
	MakeCode	(x=0XB01067EC);
	OpHex		(x,	1);
	MakeCode	(x=0XB01067F0);
	OpHex		(x,	1);
	MakeComm	(0XB01067F8,	"FromSpecifier = L4_nilthread");
	MakeComm	(0XB01067FC,	"tag with SendBlock set");
	MakeComm	(0XB0106800,	"from");
	MakeCode	(x=0XB0106804);
	OpHex		(x,	1);
	MakeDword	(x=0XB0106814);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0106818,	0,	"");
	ExtLinA		(0XB0106818,	1,	"libs/c/src/calloc.c");
	MakeCode	(0XB0106818);
	MakeName	(0XB0106818,	"calloc");
	MakeComm	(0XB0106820,	"sz");
	MakeComm	(0XB0106828,	"n");
	MakeComm	(0XB0106830,	"c");
	ExtLinA		(0XB0106840,	0,	"");
	ExtLinA		(0XB0106840,	1,	"libs/c/src/memset.c");
	MakeCode	(x=0XB0106840);
	OpHex		(x,	1);
	MakeName	(0XB0106840,	"memset");
	MakeCode	(x=0XB0106844);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB0106848);
	OpHex		(x,	1);
	MakeCode	(x=0XB0106894);
	OpHex		(x,	1);
	MakeCode	(x=0XB01068B8);
	OpHex		(x,	1);
	MakeCode	(x=0XB01068C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01068D4);
	OpStkvar	(x,	1);
	ExtLinA		(0XB01068D8,	0,	"");
	ExtLinA		(0XB01068D8,	1,	"libs/c/src/printf.c");
	MakeCode	(0XB01068D8);
	MakeName	(0XB01068D8,	"printf");
	MakeCode	(x=0XB01068DC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01068E0);
	OpOff		(x,	1,	0);
	OpOff		(x,	129,	0);
	MakeComm	(0XB01068E4,	"format");
	MakeCode	(x=0XB01068E4);
	OpStkvar	(x,	1);
	MakeComm	(0XB01068E8,	"stream");
	MakeComm	(0XB01068EC,	"arg");
	MakeCode	(x=0XB01068EC);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB01068F4);
	OpStkvar	(x,	1);
	MakeDword	(x=0XB0106900);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	ExtLinA		(0XB0106904,	0,	"");
	ExtLinA		(0XB0106904,	1,	"libs/c/src/strcmp.c");
	MakeCode	(x=0XB0106904);
	OpStkvar	(x,	1);
	MakeName	(0XB0106904,	"strcmp");
	MakeCode	(x=0XB0106920);
	OpStkvar	(x,	1);
	MakeCode	(x=0XB010692C);
	OpStkvar	(x,	1);
	ExtLinA		(0XB0106930,	0,	"");
	ExtLinA		(0XB0106930,	1,	"libs/circular_buffer/src/cb_new_withmem.c");
	MakeCode	(0XB0106930);
	MakeName	(0XB0106930,	"cb_new_withmem");
	MakeComm	(0XB0106938,	"sz");
	MakeStr		(0XB0106978,	0XB010697D);
	MakeName	(0XB0106978,	"aMain");
	MakeStr		(0XB0106980,	0XB010699A);
	MakeName	(0XB0106980,	"aShouldnTReachHereN");
	MakeStr		(0XB010699C,	0XB01069BE);
	MakeName	(0XB010699C,	"aIguanaNamingSrcNaming_serve");
	MakeStr		(0XB01069C0,	0XB01069E0);
	MakeName	(0XB01069C0,	"aServerErrorSendingIpcReply");
	MakeStr		(0XB01069E0,	0XB0106A16);
	MakeName	(0XB01069E0,	"aAssertionFailedSFunctionSFi");
	MakeWord	(0XB0106A16);
	MakeStr		(0XB0106A18,	0XB0106A29);
	MakeName	(0XB0106A18,	"aThreadAbortEd");
	MakeByte	(0XB0106A29);
	MakeArray	(0XB0106A29,	0X3);
	MakeStr		(0XB0106A2C,	0XB0106A52);
	MakeName	(0XB0106A2C,	"xdigits");
	MakeWord	(0XB0106A52);
	MakeStr		(0XB0106A54,	0XB0106A5A);
	MakeName	(0XB0106A54,	"a_exit");
	MakeWord	(0XB0106A5A);
	MakeStr		(0XB0106A5C,	0XB0106A86);
	MakeName	(0XB0106A5C,	"aWeHaveExitedShouldnTReachHe");
	MakeWord	(0XB0106A86);
	MakeStr		(0XB0106A88,	0XB0106AA9);
	MakeName	(0XB0106A88,	"aLibsCSrcSysIguanaSys_exit_c");
	MakeByte	(0XB0106AA9);
	MakeArray	(0XB0106AA9,	0X3);
	MakeStr		(0XB0106AAC,	0XB0106AC1);
	MakeName	(0XB0106AAC,	"a__naming_thread_init");
	MakeByte	(0XB0106AC1);
	MakeArray	(0XB0106AC1,	0X3);
	MakeStr		(0XB0106AC4,	0XB0106ADD);
	MakeName	(0XB0106AC4,	"a__naming_thread_free_tls");
	MakeByte	(0XB0106ADD);
	MakeArray	(0XB0106ADD,	0X3);
	MakeStr		(0XB0106AE0,	0XB0106AF9);
	MakeName	(0XB0106AE0,	"aLibsNamingSrcNaming_c");
	MakeByte	(0XB0106AF9);
	MakeArray	(0XB0106AF9,	0X3);
	MakeStr		(0XB0106AFC,	0XB0106B03);
	MakeName	(0XB0106AFC,	"aR0");
	MakeByte	(0XB0106B03);
	MakeStr		(0XB0106B04,	0XB0106B07);
	MakeName	(0XB0106B04,	"aPs");
	MakeByte	(0XB0106B07);
	MakeStr		(0XB0106B08,	0XB0106B2C);
	MakeName	(0XB0106B08,	"aPs__naming_object_sessionNu");
	MakeStr		(0XB0106B2C,	0XB0106B41);
	MakeName	(0XB0106B2C,	"a__asynch_thread_init");
	MakeByte	(0XB0106B41);
	MakeArray	(0XB0106B41,	0X3);
	MakeStr		(0XB0106B44,	0XB0106B5D);
	MakeName	(0XB0106B44,	"a__asynch_thread_free_tls");
	MakeByte	(0XB0106B5D);
	MakeArray	(0XB0106B5D,	0X3);
	MakeStr		(0XB0106B60,	0XB0106B6E);
	MakeName	(0XB0106B60,	"aAsynch_insert");
	MakeWord	(0XB0106B6E);
	MakeStr		(0XB0106B70,	0XB0106B82);
	MakeName	(0XB0106B70,	"aAsynch_check_mask");
	MakeWord	(0XB0106B82);
	MakeStr		(0XB0106B84,	0XB0106B9D);
	MakeName	(0XB0106B84,	"aLibsIguanaSrcAsynch_c");
	MakeByte	(0XB0106B9D);
	MakeArray	(0XB0106B9D,	0X3);
	MakeStr		(0XB0106BA0,	0XB0106BB7);
	MakeName	(0XB0106BA0,	"aAsynch_objectsNull");
	MakeByte	(0XB0106BB7);
	MakeStr		(0XB0106BB8,	0XB0106BD2);
	MakeName	(0XB0106BB8,	"aAsynch_objects_tlsTls");
	MakeWord	(0XB0106BD2);
	MakeStr		(0XB0106BD4,	0XB0106BFF);
	MakeName	(0XB0106BD4,	"aAsynch_objectsObjectAsynch_");
	MakeByte	(0XB0106BFF);
	MakeStr		(0XB0106C00,	0XB0106C0C);
	MakeName	(0XB0106C00,	"aLabelLx");
	MakeStr		(0XB0106C0C,	0XB0106C36);
	MakeName	(0XB0106C0C,	"aMaskLx__sync_bitsLxSyncword");
	MakeWord	(0XB0106C36);
	MakeStr		(0XB0106C38,	0XB0106C53);
	MakeName	(0XB0106C38,	"aReceivedInvalidWakeup");
	MakeByte	(0XB0106C53);
	MakeStr		(0XB0106C54,	0XB0106C6C);
	MakeName	(0XB0106C54,	"aErrorCodeLxLx");
	MakeStr		(0XB0106C6C,	0XB0106C81);
	MakeName	(0XB0106C6C,	"aL4_ipcsucceededTag");
	MakeByte	(0XB0106C81);
	MakeArray	(0XB0106C81,	0X3);
	MakeStr		(0XB0106C84,	0XB0106C93);
	MakeName	(0XB0106C84,	"aIguana_cap_set");
	MakeByte	(0XB0106C93);
	MakeStr		(0XB0106C94,	0XB0106CA8);
	MakeName	(0XB0106C94,	"aIguana_cap_get_slot");
	MakeStr		(0XB0106CA8,	0XB0106CB5);
	MakeName	(0XB0106CA8,	"aLookup_clist");
	MakeByte	(0XB0106CB5);
	MakeArray	(0XB0106CB5,	0X3);
	MakeDword	(0XB0106CB8);
	MakeArray	(0XB0106CB8,	0X2);
	MakeName	(0XB0106CB8,	"invalid_cap");
	MakeStr		(0XB0106CC0,	0XB0106CD6);
	MakeName	(0XB0106CC0,	"aLibsIguanaSrcCap_c");
	MakeWord	(0XB0106CD6);
	MakeStr		(0XB0106CD8,	0XB0106CEA);
	MakeName	(0XB0106CD8,	"aIs_valid_capCap");
	MakeWord	(0XB0106CEA);
	MakeStr		(0XB0106CEC,	0XB0106D14);
	MakeName	(0XB0106CEC,	"aSlot_pos1Slot_listNull");
	MakeStr		(0XB0106D14,	0XB0106D48);
	MakeName	(0XB0106D14,	"aLookup_clistCanTFindTheMems");
	MakeStr		(0XB0106D48,	0XB0106D5A);
	MakeName	(0XB0106D48,	"aMemsection_delete");
	MakeWord	(0XB0106D5A);
	MakeDword	(0XB0106D5C);
	MakeArray	(0XB0106D5C,	0X2);
	MakeName	(0XB0106D5C,	"invalid_cap2");
	MakeStr		(0XB0106D64,	0XB0106D7A);
	MakeName	(0XB0106D64,	"aMemsection_back_range");
	MakeWord	(0XB0106D7A);
	MakeStr		(0XB0106D7C,	0XB0106DB4);
	MakeName	(0XB0106D7C,	"aMemsectSlot_listCap_listSlo");
	MakeStr		(0XB0106DB4,	0XB0106DD1);
	MakeName	(0XB0106DB4,	"aLibsIguanaSrcMemsection_c");
	MakeByte	(0XB0106DD1);
	MakeArray	(0XB0106DD1,	0X3);
	MakeStr		(0XB0106DD4,	0XB0106DF5);
	MakeName	(0XB0106DD4,	"aSlot_posSlot_listCap_free");
	MakeByte	(0XB0106DF5);
	MakeArray	(0XB0106DF5,	0X3);
	MakeStr		(0XB0106DF8,	0XB0106E1F);
	MakeName	(0XB0106DF8,	"aBaseUintptr_tMemsection_bas");
	MakeByte	(0XB0106E1F);
	MakeStr		(0XB0106E20,	0XB0106E44);
	MakeName	(0XB0106E20,	"aEnd1L4e_min_pagesize0");
	MakeStr		(0XB0106E44,	0XB0106E63);
	MakeName	(0XB0106E44,	"aBaseL4e_min_pagesize0");
	MakeByte	(0XB0106E63);
	MakeStr		(0XB0106E64,	0XB0106EA4);
	MakeName	(0XB0106E64,	"aEndUintptr_tMemsection_base");
	MakeStr		(0XB0106EA4,	0XB0106ECD);
	MakeName	(0XB0106EA4,	"aInstancePServerLxObjrefLx");
	MakeByte	(0XB0106ECD);
	MakeArray	(0XB0106ECD,	0X3);
	MakeDword	(0XB0106ED0);
	MakeArray	(0XB0106ED0,	0X2);
	MakeName	(0XB0106ED0,	"invalid_cap3");
	MakeStr		(0XB0106ED8,	0XB0106EEF);
	MakeName	(0XB0106ED8,	"aSession_provide_access");
	MakeByte	(0XB0106EEF);
	MakeDword	(0XB0106EF0);
	MakeArray	(0XB0106EF0,	0X2);
	MakeName	(0XB0106EF0,	"invalid_cap4");
	MakeStr		(0XB0106EF8,	0XB0106F12);
	MakeName	(0XB0106EF8,	"aLibsIguanaSrcSession_c");
	MakeWord	(0XB0106F12);
	MakeStr		(0XB0106F14,	0XB0106F29);
	MakeName	(0XB0106F14,	"aSCapIsInvalid_");
	MakeByte	(0XB0106F29);
	MakeArray	(0XB0106F29,	0X3);
	MakeStr		(0XB0106F2C,	0XB0106F3E);
	MakeName	(0XB0106F2C,	"a__tls_init_malloc");
	MakeWord	(0XB0106F3E);
	MakeStr		(0XB0106F40,	0XB0106F4B);
	MakeName	(0XB0106F40,	"aTls_buffer");
	MakeByte	(0XB0106F4B);
	MakeStr		(0XB0106F4C,	0XB0106F62);
	MakeName	(0XB0106F4C,	"aLibsIguanaSrcTls_c");
	MakeWord	(0XB0106F62);
	MakeStr		(0XB0106F64,	0XB0106F72);
	MakeName	(0XB0106F64,	"aAsynch_buffer");
	MakeWord	(0XB0106F72);
	MakeStr		(0XB0106F74,	0XB0106F82);
	MakeName	(0XB0106F74,	"aNaming_buffer");
	MakeWord	(0XB0106F82);
	MakeStr		(0XB0106F84,	0XB0106F9F);
	MakeName	(0XB0106F84,	"a__LxDivideBy0Error");
	MakeDword	(x=0XB0140000);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0140000,	"stdin");
	MakeDword	(x=0XB0140004);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0140004,	"stdout");
	MakeDword	(x=0XB0140008);
	OpOff		(x,	0,	0);
	OpOff		(x,	128,	0);
	MakeName	(0XB0140008,	"stderr");
	MakeStruct	(0XB014000C,	"__file");
	MakeName	(0XB014000C,	"__stdin");
	MakeStruct	(0XB0140050,	"__file");
	MakeName	(0XB0140050,	"__stdout");
	MakeStruct	(0XB0140094,	"__file");
	MakeName	(0XB0140094,	"__stderr");
	MakeDword	(0XB01400D8);
	MakeName	(0XB01400D8,	"freep");
	MakeStruct	(0XB01400DC,	"header");
	MakeName	(0XB01400DC,	"base");
	MakeDword	(0XB01400E4);
	MakeName	(0XB01400E4,	"__callback_buffer");
	MakeStruct	(0XB01400E8,	"cap_slot");
	MakeArray	(0XB01400E8,	0X10);
	MakeName	(0XB01400E8,	"__morecore_slot");
	MakeDword	(0XB0140168);
	MakeName	(0XB0140168,	"__morecore_used");
	MakeDword	(0XB014016C);
	MakeName	(0XB014016C,	"__l4e_min_pagebits");
	MakeDword	(0XB0140170);
	MakeName	(0XB0140170,	"__the_naming_server");
	MakeDword	(0XB0140174);
	MakeName	(0XB0140174,	"first_cap");
	MakeDword	(0XB0140178);
	MakeName	(0XB0140178,	"clist_list");
	MakeDword	(0XB014017C);
	MakeDword	(0XB0140180);
	MakeName	(0XB0140180,	"locked");
	MakeDword	(0XB0140184);
	MakeName	(0XB0140184,	"mypd");
	MakeDword	(0XB0140188);
	MakeName	(0XB0140188,	"iguana_cb_handle");
	MakeDword	(0XB014018C);
	MakeName	(0XB014018C,	"bin_tree");
	MakeStruct	(0XB0140190,	"mutex");
	MakeName	(0XB0140190,	"malloc_mutex");
	MakeDword	(0XB014019C);
	MakeName	(0XB014019C,	"__sys_stack_size");
	MakeDword	(0XB01401A0);
	MakeName	(0XB01401A0,	"__sys_stack");
	MakeStruct	(0XB01401A4,	"mutex");
	MakeName	(0XB01401A4,	"cap_mutex");
	MakeDword	(0XB01401B0);
	MakeName	(0XB01401B0,	"__iguana_pager");
	MakeDword	(0XB01401B4);
	MakeName	(0XB01401B4,	"__iguana_obj_env");
	MakeName	(0XB01401B8,	"_end");
}

static Functions_0(void) {

	MakeFunction    (0XB0100000,0XB010004C);
	SetFunctionFlags(0XB0100000,0);
	MakeFrame(0XB0100000, 0, 0, 0);
	MakeFunction    (0XB010005C,0XB01000A0);
	SetFunctionFlags(0XB010005C,0);
	SetType(0XB010005C, "int __cdecl main(int argc, char **argv);");
	MakeFrame(0XB010005C, 0, 0, 0);
	MakeFunction    (0XB01000B8,0XB0100144);
	SetFunctionFlags(0XB01000B8,0);
	SetType(0XB01000B8, "struct naming_info *__cdecl create_name_node(char *name);");
	MakeFrame(0XB01000B8, 0X80, 16, 0);
	MakeLocal(0XB01000B8, 0XB0100144, "[bp-0X80]", "buf");
	MakeFunction    (0XB0100148,0XB01001B0);
	SetFunctionFlags(0XB0100148,0);
	SetType(0XB0100148, "void __cdecl notify_list(struct naming_info *naming_info, int flags, L4_ThreadId_t caller, uintptr_t *mask);");
	MakeFrame(0XB0100148, 0, 16, 0);
	MakeFunction    (0XB01001B0,0XB0100230);
	SetFunctionFlags(0XB01001B0,0);
	SetType(0XB01001B0, "int __cdecl naming_write_insert_impl(CORBA_Object caller, objref_t nameserver, char *name, objref_t data, uintptr_t *mask, idl4_server_environment *env);");
	MakeFrame(0XB01001B0, 0X14, 0, 0);
	MakeLocal(0XB01001B0, 0XB0100230, "[bp+0]", "mask");
	MakeLocal(0XB01001B0, 0XB0100230, "[bp+0X4]", "env");
	MakeFunction    (0XB0100234,0XB0100288);
	SetFunctionFlags(0XB0100234,0);
	SetType(0XB0100234, "int __cdecl naming_write_modify_impl(CORBA_Object caller, objref_t nameserver, char *name, objref_t data, uintptr_t *mask, idl4_server_environment *env);");
	MakeFrame(0XB0100234, 0X14, 0, 0);
	MakeLocal(0XB0100234, 0XB0100288, "[bp+0]", "mask");
	MakeLocal(0XB0100234, 0XB0100288, "[bp+0X4]", "env");
	MakeFunction    (0XB010028C,0XB0100308);
	SetFunctionFlags(0XB010028C,0);
	SetType(0XB010028C, "int __cdecl naming_write_delete_impl(CORBA_Object caller, objref_t nameserver, char *name, uintptr_t *mask, idl4_server_environment *env);");
	MakeFrame(0XB010028C, 0X1C, 0, 0);
	MakeLocal(0XB010028C, 0XB0100308, "[bp+0]", "env");
	MakeFunction    (0XB010030C,0XB0100334);
	SetFunctionFlags(0XB010030C,0);
	SetType(0XB010030C, "objref_t __cdecl naming_read_lookup_impl(CORBA_Object caller, objref_t nameserver, char *name, idl4_server_environment *env);");
	MakeFrame(0XB010030C, 0, 0, 0);
	MakeFunction    (0XB0100338,0XB010041C);
	SetFunctionFlags(0XB0100338,0);
	SetType(0XB0100338, "objref_t __cdecl naming_read_notify_impl(CORBA_Object caller, objref_t nameserver, char *name, int flags, L4_ThreadId_t *thread, uintptr_t mask, uintptr_t *outmask, idl4_server_environment *env);");
	MakeFrame(0XB0100338, 0X24, 0, 0);
	MakeLocal(0XB0100338, 0XB010041C, "[bp+0]", "thread");
	MakeLocal(0XB0100338, 0XB010041C, "[bp+0X4]", "mask");
	MakeLocal(0XB0100338, 0XB010041C, "[bp+0X8]", "outmask");
	MakeLocal(0XB0100338, 0XB010041C, "[bp+0XC]", "env");
	MakeFunction    (0XB0100420,0XB0100470);
	SetFunctionFlags(0XB0100420,0);
	SetType(0XB0100420, "int __cdecl naming_notify__cancel_impl(CORBA_Object caller, objref_t notify_obj, idl4_server_environment *env);");
	MakeFrame(0XB0100420, 0X8, 0, 0);
	MakeFunction    (0XB0100474,0XB01004A0);
	SetFunctionFlags(0XB0100474,0);
	SetType(0XB0100474, "void check_async(void);");
	MakeFrame(0XB0100474, 0X8, 0, 0);
	MakeFunction    (0XB01004A4,0XB0100534);
	SetFunctionFlags(0XB01004A4,0);
	SetType(0XB01004A4, "int __cdecl handle_naming_write_insert(L4_ThreadId_t caller, objref_t nameserver, char *name, objref_t data, uintptr_t *mask, idl4_server_environment *env);");
	MakeFrame(0XB01004A4, 0X24, 0, 0);
	MakeLocal(0XB01004A4, 0XB0100534, "[bp+0]", "mask");
	MakeLocal(0XB01004A4, 0XB0100534, "[bp+0X4]", "env");
	MakeFunction    (0XB0100534,0XB01005C8);
	SetFunctionFlags(0XB0100534,0);
	MakeFrame(0XB0100534, 0XC, 0, 0);
	MakeFunction    (0XB01005C8,0XB0100658);
	SetFunctionFlags(0XB01005C8,0);
	MakeFrame(0XB01005C8, 0X24, 0, 0);
	MakeLocal(0XB01005C8, 0XB0100658, "[bp-0X24]", "mask");
	MakeLocal(0XB01005C8, 0XB0100658, "[bp-0X20]", "env");
	MakeFunction    (0XB0100658,0XB01006EC);
	SetFunctionFlags(0XB0100658,0);
	MakeFrame(0XB0100658, 0XC, 0, 0);
	MakeFunction    (0XB01006EC,0XB0100770);
	SetFunctionFlags(0XB01006EC,0);
	MakeFrame(0XB01006EC, 0X1C, 0, 0);
	MakeLocal(0XB01006EC, 0XB0100770, "[bp-0X1C]", "env");
	MakeLocal(0XB01006EC, 0XB0100770, "[bp-0X10]", "mask");
	MakeFunction    (0XB0100770,0XB0100804);
	SetFunctionFlags(0XB0100770,0);
	MakeFrame(0XB0100770, 0XC, 0, 0);
	MakeFunction    (0XB0100804,0XB0100878);
	SetFunctionFlags(0XB0100804,0);
	MakeFrame(0XB0100804, 0X14, 0, 0);
	MakeFunction    (0XB0100878,0XB0100904);
	SetFunctionFlags(0XB0100878,0);
	MakeFrame(0XB0100878, 0XC, 0, 0);
	MakeFunction    (0XB0100904,0XB01009B0);
	SetFunctionFlags(0XB0100904,0);
	MakeFrame(0XB0100904, 0X30, 0, 0);
	MakeLocal(0XB0100904, 0XB01009B0, "[bp-0X30]", "thread");
	MakeLocal(0XB0100904, 0XB01009B0, "[bp-0X2C]", "mask");
	MakeLocal(0XB0100904, 0XB01009B0, "[bp-0X28]", "outmask");
	MakeLocal(0XB0100904, 0XB01009B0, "[bp-0X24]", "env");
	MakeFunction    (0XB01009B0,0XB0100A44);
	SetFunctionFlags(0XB01009B0,0);
	MakeFrame(0XB01009B0, 0XC, 0, 0);
	MakeFunction    (0XB0100A44,0XB0100A94);
	SetFunctionFlags(0XB0100A44,0);
	MakeFrame(0XB0100A44, 0X18, 0, 0);
	MakeFunction    (0XB0100A94,0XB0100B20);
	SetFunctionFlags(0XB0100A94,0);
	MakeFrame(0XB0100A94, 0XC, 0, 0);
	MakeFunction    (0XB0100B20,0XB0100B2C);
	SetFunctionFlags(0XB0100B20,0);
	SetType(0XB0100B20, "unsigned int __cdecl msg_is_error(L4_MsgTag_t msgtag);");
	MakeFrame(0XB0100B20, 0, 0, 0);
	MakeFunction    (0XB0100B2C,0XB0100B38);
	SetFunctionFlags(0XB0100B2C,0);
	SetType(0XB0100B2C, "unsigned int __cdecl get_function_id(L4_MsgTag_t msgtag);");
	MakeFrame(0XB0100B2C, 0, 0, 0);
	MakeFunction    (0XB0100B38,0XB0100CA0);
	SetFunctionFlags(0XB0100B38,0);
	SetType(0XB0100B38, "int __cdecl dispatch_naming_write(L4_ThreadId_t *partner, L4_Word_t *mr);");
	MakeFrame(0XB0100B38, 0X10, 0, 0);
	MakeFunction    (0XB0100CA0,0XB0100DB8);
	SetFunctionFlags(0XB0100CA0,0);
	SetType(0XB0100CA0, "int __cdecl dispatch_naming_read(L4_ThreadId_t *partner, L4_Word_t *mr);");
	MakeFrame(0XB0100CA0, 0X10, 0, 0);
	MakeFunction    (0XB0100DB8,0XB0100E14);
	SetFunctionFlags(0XB0100DB8,0);
	SetType(0XB0100DB8, "int __cdecl dispatch_naming_notify(L4_ThreadId_t *partner, L4_Word_t *mr);");
	MakeFrame(0XB0100DB8, 0X10, 0, 0);
	MakeFunction    (0XB0100E14,0XB0100F04);
	SetFunctionFlags(0XB0100E14,0);
	SetType(0XB0100E14, "void server_loop(void);");
	MakeFrame(0XB0100E14, 0X14, 0, 0);
	MakeFunction    (0XB0100F08,0XB0100F3C);
	SetFunctionFlags(0XB0100F08,0);
	SetType(0XB0100F08, "void __cdecl _assert(const char *expression, const char *file, const char *function, int line);");
	MakeFrame(0XB0100F08, 0X8, 0, 0);
	MakeFunction    (0XB0100F44,0XB0100F64);
	SetFunctionFlags(0XB0100F44,0);
	SetType(0XB0100F44, "int fprintf(FILE *stream, const char *format, ...);");
	MakeFrame(0XB0100F44, 0, 0, 0);
	MakeFunction    (0XB0100F64,0XB0101010);
	SetFunctionFlags(0XB0100F64,0);
	SetType(0XB0100F64, "void *__cdecl malloc(size_t sz);");
	MakeFrame(0XB0100F64, 0, 0, 0);
	MakeFunction    (0XB010101C,0XB010111C);
	SetFunctionFlags(0XB010101C,0);
	SetType(0XB010101C, "void __cdecl free(void *mem);");
	MakeFrame(0XB010101C, 0XC, 0, 0);
	MakeFunction    (0XB0101128,0XB010116C);
	SetFunctionFlags(0XB0101128,0);
	SetType(0XB0101128, "int __cdecl puts(const char *s);");
	MakeFrame(0XB0101128, 0XC, 0, 0);
	MakeFunction    (0XB0101170,0XB010119C);
	SetFunctionFlags(0XB0101170,0);
	SetType(0XB0101170, "char *__cdecl strcpy(char *dst, char *src);");
	MakeFrame(0XB0101170, 0, 0, 0);
	MakeFunction    (0XB010119C,0XB01011C0);
	SetFunctionFlags(0XB010119C,0);
	SetType(0XB010119C, "int __cdecl strlen(char *s);");
	MakeFrame(0XB010119C, 0, 0, 0);
	MakeFunction    (0XB01011C0,0XB01011E8);
	SetFunctionFlags(0XB01011C0,0);
	SetType(0XB01011C0, "int __cdecl vfprintf(FILE *stream, const char *format, va_list arg);");
	MakeFrame(0XB01011C0, 0, 12, 0);
	MakeFunction    (0XB01011E8,0XB01011F8);
	SetFunctionFlags(0XB01011E8,0x1);
	SetType(0XB01011E8, "void abort(void);");
	MakeFrame(0XB01011E8, 0, 0, 0);
	MakeFunction    (0XB01011FC,0XB010121C);
	SetFunctionFlags(0XB01011FC,0);
	SetType(0XB01011FC, "void __cdecl _libc_setup(void *callback, void *stdin_p, void *stdout_p, void *stderr_p, void *heap_base, void *heap_end);");
	MakeFrame(0XB01011FC, 0, 0, 0);
	MakeLocal(0XB01011FC, 0XB010121C, "[bp+0]", "heap_base");
	MakeLocal(0XB01011FC, 0XB010121C, "[bp+0X4]", "heap_end");
	MakeFunction    (0XB0101220,0XB0101288);
	SetFunctionFlags(0XB0101220,0);
	SetType(0XB0101220, "void __cdecl _lib_init(uintptr_t *buf);");
	MakeFrame(0XB0101220, 0X10, 0, 0);
	MakeFunction    (0XB0101288,0XB01012A8);
	SetFunctionFlags(0XB0101288,0);
	SetType(0XB0101288, "void __cdecl _sys_entry(void *buf, int argc, char **argv);");
	MakeFrame(0XB0101288, 0XC, 0, 0);
	MakeFunction    (0XB01012A8,0XB01012C0);
	SetFunctionFlags(0XB01012A8,0);
	SetType(0XB01012A8, "void __cdecl _malloc_init(void *bss_p, void *top_p);");
	MakeFrame(0XB01012A8, 0, 0, 0);
	MakeFunction    (0XB01012C0,0XB0101308);
	SetFunctionFlags(0XB01012C0,0);
	SetType(0XB01012C0, "void _morecore_init(void);");
	MakeFrame(0XB01012C0, 0X14, 0, 0);
	MakeFunction    (0XB0101310,0XB01013E0);
	SetFunctionFlags(0XB0101310,0);
	SetType(0XB0101310, "header *__cdecl morecore(unsigned int num_units);");
	MakeFrame(0XB0101310, 0XC, 32, 0);
	MakeLocal(0XB0101310, 0XB01013E0, "[bp-0XC]", "header");
	MakeLocal(0XB0101310, 0XB01013E0, "[bp-0X8]", "num_bytes");
	MakeFunction    (0XB01013EC,0XB01013F4);
	SetFunctionFlags(0XB01013EC,0);
	SetType(0XB01013EC, "size_t __cdecl null_write(const void *data, __int32 position, size_t count, void *handle);");
	MakeFrame(0XB01013EC, 0, 0, 0);
	MakeFunction    (0XB01013F4,0XB01013FC);
	SetFunctionFlags(0XB01013F4,0);
	SetType(0XB01013F4, "size_t __cdecl null_read(void *data, __int32 position, size_t count, void *handle);");
	MakeFrame(0XB01013F4, 0, 0, 0);
	MakeFunction    (0XB01013FC,0XB010147C);
	SetFunctionFlags(0XB01013FC,0);
	SetType(0XB01013FC, "size_t __cdecl l4kdb_write(const void *data, __int32 position, size_t count, void *handle);");
	MakeFrame(0XB01013FC, 0X28, 0, 0);
	MakeFunction    (0XB010147C,0XB0101500);
	SetFunctionFlags(0XB010147C,0);
	MakeFrame(0XB010147C, 0X24, 0, 0);
	MakeFunction    (0XB0101500,0XB0101578);
	SetFunctionFlags(0XB0101500,0);
	SetType(0XB0101500, "size_t __cdecl init_write(const void *data, __int32 position, size_t count, void *handle);");
	MakeFrame(0XB0101500, 0X20, 0, 0);
	MakeLocal(0XB0101500, 0XB0101578, "[bp-0X1C]", "ApiFlags");
	MakeLocal(0XB0101500, 0XB0101578, "[bp-0X18]", "ApiVersion");
	MakeFunction    (0XB0101588,0XB01015EC);
	SetFunctionFlags(0XB0101588,0);
	SetType(0XB0101588, "size_t __cdecl init_read(void *data, __int32 position, size_t count, void *handle);");
	MakeFrame(0XB0101588, 0X20, 0, 0);
	MakeLocal(0XB0101588, 0XB01015EC, "[bp-0X1C]", "ApiFlags");
	MakeLocal(0XB0101588, 0XB01015EC, "[bp-0X18]", "ApiVersion");
	MakeFunction    (0XB01015F8,0XB0101600);
	SetFunctionFlags(0XB01015F8,0x1);
	SetType(0XB01015F8, "void __cdecl exit(int status);");
	MakeFrame(0XB01015F8, 0, 0, 0);
	MakeFunction    (0XB0101600,0XB0102200);
	SetFunctionFlags(0XB0101600,0);
	SetType(0XB0101600, "int __cdecl format_string(char *output, struct __file *stream, int stream_or_memory, size_t n, const char *fmt, va_list ap);");
	MakeFrame(0XB0101600, 0X28, 0, 0);
	MakeLocal(0XB0101600, 0XB0102200, "[bp+0]", "fmt");
	MakeLocal(0XB0101600, 0XB0102200, "[bp+0X4]", "ap");
	MakeFunction    (0XB010220C,0XB0102280);
	SetFunctionFlags(0XB010220C,0);
	SetType(0XB010220C, "int __cdecl fputc(int c, struct __file *stream);");
	MakeFrame(0XB010220C, 0X18, 0, 0);
	MakeFunction    (0XB0102280,0XB01022A4);
	SetFunctionFlags(0XB0102280,0);
	SetType(0XB0102280, "void __cdecl Exit(int status);");
	MakeFrame(0XB0102280, 0, 0, 0);
	MakeFunction    (0XB01022B0,0XB01022C0);
	SetFunctionFlags(0XB01022B0,0);
	MakeFrame(0XB01022B0, 0X4, 0, 0);
	MakeFunction    (0XB01022C0,0XB01022D0);
	SetFunctionFlags(0XB01022C0,0);
	MakeFrame(0XB01022C0, 0X4, 0, 0);
	MakeFunction    (0XB01022D8,0XB0102714);
	SetFunctionFlags(0XB01022D8,0);
	MakeFrame(0XB01022D8, 0, 0, 0);
	MakeFunction    (0XB0102714,0XB0102738);
	SetFunctionFlags(0XB0102714,0);
	SetType(0XB0102714, "struct ll *ll_new(void);");
	MakeFrame(0XB0102714, 0X4, 0, 0);
	MakeFunction    (0XB0102738,0XB010276C);
	SetFunctionFlags(0XB0102738,0);
	SetType(0XB0102738, "struct ll *__cdecl ll_insert_before(struct ll *ll, void *data);");
	MakeFrame(0XB0102738, 0XC, 0, 0);
	MakeFunction    (0XB010276C,0XB0102790);
	SetFunctionFlags(0XB010276C,0);
	SetType(0XB010276C, "struct ll *__cdecl ll_delete(struct ll *ll);");
	MakeFrame(0XB010276C, 0X8, 0, 0);
	MakeFunction    (0XB0102790,0XB010279C);
	SetFunctionFlags(0XB0102790,0);
	SetType(0XB0102790, "void __cdecl dl_list_init(struct double_list *dl);");
	MakeFrame(0XB0102790, 0, 0, 0);
	MakeFunction    (0XB010279C,0XB01027D8);
	SetFunctionFlags(0XB010279C,0);
	SetType(0XB010279C, "void *__cdecl dl_list_create_back(struct double_list *dl, size_t payload);");
	MakeFrame(0XB010279C, 0X8, 0, 0);
	MakeFunction    (0XB01027D8,0XB0102800);
	SetFunctionFlags(0XB01027D8,0);
	SetType(0XB01027D8, "struct bin_tree *binary_tree_new(void);");
	MakeFrame(0XB01027D8, 0, 0, 0);
	MakeFunction    (0XB0102800,0XB0102864);
	SetFunctionFlags(0XB0102800,0);
	SetType(0XB0102800, "struct bin_tree_node *__cdecl find_node(struct bin_tree_node *root, char *key, int *cmp_p, struct bin_tree_node **parent);");
	MakeFrame(0XB0102800, 0, 0, 0);
	MakeFunction    (0XB0102864,0XB01028F0);
	SetFunctionFlags(0XB0102864,0);
	SetType(0XB0102864, "int __cdecl binary_tree_insert(struct bin_tree *tree, char *key, char *data);");
	MakeFrame(0XB0102864, 0X14, 0, 0);
	MakeFunction    (0XB01028F0,0XB0102930);
	SetFunctionFlags(0XB01028F0,0);
	SetType(0XB01028F0, "void *__cdecl binary_tree_lookup(struct bin_tree *tree, char *key);");
	MakeFrame(0XB01028F0, 0X4, 4, 0);
	MakeLocal(0XB01028F0, 0XB0102930, "[bp-0X4]", "cmp");
	MakeFunction    (0XB0102930,0XB0102A14);
	SetFunctionFlags(0XB0102930,0);
	SetType(0XB0102930, "int __cdecl binary_tree_remove(struct bin_tree *tree, char *key);");
	MakeFrame(0XB0102930, 0X8, 12, 0);
	MakeLocal(0XB0102930, 0XB0102A14, "[bp-0X8]", "parent");
	MakeLocal(0XB0102930, 0XB0102A14, "[bp-0X4]", "cmp");
	MakeFunction    (0XB0102A14,0XB0102A2C);
	SetFunctionFlags(0XB0102A14,0);
	SetType(0XB0102A14, "void __cdecl L4_KDB_Enter(void *str);");
	MakeFrame(0XB0102A14, 0, 0, 0);
	MakeFunction    (0XB0102A2C,0XB0102A44);
	SetFunctionFlags(0XB0102A2C,0);
	SetType(0XB0102A2C, "L4_Word_t L4_KDB_GetTick(void);");
	MakeFrame(0XB0102A2C, 0, 0, 0);
	MakeFunction    (0XB0102A44,0XB0102A5C);
	SetFunctionFlags(0XB0102A44,0);
	SetType(0XB0102A44, "int L4_KDB_ReadChar_Blocked_ASM(void);");
	MakeFrame(0XB0102A44, 0, 0, 0);
	MakeFunction    (0XB0102A5C,0XB0102A74);
	SetFunctionFlags(0XB0102A5C,0);
	SetType(0XB0102A5C, "int L4_KDB_ReadChar_ASM(void);");
	MakeFrame(0XB0102A5C, 0, 0, 0);
	MakeFunction    (0XB0102A74,0XB0102A8C);
	SetFunctionFlags(0XB0102A74,0);
	SetType(0XB0102A74, "int __cdecl L4_KDB_PrintChar_ASM(int c);");
	MakeFrame(0XB0102A74, 0, 0, 0);
	MakeFunction    (0XB0102A8C,0XB0102AA4);
	SetFunctionFlags(0XB0102A8C,0);
	SetType(0XB0102A8C, "L4_Word_t __cdecl L4_KDB_GetTracepointCount(L4_Word_t);");
	MakeFrame(0XB0102A8C, 0, 0, 0);
	MakeFunction    (0XB0102AA4,0XB0102ABC);
	SetFunctionFlags(0XB0102AA4,0);
	SetType(0XB0102AA4, "L4_Word_t L4_KDB_GetNumTracepoints(void);");
	MakeFrame(0XB0102AA4, 0, 0, 0);
	MakeFunction    (0XB0102ABC,0XB0102AD4);
	SetFunctionFlags(0XB0102ABC,0);
	SetType(0XB0102ABC, "void __cdecl L4_KDB_GetTracepointNameIntroMRs(L4_Word_t);");
	MakeFrame(0XB0102ABC, 0, 0, 0);
	MakeFunction    (0XB0102AD4,0XB0102AEC);
	SetFunctionFlags(0XB0102AD4,0);
	SetType(0XB0102AD4, "void __cdecl L4_KDB_TCCtrl(L4_Word_t);");
	MakeFrame(0XB0102AD4, 0, 0, 0);
	MakeFunction    (0XB0102AEC,0XB0102B04);
	SetFunctionFlags(0XB0102AEC,0);
	SetType(0XB0102AEC, "void L4_KDB__PMU_Reset(void);");
	MakeFrame(0XB0102AEC, 0, 0, 0);
	MakeFunction    (0XB0102B04,0XB0102B1C);
	SetFunctionFlags(0XB0102B04,0);
	SetType(0XB0102B04, "void __cdecl L4_KDB__PMU_Stop(L4_Word_t);");
	MakeFrame(0XB0102B04, 0, 0, 0);
	MakeFunction    (0XB0102B1C,0XB0102B34);
	SetFunctionFlags(0XB0102B1C,0);
	SetType(0XB0102B1C, "L4_Word_t __cdecl L4_KDB_PMU_Read(L4_Word_t);");
	MakeFrame(0XB0102B1C, 0, 0, 0);
	MakeFunction    (0XB0102B34,0XB0102B4C);
	SetFunctionFlags(0XB0102B34,0);
	SetType(0XB0102B34, "void __cdecl L4_KDB__PMU_Config(L4_Word_t);");
	MakeFrame(0XB0102B34, 0, 0, 0);
	MakeFunction    (0XB0102B4C,0XB0102B74);
	SetFunctionFlags(0XB0102B4C,0);
	SetType(0XB0102B4C, "void __cdecl L4_KDB_SetThreadName_ASM(L4_ThreadId_t tid, const char *name);");
	MakeFrame(0XB0102B4C, 0X8, 0, 0);
	MakeFunction    (0XB0102B74,0XB0102BAC);
	SetFunctionFlags(0XB0102B74,0);
	SetType(0XB0102B74, "struct L4_KernelInterfacePage_struct *__cdecl L4_KernelInterface(L4_Word_t *ApiVersion, L4_Word_t *ApiFlags, L4_Word_t *KernelId);");
	MakeFrame(0XB0102B74, 0X10, 0, 0);
	MakeFunction    (0XB0102BAC,0XB0102BEC);
	SetFunctionFlags(0XB0102BAC,0);
	SetType(0XB0102BAC, "L4_ThreadId_t __cdecl L4_ExchangeRegisters(L4_ThreadId_t dest, L4_Word_t control, L4_Word_t sp, L4_Word_t ip, L4_Word_t flags, L4_Word_t UserDefHandle, L4_ThreadId_t pager, L4_Word_t *old_control, L4_Word_t *old_sp, L4_Word_t *old_ip, L4_Word_t *old_flags, L4_Word_t *old_UserDefHandle, L4_ThreadId_t *old_pager);");
	MakeFrame(0XB0102BAC, 0X24, 0, 0);
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0]", "flags");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X4]", "UserDefHandle");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X8]", "pager");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0XC]", "old_control");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X10]", "old_sp");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X14]", "old_ip");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X18]", "old_flags");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X1C]", "old_UserDefHandle");
	MakeLocal(0XB0102BAC, 0XB0102BEC, "[bp+0X20]", "old_pager");
	MakeFunction    (0XB0102BEC,0XB0102C0C);
	SetFunctionFlags(0XB0102BEC,0);
	SetType(0XB0102BEC, "L4_Word_t __cdecl L4_ThreadControl(L4_ThreadId_t dest, L4_SpaceId_t SpaceSpecifier, L4_ThreadId_t Scheduler, L4_ThreadId_t Pager, L4_ThreadId_t ExceptionHandler, L4_Word_t resources, void *UtcbLocation);");
	MakeFrame(0XB0102BEC, 0X24, 0, 0);
	MakeLocal(0XB0102BEC, 0XB0102C0C, "[bp+0]", "ExceptionHandler");
	MakeLocal(0XB0102BEC, 0XB0102C0C, "[bp+0X4]", "resources");
	MakeLocal(0XB0102BEC, 0XB0102C0C, "[bp+0X8]", "UtcbLocation");
	MakeFunction    (0XB0102C0C,0XB0102C20);
	SetFunctionFlags(0XB0102C0C,0);
	SetType(0XB0102C0C, "void __cdecl L4_ThreadSwitch(L4_ThreadId_t dest);");
	MakeFrame(0XB0102C0C, 0X24, 0, 0);
	MakeFunction    (0XB0102C20,0XB0102C54);
	SetFunctionFlags(0XB0102C20,0);
	SetType(0XB0102C20, "L4_Word_t __cdecl L4_Schedule(L4_ThreadId_t dest, L4_Word_t timeslice, L4_Word_t total_quantum, L4_Word_t hw_thread_bitmask, L4_Word_t ProcessorControl, L4_Word_t prio, L4_Word_t *rem_timeslice, L4_Word_t *rem_total);");
	MakeFrame(0XB0102C20, 0X24, 0, 0);
	MakeLocal(0XB0102C20, 0XB0102C54, "[bp+0]", "ProcessorControl");
	MakeLocal(0XB0102C20, 0XB0102C54, "[bp+0X4]", "prio");
	MakeLocal(0XB0102C20, 0XB0102C54, "[bp+0X8]", "rem_timeslice");
	MakeLocal(0XB0102C20, 0XB0102C54, "[bp+0XC]", "rem_total");
	MakeFunction    (0XB0102C54,0XB0102CBC);
	SetFunctionFlags(0XB0102C54,0);
	SetType(0XB0102C54, "L4_MsgTag_t __cdecl L4_Ipc(L4_ThreadId_t to, L4_ThreadId_t FromSpecifier, L4_MsgTag_t tag, L4_ThreadId_t *from);");
	MakeFrame(0XB0102C54, 0X2C, 0, 0);
	MakeFunction    (0XB0102CBC,0XB0102CE0);
	SetFunctionFlags(0XB0102CBC,0);
	SetType(0XB0102CBC, "L4_MsgTag_t __cdecl L4_Notify(L4_ThreadId_t to, L4_Word_t mask);");
	MakeFrame(0XB0102CBC, 0X24, 0, 0);
	MakeFunction    (0XB0102CE0,0XB0102D10);
	SetFunctionFlags(0XB0102CE0,0);
	SetType(0XB0102CE0, "L4_MsgTag_t __cdecl L4_WaitNotify(L4_Word_t *mask);");
	MakeFrame(0XB0102CE0, 0X28, 0, 0);
	MakeFunction    (0XB0102D10,0XB0102D84);
	SetFunctionFlags(0XB0102D10,0);
	SetType(0XB0102D10, "L4_MsgTag_t __cdecl L4_Lipc(L4_ThreadId_t to, L4_ThreadId_t FromSpecifier, L4_MsgTag_t tag, L4_ThreadId_t *from);");
	MakeFrame(0XB0102D10, 0X28, 0, 0);
	MakeFunction    (0XB0102D84,0XB0102D98);
	SetFunctionFlags(0XB0102D84,0);
	SetType(0XB0102D84, "L4_Word_t __cdecl L4_MapControl(L4_SpaceId_t SpaceSpecifier, L4_Word_t control);");
	MakeFrame(0XB0102D84, 0X24, 0, 0);
	MakeFunction    (0XB0102D98,0XB0102DB8);
	SetFunctionFlags(0XB0102D98,0);
	SetType(0XB0102D98, "L4_Word_t __cdecl L4_SpaceControl(L4_SpaceId_t SpaceSpecifier, L4_Word_t control, L4_Fpage_t KernelInterfacePageArea, L4_Fpage_t UtcbArea, L4_Word_t resources, L4_Word_t *old_resources);");
	MakeFrame(0XB0102D98, 0X24, 0, 0);
	MakeLocal(0XB0102D98, 0XB0102DB8, "[bp+0]", "resources");
	MakeLocal(0XB0102D98, 0XB0102DB8, "[bp+0X4]", "old_resources");
	MakeFunction    (0XB0102DB8,0XB0102DCC);
	SetFunctionFlags(0XB0102DB8,0);
	SetType(0XB0102DB8, "L4_Word_t __cdecl L4_ProcessorControl(L4_Word_t ProcessorNo, L4_Word_t InternalFrequency, L4_Word_t ExternalFrequency, L4_Word_t voltage);");
	MakeFrame(0XB0102DB8, 0X24, 0, 0);
	MakeFunction    (0XB0102DCC,0XB0102DE0);
	SetFunctionFlags(0XB0102DCC,0);
	SetType(0XB0102DCC, "L4_Word_t __cdecl L4_CacheControl(L4_SpaceId_t SpaceSpecifier, L4_Word_t control);");
	MakeFrame(0XB0102DCC, 0X24, 0, 0);
	MakeFunction    (0XB0102DE0,0XB0102DF4);
	SetFunctionFlags(0XB0102DE0,0);
	SetType(0XB0102DE0, "L4_Word_t __cdecl L4_IpcControl(L4_SpaceId_t SpaceSpecifier, L4_Word_t control);");
	MakeFrame(0XB0102DE0, 0X24, 0, 0);
	MakeFunction    (0XB0102DF4,0XB0102E08);
	SetFunctionFlags(0XB0102DF4,0);
	SetType(0XB0102DF4, "void __cdecl mutex_init(mutex_t mutex);");
	MakeFrame(0XB0102DF4, 0, 0, 0);
	MakeFunction    (0XB0102E08,0XB0102E24);
	SetFunctionFlags(0XB0102E08,0);
	SetType(0XB0102E08, "void __cdecl mutex_count_lock(mutex_t);");
	MakeFrame(0XB0102E08, 0X8, 0, 0);
	MakeFunction    (0XB0102E24,0XB0102E58);
	SetFunctionFlags(0XB0102E24,0);
	SetType(0XB0102E24, "void __cdecl mutex_count_unlock(mutex_t);");
	MakeFrame(0XB0102E24, 0, 0, 0);
	MakeFunction    (0XB0102E58,0XB0102ED8);
	SetFunctionFlags(0XB0102E58,0);
	SetType(0XB0102E58, "void __cdecl mutex_lock(mutex_t m);");
	MakeFrame(0XB0102E58, 0XC, 0, 0);
	MakeNameEx(0XB0102E70, "preempt_handler", SN_LOCAL);
	MakeNameEx(0XB0102EB8, "grab_lock", SN_LOCAL);
	MakeNameEx(0XB0102ECC, "exit_path", SN_LOCAL);
	MakeFunction    (0XB0102ED8,0XB0102F38);
	SetFunctionFlags(0XB0102ED8,0);
	SetType(0XB0102ED8, "L4_Word_t l4e_min_pagebits(void);");
	MakeFrame(0XB0102ED8, 0X8, 0, 0);
	MakeFunction    (0XB0102F3C,0XB0102F50);
	SetFunctionFlags(0XB0102F3C,0);
	SetType(0XB0102F3C, "L4_Word_t l4e_min_pagesize(void);");
	MakeFrame(0XB0102F3C, 0, 4, 0);
	MakeFunction    (0XB0102F50,0XB0102FE4);
	SetFunctionFlags(0XB0102F50,0);
	SetType(0XB0102F50, "L4_Fpage_t __cdecl l4e_biggest_fpage(uintptr_t addr, uintptr_t base, uintptr_t end);");
	MakeFrame(0XB0102F50, 0, 0, 0);
	MakeFunction    (0XB0102FE4,0XB0103018);
	SetFunctionFlags(0XB0102FE4,0);
	SetType(0XB0102FE4, "struct cb_get_handle *__cdecl cb_attach(struct cb *cb);");
	MakeFrame(0XB0102FE4, 0XC, 0, 0);
	MakeFunction    (0XB0103018,0XB0103074);
	SetFunctionFlags(0XB0103018,0);
	SetType(0XB0103018, "void *__cdecl cb_get(struct cb_get_handle *cbg, size_t size);");
	MakeFrame(0XB0103018, 0, 0, 0);
	MakeFunction    (0XB0103074,0XB0103080);
	SetFunctionFlags(0XB0103074,0);
	SetType(0XB0103074, "void __cdecl cb_attach_allocated(struct cb *cb, struct cb_get_handle *cbg);");
	MakeFrame(0XB0103074, 0, 0, 0);
	MakeFunction    (0XB0103080,0XB010308C);
	SetFunctionFlags(0XB0103080,0);
	SetType(0XB0103080, "void __cdecl _naming_init(objref_t naming_server);");
	MakeFrame(0XB0103080, 0, 0, 0);
	MakeFunction    (0XB0103090,0XB0103150);
	SetFunctionFlags(0XB0103090,0);
	SetType(0XB0103090, "void __cdecl _naming_thread_init(void *buf);");
	MakeFrame(0XB0103090, 0XC, 0, 0);
	MakeFunction    (0XB0103160,0XB0103174);
	SetFunctionFlags(0XB0103160,0);
	SetType(0XB0103160, "void _naming_thread_free(void);");
	MakeFrame(0XB0103160, 0, 0, 0);
	MakeFunction    (0XB0103174,0XB01031EC);
	SetFunctionFlags(0XB0103174,0);
	SetType(0XB0103174, "int __cdecl _naming_thread_free_tls(int arg0);");
	MakeFrame(0XB0103174, 0X8, 0, 0);
	MakeFunction    (0XB0103200,0XB0103208);
	SetFunctionFlags(0XB0103200,0);
	SetType(0XB0103200, "int naming_init_buf_size(void);");
	MakeFrame(0XB0103200, 0, 0, 0);
	MakeFunction    (0XB0103208,0XB0103308);
	SetFunctionFlags(0XB0103208,0);
	SetType(0XB0103208, "int __cdecl naming_insert(const char *name, objref_t value);");
	MakeFrame(0XB0103208, 0X24, 0, 0);
	MakeLocal(0XB0103208, 0XB0103308, "[bp+0]", "mask");
	MakeLocal(0XB0103208, 0XB0103308, "[bp+0X4]", "env");
	MakeFunction    (0XB0103308,0XB010340C);
	SetFunctionFlags(0XB0103308,0);
	SetType(0XB0103308, "int __cdecl naming_modify(const char *name, objref_t value);");
	MakeFrame(0XB0103308, 0X24, 0, 0);
	MakeFunction    (0XB010340C,0XB010350C);
	SetFunctionFlags(0XB010340C,0);
	SetType(0XB010340C, "int __cdecl naming_delete(const char *name);");
	MakeFrame(0XB010340C, 0X20, 0, 0);
	MakeFunction    (0XB010350C,0XB01035E0);
	SetFunctionFlags(0XB010350C,0);
	SetType(0XB010350C, "objref_t __cdecl naming_lookup(const char *name);");
	MakeFrame(0XB010350C, 0X18, 0, 0);
	MakeFunction    (0XB01035E0,0XB0103794);
	SetFunctionFlags(0XB01035E0,0);
	SetType(0XB01035E0, "naming_notify_t __cdecl naming_notify(const char *name, int flags);");
	MakeFrame(0XB01035E0, 0X24, 0, 0);
	MakeFunction    (0XB0103794,0XB010384C);
	SetFunctionFlags(0XB0103794,0);
	SetType(0XB0103794, "int __cdecl naming_cancel(naming_notify_t notify);");
	MakeFrame(0XB0103794, 0X18, 0, 0);
	MakeFunction    (0XB010384C,0XB0103868);
	SetFunctionFlags(0XB010384C,0);
	SetType(0XB010384C, "naming_notify_t __cdecl naming_wait(naming_notify_t notify);");
	MakeFrame(0XB010384C, 0, 0, 0);
	MakeFunction    (0XB0103868,0XB0103884);
	SetFunctionFlags(0XB0103868,0);
	SetType(0XB0103868, "naming_notify_t __cdecl naming_poll(naming_notify_t notify);");
	MakeFrame(0XB0103868, 0, 0, 0);
	MakeFunction    (0XB0103884,0XB01038D0);
	SetFunctionFlags(0XB0103884,0);
	SetType(0XB0103884, "void __cdecl _asynch_thread_init(void *buf);");
	MakeFrame(0XB0103884, 0XC, 0, 0);
	MakeFunction    (0XB01038DC,0XB01038F0);
	SetFunctionFlags(0XB01038DC,0);
	SetType(0XB01038DC, "void _asynch_thread_free(void);");
	MakeFrame(0XB01038DC, 0, 0, 0);
	MakeFunction    (0XB01038F0,0XB0103930);
	SetFunctionFlags(0XB01038F0,0);
	SetType(0XB01038F0, "void __cdecl _asynch_thread_free_tls(struct platform *p);");
	MakeFrame(0XB01038F0, 0X8, 0, 0);
	MakeFunction    (0XB010393C,0XB0103994);
	SetFunctionFlags(0XB010393C,0);
	SetType(0XB010393C, "int asynch_get_bit(void);");
	MakeFrame(0XB010393C, 0, 0, 0);
	MakeFunction    (0XB0103994,0XB01039B4);
	SetFunctionFlags(0XB0103994,0);
	SetType(0XB0103994, "void __cdecl asynch_free_bit(int bit);");
	MakeFrame(0XB0103994, 0, 0, 0);
	MakeFunction    (0XB01039B4,0XB0103A6C);
	SetFunctionFlags(0XB01039B4,0);
	SetType(0XB01039B4, "int __cdecl asynch_insert(struct asynch *object, uintptr_t obj_type, uintptr_t *synch_mask);");
	MakeFrame(0XB01039B4, 0X18, 0, 0);
	MakeFunction    (0XB0103A78,0XB0103AEC);
	SetFunctionFlags(0XB0103A78,0);
	SetType(0XB0103A78, "void __cdecl asynch_remove(struct asynch *object, uintptr_t *synch_mask);");
	MakeFrame(0XB0103A78, 0XC, 0, 0);
	MakeFunction    (0XB0103AEC,0XB0103C44);
	SetFunctionFlags(0XB0103AEC,0);
	SetType(0XB0103AEC, "struct asynch *__cdecl asynch_check_mask(uintptr_t mask, int poll);");
	MakeFrame(0XB0103AEC, 0X1C, 0, 0);
	MakeFunction    (0XB0103C60,0XB0103CE8);
	SetFunctionFlags(0XB0103C60,0);
	SetType(0XB0103C60, "void __cdecl _cap_init(uintptr_t base);");
	MakeFrame(0XB0103C60, 0X14, 0, 0);
	MakeFunction    (0XB0103CF8,0XB0103D50);
	SetFunctionFlags(0XB0103CF8,0);
	SetType(0XB0103CF8, "void __cdecl iguana_cap_set(cap_t cap, struct cap_slot slot);");
	MakeFrame(0XB0103CF8, 0X14, 0, 0);
	MakeFunction    (0XB0103D60,0XB0103F30);
	SetFunctionFlags(0XB0103D60,0);
	SetType(0XB0103D60, "struct cap_slot iguana_cap_get_slot(void);");
	MakeFrame(0XB0103D60, 0X20, 0, 0);
	MakeFunction    (0XB0103F4C,0XB010400C);
	SetFunctionFlags(0XB0103F4C,0);
	SetType(0XB0103F4C, "struct cap_slot __cdecl lookup_clist(memsection_ref_t memsection);");
	MakeFrame(0XB0103F4C, 0X18, 0, 0);
	MakeFunction    (0XB0104020,0XB01040B4);
	SetFunctionFlags(0XB0104020,0);
	SetType(0XB0104020, "void __cdecl iguana_cap_free_slot(struct cap_slot slot, int unknown2ndarg);");
	MakeFrame(0XB0104020, 0X1C, 0, 0);
	MakeFunction    (0XB01040BC,0XB0104174);
	SetFunctionFlags(0XB01040BC,0);
	SetType(0XB01040BC, "cap_t __cdecl iguana_get_cap(uintptr_t ref, unsigned int interface);");
	MakeFrame(0XB01040BC, 0, 0, 0);
	MakeFunction    (0XB0104180,0XB01041AC);
	SetFunctionFlags(0XB0104180,0);
	SetType(0XB0104180, "int __cdecl cap_matches(cap_t cap, objref_t object, int interface);");
	MakeFrame(0XB0104180, 0, 0, 0);
	MakeFunction    (0XB01041AC,0XB01041D4);
	SetFunctionFlags(0XB01041AC,0);
	SetType(0XB01041AC, "cap_t *__cdecl iguana_get_clist(int slot);");
	MakeFrame(0XB01041AC, 0XC, 0, 0);
	MakeFunction    (0XB01041DC,0XB0104204);
	SetFunctionFlags(0XB01041DC,0);
	SetType(0XB01041DC, "void __cdecl cap_clist_list_delete(struct clist *list);");
	MakeFrame(0XB01041DC, 0XC, 0, 0);
	MakeFunction    (0XB0104208,0XB01042D0);
	SetFunctionFlags(0XB0104208,0);
	SetType(0XB0104208, "cap_t __cdecl cap_memsection_create(uintptr_t size, uintptr_t *base);");
	MakeFrame(0XB0104208, 0X1C, 0, 0);
	MakeFunction    (0XB01042D4,0XB0104304);
	SetFunctionFlags(0XB01042D4,0);
	SetType(0XB01042D4, "memsection_ref_t __cdecl memsection_create(uintptr_t size, uintptr_t *base);");
	MakeFrame(0XB01042D4, 0X10, 0, 0);
	MakeLocal(0XB01042D4, 0XB0104304, "[bp-0X10]", "pool");
	MakeFunction    (0XB0104304,0XB0104334);
	SetFunctionFlags(0XB0104304,0);
	SetType(0XB0104304, "memsection_ref_t __cdecl memsection_create_with_pool(uintptr_t size, uintptr_t *base, pool_ref_t pool);");
	MakeFrame(0XB0104304, 0X10, 0, 0);
	MakeLocal(0XB0104304, 0XB0104334, "[bp-0X10]", "pool");
	MakeFunction    (0XB0104334,0XB0104364);
	SetFunctionFlags(0XB0104334,0);
	SetType(0XB0104334, "memsection_ref_t __cdecl memsection_create_user(uintptr_t size, uintptr_t *base);");
	MakeFrame(0XB0104334, 0X10, 0, 0);
	MakeLocal(0XB0104334, 0XB0104364, "[bp-0X10]", "pool");
	MakeFunction    (0XB0104364,0XB0104398);
	SetFunctionFlags(0XB0104364,0);
	SetType(0XB0104364, "memsection_ref_t __cdecl memsection_create_fixed(uintptr_t size, uintptr_t base);");
	MakeFrame(0XB0104364, 0X14, 0, 0);
	MakeLocal(0XB0104364, 0XB0104398, "[bp-0X14]", "pool");
	MakeFunction    (0XB0104398,0XB01043CC);
	SetFunctionFlags(0XB0104398,0);
	SetType(0XB0104398, "memsection_ref_t __cdecl memsection_create_fixed_user(uintptr_t size, uintptr_t base);");
	MakeFrame(0XB0104398, 0X14, 0, 0);
	MakeLocal(0XB0104398, 0XB01043CC, "[bp-0X14]", "pool");
	MakeFunction    (0XB01043CC,0XB0104464);
	SetFunctionFlags(0XB01043CC,0);
	SetType(0XB01043CC, "int __cdecl memsection_register_server(memsection_ref_t memsect, thread_ref_t server);");
	MakeFrame(0XB01043CC, 0X14, 0, 0);
	MakeFunction    (0XB0104468,0XB0104508);
	SetFunctionFlags(0XB0104468,0);
	SetType(0XB0104468, "memsection_ref_t __cdecl memsection_lookup(objref_t object, thread_ref_t *server);");
	MakeFrame(0XB0104468, 0X14, 0, 0);
	MakeFunction    (0XB010450C,0XB010468C);
	SetFunctionFlags(0XB010450C,0);
	SetType(0XB010450C, "void __cdecl memsection_delete(memsection_ref_t memsect);");
	MakeFrame(0XB010450C, 0X28, 0, 0);
	MakeFunction    (0XB01046A8,0XB010473C);
	SetFunctionFlags(0XB01046A8,0);
	SetType(0XB01046A8, "void __cdecl memsection_set_attributes(memsection_ref_t memsect, uintptr_t attributes);");
	MakeFrame(0XB01046A8, 0X10, 0, 0);
	MakeFunction    (0XB0104740,0XB01047D4);
	SetFunctionFlags(0XB0104740,0);
	SetType(0XB0104740, "void *__cdecl memsection_base(memsection_ref_t memsect);");
	MakeFrame(0XB0104740, 0X10, 0, 0);
	MakeFunction    (0XB01047D8,0XB010486C);
	SetFunctionFlags(0XB01047D8,0);
	SetType(0XB01047D8, "uintptr_t __cdecl memsection_size(memsection_ref_t memsect);");
	MakeFrame(0XB01047D8, 0X10, 0, 0);
	MakeFunction    (0XB0104870,0XB010490C);
	SetFunctionFlags(0XB0104870,0);
	SetType(0XB0104870, "int __cdecl memsection_page_map(memsection_ref_t memsect, L4_Fpage_t from_page, L4_Fpage_t to_page);");
	MakeFrame(0XB0104870, 0X14, 0, 0);
	MakeFunction    (0XB0104910,0XB01049A8);
	SetFunctionFlags(0XB0104910,0);
	SetType(0XB0104910, "int __cdecl memsection_page_unmap(memsection_ref_t memsect, L4_Fpage_t to_page);");
	MakeFrame(0XB0104910, 0X14, 0, 0);
	MakeFunction    (0XB01049AC,0XB0104C70);
	SetFunctionFlags(0XB01049AC,0);
	SetType(0XB01049AC, "int __cdecl memsection_back_range(memsection_ref_t ms, uintptr_t base, uintptr_t end);");
	MakeFrame(0XB01049AC, 0X28, 0, 0);
	MakeFunction    (0XB0104C88,0XB0104CC4);
	SetFunctionFlags(0XB0104C88,0);
	SetType(0XB0104C88, "object_t *__cdecl object_get_interface(objref_t obj);");
	MakeFrame(0XB0104C88, 0XC, 0, 0);
	MakeFunction    (0XB0104CC4,0XB0104D24);
	SetFunctionFlags(0XB0104CC4,0);
	SetType(0XB0104CC4, "object_t *__cdecl object_get_async_interface(objref_t obj);");
	MakeFrame(0XB0104CC4, 0X10, 0, 0);
	MakeFunction    (0XB0104D24,0XB0104D38);
	SetFunctionFlags(0XB0104D24,0);
	SetType(0XB0104D24, "void __cdecl object_print(object_t *instance);");
	MakeFrame(0XB0104D24, 0, 0, 0);
	MakeFunction    (0XB0104D3C,0XB0104D74);
	SetFunctionFlags(0XB0104D3C,0);
	SetType(0XB0104D3C, "objref_t __cdecl iguana_getenv(uintptr_t key);");
	MakeFrame(0XB0104D3C, 0, 0, 0);
	MakeFunction    (0XB0104D78,0XB0104E1C);
	SetFunctionFlags(0XB0104D78,0);
	SetType(0XB0104D78, "pd_ref_t pd_myself(void);");
	MakeFrame(0XB0104D78, 0X14, 0, 0);
	MakeFunction    (0XB0104E24,0XB0104EBC);
	SetFunctionFlags(0XB0104E24,0);
	SetType(0XB0104E24, "pd_ref_t pd_create(void);");
	MakeFrame(0XB0104E24, 0X18, 0, 0);
	MakeFunction    (0XB0104EC0,0XB0104F54);
	SetFunctionFlags(0XB0104EC0,0);
	SetType(0XB0104EC0, "pd_ref_t pd_create_pd(void);");
	MakeFrame(0XB0104EC0, 0X14, 0, 0);
	MakeFunction    (0XB0104F58,0XB0104FF0);
	SetFunctionFlags(0XB0104F58,0);
	SetType(0XB0104F58, "pd_ref_t pd_create_restricted(void);");
	MakeFrame(0XB0104F58, 0X18, 0, 0);
	MakeFunction    (0XB0104FF4,0XB0105088);
	SetFunctionFlags(0XB0104FF4,0);
	SetType(0XB0104FF4, "pd_ref_t __cdecl pd_create_restricted_in_pd(pd_ref_t pd);");
	MakeFrame(0XB0104FF4, 0X14, 0, 0);
	MakeFunction    (0XB010508C,0XB0105118);
	SetFunctionFlags(0XB010508C,0);
	SetType(0XB010508C, "void __cdecl pd_delete(pd_ref_t pd);");
	MakeFrame(0XB010508C, 0XC, 0, 0);
	MakeFunction    (0XB010511C,0XB01051C4);
	SetFunctionFlags(0XB010511C,0);
	SetType(0XB010511C, "thread_ref_t __cdecl pd_create_thread(pd_ref_t pd, L4_ThreadId_t *thrd);");
	MakeFrame(0XB010511C, 0X18, 0, 0);
	MakeFunction    (0XB01051C8,0XB010526C);
	SetFunctionFlags(0XB01051C8,0);
	SetType(0XB01051C8, "thread_ref_t __cdecl pd_create_thread_with_priority(pd_ref_t pd, int priority, L4_ThreadId_t *thrd);");
	MakeFrame(0XB01051C8, 0X18, 0, 0);
	MakeFunction    (0XB0105270,0XB01053B8);
	SetFunctionFlags(0XB0105270,0);
	SetType(0XB0105270, "memsection_ref_t __cdecl pd_create_memsection(pd_ref_t pd, uintptr_t size, uintptr_t base, int flags, pool_ref_t pool, uintptr_t *ret_base);");
	MakeFrame(0XB0105270, 0X3C, 0, 0);
	MakeLocal(0XB0105270, 0XB01053B8, "[bp+0]", "pool");
	MakeLocal(0XB0105270, 0XB01053B8, "[bp+0X4]", "ret_base");
	MakeFunction    (0XB01053C4,0XB01053E4);
	SetFunctionFlags(0XB01053C4,0);
	SetType(0XB01053C4, "memsection_ref_t __cdecl pd_create_memsection(pd_ref_t pd, uintptr_t size, uintptr_t *base);");
	MakeFrame(0XB01053C4, 0X4, 0, 0);
	MakeLocal(0XB01053C4, 0XB01053E4, "[bp-0X4]", "pool");
	MakeFunction    (0XB01053E4,0XB0105404);
	SetFunctionFlags(0XB01053E4,0);
	SetType(0XB01053E4, "memsection_ref_t __cdecl pd_create_memsection_user(pd_ref_t pd, uintptr_t size, uintptr_t *base);");
	MakeFrame(0XB01053E4, 0X4, 0, 0);
	MakeLocal(0XB01053E4, 0XB0105404, "[bp-0X4]", "pool");
	MakeFunction    (0XB0105404,0XB0105424);
	SetFunctionFlags(0XB0105404,0);
	SetType(0XB0105404, "memsection_ref_t __cdecl pd_create_memsection_fixed_user(pd_ref_t pd, uintptr_t size, uintptr_t *base);");
	MakeFrame(0XB0105404, 0X8, 0, 0);
	MakeLocal(0XB0105404, 0XB0105424, "[bp-0X8]", "pool");
	MakeFunction    (0XB0105424,0XB01054B8);
	SetFunctionFlags(0XB0105424,0);
	SetType(0XB0105424, "void __cdecl pd_set_callback(pd_ref_t pd, memsection_ref_t callback);");
	MakeFrame(0XB0105424, 0X10, 0, 0);
	MakeFunction    (0XB01054BC,0XB0105554);
	SetFunctionFlags(0XB01054BC,0);
	SetType(0XB01054BC, "uintptr_t __cdecl pd_add_clist(pd_ref_t pd, memsection_ref_t clist);");
	MakeFrame(0XB01054BC, 0X10, 0, 0);
	MakeFunction    (0XB0105558,0XB01055F0);
	SetFunctionFlags(0XB0105558,0);
	SetType(0XB0105558, "void __cdecl pd_release_clist(pd_ref_t pd, uintptr_t clist, int slot);");
	MakeFrame(0XB0105558, 0X14, 0, 0);
	MakeFunction    (0XB01055F4,0XB0105738);
	SetFunctionFlags(0XB01055F4,0);
	SetType(0XB01055F4, "int __cdecl session_create(objref_t object, memsection_ref_t clist, L4_ThreadId_t *server_tid, struct session *session);");
	MakeFrame(0XB01055F4, 0X24, 0, 0);
	MakeFunction    (0XB010573C,0XB0105798);
	SetFunctionFlags(0XB010573C,0);
	SetType(0XB010573C, "struct session *__cdecl session_create_with_clist(objref_t object, memsection_ref_t clist, L4_ThreadId_t *server_tid);");
	MakeFrame(0XB010573C, 0X10, 0, 0);
	MakeFunction    (0XB0105798,0XB01057FC);
	SetFunctionFlags(0XB0105798,0);
	SetType(0XB0105798, "struct session *__cdecl session_create(objref_t object, L4_ThreadId_t *server_tid);");
	MakeFrame(0XB0105798, 0X10, 0, 0);
	MakeFunction    (0XB01057FC,0XB0105834);
	SetFunctionFlags(0XB01057FC,0);
	SetType(0XB01057FC, "struct session *__cdecl session_create_full_share(objref_t object, L4_ThreadId_t *server_tid);");
	MakeFrame(0XB01057FC, 0XC, 0, 0);
	MakeFunction    (0XB0105834,0XB01058CC);
	SetFunctionFlags(0XB0105834,0);
	SetType(0XB0105834, "void __cdecl session_add_async(struct session *session, objref_t call_buf, objref_t return_buf);");
	MakeFrame(0XB0105834, 0X14, 0, 0);
	MakeFunction    (0XB01058D0,0XB0105970);
	SetFunctionFlags(0XB01058D0,0);
	SetType(0XB01058D0, "int __cdecl session_provide_access(struct session *session, objref_t object, int interface);");
	MakeFrame(0XB01058D0, 0X10, 0, 0);
	MakeFunction    (0XB0105980,0XB01059C0);
	SetFunctionFlags(0XB0105980,0);
	SetType(0XB0105980, "int __cdecl session_unidentified1(struct session *session, objref_t object);");
	MakeFrame(0XB0105980, 0X14, 0, 0);
	MakeFunction    (0XB01059C0,0XB0105B1C);
	SetFunctionFlags(0XB01059C0,0);
	SetType(0XB01059C0, "int __cdecl session_revoke_access(struct session *session, objref_t object, int interface);");
	MakeFrame(0XB01059C0, 0X34, 0, 0);
	MakeLocal(0XB01059C0, 0XB0105B1C, "[bp-0X34]", "from");
	MakeFunction    (0XB0105B24,0XB0105BE0);
	SetFunctionFlags(0XB0105B24,0);
	SetType(0XB0105B24, "void __cdecl session_delete(struct session *session);");
	MakeFrame(0XB0105B24, 0X1C, 0, 0);
	MakeFunction    (0XB0105BE4,0XB0105CD8);
	SetFunctionFlags(0XB0105BE4,0);
	SetType(0XB0105BE4, "void __cdecl session_delete_2(struct session *s);");
	MakeFrame(0XB0105BE4, 0X4C, 0, 0);
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X4C]", "flags");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X48]", "UserDefHandle");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X44]", "pager");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X40]", "old_control");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X3C]", "old_sp");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X38]", "old_ip");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X34]", "old_flags");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X30]", "old_UserDefHandle");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X2C]", "old_pager");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X28]", "from");
	MakeLocal(0XB0105BE4, 0XB0105CD8, "[bp-0X20]", "to");
	MakeFunction    (0XB0105CD8,0XB0105CE4);
	SetFunctionFlags(0XB0105CD8,0);
	SetType(0XB0105CD8, "void __cdecl _lib_iguana_init_env(uintptr_t *obj_env);");
	MakeFrame(0XB0105CD8, 0, 0, 0);
	MakeFunction    (0XB0105CE8,0XB0105D50);
	SetFunctionFlags(0XB0105CE8,0);
	SetType(0XB0105CE8, "void _lib_iguana_init_pager(void);");
	MakeFrame(0XB0105CE8, 0X8, 0, 0);
	MakeFunction    (0XB0105D54,0XB0105D64);
	SetFunctionFlags(0XB0105D54,0);
	SetType(0XB0105D54, "void __cdecl _lib_iguana_init(uintptr_t *obj_env);");
	MakeFrame(0XB0105D54, 0, 0, 0);
	MakeFunction    (0XB0105D64,0XB0105DF8);
	SetFunctionFlags(0XB0105D64,0);
	SetType(0XB0105D64, "thread_ref_t thread_myself(void);");
	MakeFrame(0XB0105D64, 0X10, 0, 0);
	MakeFunction    (0XB0105DFC,0XB0105E90);
	SetFunctionFlags(0XB0105DFC,0);
	SetType(0XB0105DFC, "L4_ThreadId_t __cdecl thread_l4tid(thread_ref_t thrd);");
	MakeFrame(0XB0105DFC, 0X10, 0, 0);
	MakeFunction    (0XB0105E94,0XB0105F24);
	SetFunctionFlags(0XB0105E94,0);
	SetType(0XB0105E94, "thread_ref_t __cdecl thread_id(L4_ThreadId_t thrd);");
	MakeFrame(0XB0105E94, 0X14, 0, 0);
	MakeFunction    (0XB0105F28,0XB0105FD4);
	SetFunctionFlags(0XB0105F28,0);
	SetType(0XB0105F28, "thread_ref_t __cdecl thread_create_priority(int priority, L4_ThreadId_t *thrd);");
	MakeFrame(0XB0105F28, 0X1C, 0, 0);
	MakeFunction    (0XB0105FD8,0XB0105FE4);
	SetFunctionFlags(0XB0105FD8,0);
	SetType(0XB0105FD8, "thread_ref_t __cdecl thread_create(L4_ThreadId_t *thrd);");
	MakeFrame(0XB0105FD8, 0, 0, 0);
	MakeFunction    (0XB0105FE4,0XB010607C);
	SetFunctionFlags(0XB0105FE4,0);
	SetType(0XB0105FE4, "void __cdecl thread_start(thread_ref_t thread, uintptr_t ip, uintptr_t sp);");
	MakeFrame(0XB0105FE4, 0X14, 0, 0);
	MakeFunction    (0XB0106080,0XB01060F4);
	SetFunctionFlags(0XB0106080,0);
	SetType(0XB0106080, "thread_ref_t __cdecl thread_create_simple(void (__cdecl *fn)(void *), void *arg, int priority);");
	MakeFrame(0XB0106080, 0X18, 0, 0);
	MakeLocal(0XB0106080, 0XB01060F4, "[bp-0X14]", "base");
	MakeFunction    (0XB01060F8,0XB01061F4);
	SetFunctionFlags(0XB01060F8,0);
	SetType(0XB01060F8, "void __cdecl thread_delete(L4_ThreadId_t thrd);");
	MakeFrame(0XB01060F8, 0X28, 0, 0);
	MakeLocal(0XB01060F8, 0XB01061F4, "[bp-0X24]", "from");
	MakeFunction    (0XB01061F8,0XB01062D4);
	SetFunctionFlags(0XB01061F8,0);
	SetType(0XB01061F8, "void __cdecl thread_unidentified1(int arg0, int arg1);");
	MakeFrame(0XB01061F8, 0X4C, 0, 0);
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X4C]", "flags");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X48]", "UserDefHandle");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X44]", "pager");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X40]", "old_control");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X3C]", "old_sp");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X38]", "old_ip");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X34]", "old_flags");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X30]", "old_UserDefHandle");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X2C]", "old_pager");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X28]", "from");
	MakeLocal(0XB01061F8, 0XB01062D4, "[bp-0X20]", "to");
	MakeFunction    (0XB01062D4,0XB01063AC);
	SetFunctionFlags(0XB01062D4,0);
	SetType(0XB01062D4, "int __cdecl thread_unidentified2(int arg0);");
	MakeFrame(0XB01062D4, 0X48, 0, 0);
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X48]", "flags");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X44]", "UserDefHandle");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X40]", "pager");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X3C]", "old_control");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X38]", "old_sp");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X34]", "old_ip");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X30]", "old_flags");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X2C]", "old_UserDefHandle");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X28]", "old_pager");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X24]", "from");
	MakeLocal(0XB01062D4, 0XB01063AC, "[bp-0X1C]", "to");
	MakeFunction    (0XB01063AC,0XB0106484);
	SetFunctionFlags(0XB01063AC,0);
	SetType(0XB01063AC, "int __cdecl thread_unidentified3(int arg0);");
	MakeFrame(0XB01063AC, 0X48, 0, 0);
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X48]", "flags");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X44]", "UserDefHandle");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X40]", "pager");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X3C]", "old_control");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X38]", "old_sp");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X34]", "old_ip");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X30]", "old_flags");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X2C]", "old_UserDefHandle");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X28]", "old_pager");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X24]", "from");
	MakeLocal(0XB01063AC, 0XB0106484, "[bp-0X1C]", "to");
	MakeFunction    (0XB0106484,0XB0106494);
	SetFunctionFlags(0XB0106484,0);
	SetType(0XB0106484, "void thread_delete_self(void);");
	MakeFrame(0XB0106484, 0, 0, 0);
	MakeFunction    (0XB0106494,0XB0106530);
	SetFunctionFlags(0XB0106494,0);
	MakeFrame(0XB0106494, 0X18, 0, 0);
	MakeFunction    (0XB0106534,0XB010655C);
	SetFunctionFlags(0XB0106534,0);
	SetType(0XB0106534, "void __cdecl _tls_init(void *tls_buffer, void *asynch_buffer, void *naming_buffer);");
	MakeFrame(0XB0106534, 0X8, 0, 0);
	MakeFunction    (0XB010655C,0XB01065FC);
	SetFunctionFlags(0XB010655C,0);
	SetType(0XB010655C, "void _tls_init_malloc(void);");
	MakeFrame(0XB010655C, 0X10, 0, 0);
	MakeFunction    (0XB0106610,0XB0106634);
	SetFunctionFlags(0XB0106610,0);
	SetType(0XB0106610, "void __cdecl tls_free_tls(void *tls);");
	MakeFrame(0XB0106610, 0X8, 0, 0);
	MakeFunction    (0XB0106634,0XB0106654);
	SetFunctionFlags(0XB0106634,0);
	SetType(0XB0106634, "void _tls_free(void);");
	MakeFrame(0XB0106634, 0X4, 0, 0);
	MakeFunction    (0XB0106654,0XB0106668);
	SetFunctionFlags(0XB0106654,0);
	MakeFrame(0XB0106654, 0, 0, 0);
	MakeFunction    (0XB0106668,0XB0106684);
	SetFunctionFlags(0XB0106668,0);
	SetType(0XB0106668, "uint64_t __cdecl _udivdi3(uint64_t num, uint64_t den);");
	MakeFrame(0XB0106668, 0, 0, 0);
	MakeFunction    (0XB0106684,0XB0106798);
	SetFunctionFlags(0XB0106684,0);
	SetType(0XB0106684, "uint64_t __cdecl _udivmoddi4(uint64_t num, uint64_t den, uint64_t *rem_p);");
	MakeFrame(0XB0106684, 0X30, 0, 0);
	MakeLocal(0XB0106684, 0XB0106798, "[bp+0]", "rem_p");
	MakeFunction    (0XB0106798,0XB01067B8);
	SetFunctionFlags(0XB0106798,0);
	SetType(0XB0106798, "uint64_t __cdecl _umoddi3(uint64_t num, uint64_t den);");
	MakeFrame(0XB0106798, 0XC, 0, 0);
	MakeFunction    (0XB01067B8,0XB0106814);
	SetFunctionFlags(0XB01067B8,0);
	SetType(0XB01067B8, "void _divide_error(void);");
	MakeFrame(0XB01067B8, 0XC, 0, 0);
	MakeFunction    (0XB0106818,0XB0106840);
	SetFunctionFlags(0XB0106818,0);
	SetType(0XB0106818, "void *__cdecl calloc(size_t nmemb, size_t size);");
	MakeFrame(0XB0106818, 0X8, 0, 0);
	MakeFunction    (0XB0106840,0XB01068D8);
	SetFunctionFlags(0XB0106840,0);
	SetType(0XB0106840, "void *__cdecl memset(void *s, int c, size_t n);");
	MakeFrame(0XB0106840, 0X4, 0, 0);
	MakeFunction    (0XB01068D8,0XB0106900);
	SetFunctionFlags(0XB01068D8,0);
	SetType(0XB01068D8, "int printf(const char *format, ...);");
	MakeFrame(0XB01068D8, 0X14, 0, 0);
	MakeLocal(0XB01068D8, 0XB0106900, "[bp-0XC]", "format");
	MakeFunction    (0XB0106904,0XB0106930);
	SetFunctionFlags(0XB0106904,0);
	SetType(0XB0106904, "int __cdecl strcmp(char *s1, char *s2);");
	MakeFrame(0XB0106904, 0, 0, 0);
	MakeFunction    (0XB0106930,0XB0106978);
	SetFunctionFlags(0XB0106930,0);
	SetType(0XB0106930, "struct cb_alloc_handle *__cdecl cb_new_withmem(void *mem, size_t size);");
	MakeFrame(0XB0106930, 0XC, 0, 0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
	SetRegEx(0XB0100000,"T",0,3);
	SetRegEx(0XB0100000,"DS",0X2,3);
	SetRegEx(0XB0100014,"T",0,3);
	SetRegEx(0XB0100028,"T",0,3);
	SetRegEx(0XB0100034,"T",0,3);
	SetRegEx(0XB0100038,"T",0,3);
	SetRegEx(0XB010005C,"T",0,3);
	SetRegEx(0XB01000B8,"T",0,3);
	SetRegEx(0XB010012C,"T",0,3);
	SetRegEx(0XB0100138,"T",0,3);
	SetRegEx(0XB0100148,"T",0,3);
	SetRegEx(0XB010016C,"T",0,3);
	SetRegEx(0XB010017C,"T",0,3);
	SetRegEx(0XB01001AC,"T",0,3);
	SetRegEx(0XB01001B0,"T",0,3);
	SetRegEx(0XB01001E8,"T",0,3);
	SetRegEx(0XB0100214,"T",0,3);
	SetRegEx(0XB010021C,"T",0,3);
	SetRegEx(0XB0100234,"T",0,3);
	SetRegEx(0XB0100280,"T",0,3);
	SetRegEx(0XB010028C,"T",0,3);
	SetRegEx(0XB01002E8,"T",0,3);
	SetRegEx(0XB01002EC,"T",0,3);
	SetRegEx(0XB01002F4,"T",0,3);
	SetRegEx(0XB010030C,"T",0,3);
	SetRegEx(0XB0100338,"T",0,3);
	SetRegEx(0XB0100384,"T",0,3);
	SetRegEx(0XB01003AC,"T",0,3);
	SetRegEx(0XB01003B4,"T",0,3);
	SetRegEx(0XB01003C8,"T",0,3);
	SetRegEx(0XB01003F4,"T",0,3);
	SetRegEx(0XB01003FC,"T",0,3);
	SetRegEx(0XB0100404,"T",0,3);
	SetRegEx(0XB0100420,"T",0,3);
	SetRegEx(0XB0100440,"T",0,3);
	SetRegEx(0XB0100448,"T",0,3);
	SetRegEx(0XB0100474,"T",0,3);
	SetRegEx(0XB01004D8,"T",0,3);
	SetRegEx(0XB01004E4,"T",0,3);
	SetRegEx(0XB0100574,"T",0,3);
	SetRegEx(0XB0100588,"T",0,3);
	SetRegEx(0XB01005FC,"T",0,3);
	SetRegEx(0XB0100608,"T",0,3);
	SetRegEx(0XB0100698,"T",0,3);
	SetRegEx(0XB01006AC,"T",0,3);
	SetRegEx(0XB010071C,"T",0,3);
	SetRegEx(0XB0100728,"T",0,3);
	SetRegEx(0XB01007B0,"T",0,3);
	SetRegEx(0XB01007C4,"T",0,3);
	SetRegEx(0XB0100834,"T",0,3);
	SetRegEx(0XB0100840,"T",0,3);
	SetRegEx(0XB01008B0,"T",0,3);
	SetRegEx(0XB01008C4,"T",0,3);
	SetRegEx(0XB0100944,"T",0,3);
	SetRegEx(0XB0100950,"T",0,3);
	SetRegEx(0XB01009F0,"T",0,3);
	SetRegEx(0XB0100A04,"T",0,3);
	SetRegEx(0XB0100ACC,"T",0,3);
	SetRegEx(0XB0100AE0,"T",0,3);
	SetRegEx(0XB0100B20,"T",0,3);
	SetRegEx(0XB0100B38,"T",0,3);
	SetRegEx(0XB0100B64,"T",0,3);
	SetRegEx(0XB0100B70,"T",0,3);
	SetRegEx(0XB0100B94,"T",0,3);
	SetRegEx(0XB0100BA0,"T",0,3);
	SetRegEx(0XB0100BCC,"T",0,3);
	SetRegEx(0XB0100BDC,"T",0,3);
	SetRegEx(0XB0100C00,"T",0,3);
	SetRegEx(0XB0100C0C,"T",0,3);
	SetRegEx(0XB0100C38,"T",0,3);
	SetRegEx(0XB0100C4C,"T",0,3);
	SetRegEx(0XB0100C6C,"T",0,3);
	SetRegEx(0XB0100C78,"T",0,3);
	SetRegEx(0XB0100CA0,"T",0,3);
	SetRegEx(0XB0100CC4,"T",0,3);
	SetRegEx(0XB0100CD0,"T",0,3);
	SetRegEx(0XB0100CEC,"T",0,3);
	SetRegEx(0XB0100CF8,"T",0,3);
	SetRegEx(0XB0100D1C,"T",0,3);
	SetRegEx(0XB0100D2C,"T",0,3);
	SetRegEx(0XB0100D5C,"T",0,3);
	SetRegEx(0XB0100D68,"T",0,3);
	SetRegEx(0XB0100DB8,"T",0,3);
	SetRegEx(0XB0100DD8,"T",0,3);
	SetRegEx(0XB0100DE4,"T",0,3);
	SetRegEx(0XB0100E14,"T",0,3);
	SetRegEx(0XB0100E3C,"T",0,3);
	SetRegEx(0XB0100ECC,"T",0,3);
	SetRegEx(0XB0100EE4,"T",0,3);
	SetRegEx(0XB0100EF4,"T",0,3);
	SetRegEx(0XB0100F08,"T",0,3);
	SetRegEx(0XB0100F44,"T",0,3);
	SetRegEx(0XB0100F64,"T",0,3);
	SetRegEx(0XB0100FA4,"T",0,3);
	SetRegEx(0XB0100FAC,"T",0,3);
	SetRegEx(0XB0100FE4,"T",0,3);
	SetRegEx(0XB010101C,"T",0,3);
	SetRegEx(0XB0101060,"T",0,3);
	SetRegEx(0XB0101064,"T",0,3);
	SetRegEx(0XB0101074,"T",0,3);
	SetRegEx(0XB010107C,"T",0,3);
	SetRegEx(0XB01010A8,"T",0,3);
	SetRegEx(0XB0101104,"T",0,3);
	SetRegEx(0XB0101114,"T",0,3);
	SetRegEx(0XB0101128,"T",0,3);
	SetRegEx(0XB0101144,"T",0,3);
	SetRegEx(0XB0101158,"T",0,3);
	SetRegEx(0XB0101170,"T",0,3);
	SetRegEx(0XB0101184,"T",0,3);
	SetRegEx(0XB010119C,"T",0,3);
	SetRegEx(0XB01011AC,"T",0,3);
	SetRegEx(0XB01011B8,"T",0,3);
	SetRegEx(0XB01011C0,"T",0,3);
	SetRegEx(0XB01011E8,"T",0,3);
	SetRegEx(0XB01011F4,"T",0,3);
	SetRegEx(0XB01011FC,"T",0,3);
	SetRegEx(0XB0101220,"T",0,3);
	SetRegEx(0XB0101288,"T",0,3);
	SetRegEx(0XB01012A8,"T",0,3);
	SetRegEx(0XB01012C0,"T",0,3);
	SetRegEx(0XB01012D8,"T",0,3);
	SetRegEx(0XB0101310,"T",0,3);
	SetRegEx(0XB01013D0,"T",0,3);
	SetRegEx(0XB01013D8,"T",0,3);
	SetRegEx(0XB0101428,"T",0,3);
	SetRegEx(0XB0101430,"T",0,3);
	SetRegEx(0XB0101470,"T",0,3);
	SetRegEx(0XB01014A4,"T",0,3);
	SetRegEx(0XB01014D0,"T",0,3);
	SetRegEx(0XB01014EC,"T",0,3);
	SetRegEx(0XB01014F8,"T",0,3);
	SetRegEx(0XB01015F8,"T",0,3);
	SetRegEx(0XB0101600,"T",0,3);
	SetRegEx(0XB0101658,"T",0,3);
	SetRegEx(0XB0101698,"T",0,3);
	SetRegEx(0XB01016BC,"T",0,3);
	SetRegEx(0XB01016C8,"T",0,3);
	SetRegEx(0XB01016CC,"T",0,3);
	SetRegEx(0XB01016D4,"T",0,3);
	SetRegEx(0XB01016F0,"T",0,3);
	SetRegEx(0XB010170C,"T",0,3);
	SetRegEx(0XB0101748,"T",0,3);
	SetRegEx(0XB01018C4,"T",0,3);
	SetRegEx(0XB01018FC,"T",0,3);
	SetRegEx(0XB0101908,"T",0,3);
	SetRegEx(0XB0101918,"T",0,3);
	SetRegEx(0XB0101930,"T",0,3);
	SetRegEx(0XB0101940,"T",0,3);
	SetRegEx(0XB0101984,"T",0,3);
	SetRegEx(0XB01019C4,"T",0,3);
	SetRegEx(0XB0101A1C,"T",0,3);
	SetRegEx(0XB0101A98,"T",0,3);
	SetRegEx(0XB0101AB8,"T",0,3);
	SetRegEx(0XB0101AF8,"T",0,3);
	SetRegEx(0XB0101B00,"T",0,3);
	SetRegEx(0XB0101B28,"T",0,3);
	SetRegEx(0XB0101BF4,"T",0,3);
	SetRegEx(0XB0101BFC,"T",0,3);
	SetRegEx(0XB0101C20,"T",0,3);
	SetRegEx(0XB0101C50,"T",0,3);
	SetRegEx(0XB0101C54,"T",0,3);
	SetRegEx(0XB0101CA0,"T",0,3);
	SetRegEx(0XB0101CE4,"T",0,3);
	SetRegEx(0XB0101D00,"T",0,3);
	SetRegEx(0XB0101D10,"T",0,3);
	SetRegEx(0XB0101D24,"T",0,3);
	SetRegEx(0XB0101D6C,"T",0,3);
	SetRegEx(0XB0101D88,"T",0,3);
	SetRegEx(0XB0101DA0,"T",0,3);
	SetRegEx(0XB0101DE8,"T",0,3);
	SetRegEx(0XB0101DF8,"T",0,3);
	SetRegEx(0XB0101E38,"T",0,3);
	SetRegEx(0XB0101E4C,"T",0,3);
	SetRegEx(0XB0101E58,"T",0,3);
	SetRegEx(0XB0101EB0,"T",0,3);
	SetRegEx(0XB0101ED8,"T",0,3);
	SetRegEx(0XB0101F9C,"T",0,3);
	SetRegEx(0XB0101FA4,"T",0,3);
	SetRegEx(0XB0101FB0,"T",0,3);
	SetRegEx(0XB0101FB8,"T",0,3);
	SetRegEx(0XB010200C,"T",0,3);
	SetRegEx(0XB0102018,"T",0,3);
	SetRegEx(0XB0102028,"T",0,3);
	SetRegEx(0XB0102038,"T",0,3);
	SetRegEx(0XB0102078,"T",0,3);
	SetRegEx(0XB010212C,"T",0,3);
	SetRegEx(0XB0102138,"T",0,3);
	SetRegEx(0XB0102154,"T",0,3);
	SetRegEx(0XB01021E0,"T",0,3);
	SetRegEx(0XB010220C,"T",0,3);
	SetRegEx(0XB0102268,"T",0,3);
	SetRegEx(0XB0102270,"T",0,3);
	SetRegEx(0XB0102280,"T",0,3);
	SetRegEx(0XB01022A0,"T",0,3);
	SetRegEx(0XB01022B0,"T",0,3);
	SetRegEx(0XB01022D0,"T",0,3);
	SetRegEx(0XB01022D8,"T",0,3);
	SetRegEx(0XB010230C,"T",0,3);
	SetRegEx(0XB0102318,"T",0,3);
	SetRegEx(0XB0102348,"T",0,3);
	SetRegEx(0XB0102454,"T",0,3);
	SetRegEx(0XB010254C,"T",0,3);
	SetRegEx(0XB0102558,"T",0,3);
	SetRegEx(0XB0102564,"T",0,3);
	SetRegEx(0XB0102570,"T",0,3);
	SetRegEx(0XB010257C,"T",0,3);
	SetRegEx(0XB0102588,"T",0,3);
	SetRegEx(0XB0102594,"T",0,3);
	SetRegEx(0XB01025A0,"T",0,3);
	SetRegEx(0XB01025AC,"T",0,3);
	SetRegEx(0XB01025B8,"T",0,3);
	SetRegEx(0XB01025C4,"T",0,3);
	SetRegEx(0XB01025D0,"T",0,3);
	SetRegEx(0XB01025DC,"T",0,3);
	SetRegEx(0XB01025E8,"T",0,3);
	SetRegEx(0XB01025F4,"T",0,3);
	SetRegEx(0XB0102600,"T",0,3);
	SetRegEx(0XB010260C,"T",0,3);
	SetRegEx(0XB0102618,"T",0,3);
	SetRegEx(0XB0102624,"T",0,3);
	SetRegEx(0XB0102630,"T",0,3);
	SetRegEx(0XB010263C,"T",0,3);
	SetRegEx(0XB0102648,"T",0,3);
	SetRegEx(0XB0102654,"T",0,3);
	SetRegEx(0XB0102660,"T",0,3);
	SetRegEx(0XB010266C,"T",0,3);
	SetRegEx(0XB0102678,"T",0,3);
	SetRegEx(0XB0102684,"T",0,3);
	SetRegEx(0XB0102690,"T",0,3);
	SetRegEx(0XB010269C,"T",0,3);
	SetRegEx(0XB01026A8,"T",0,3);
	SetRegEx(0XB01026B4,"T",0,3);
	SetRegEx(0XB01026C0,"T",0,3);
	SetRegEx(0XB01026CC,"T",0,3);
	SetRegEx(0XB01026F0,"T",0,3);
	SetRegEx(0XB010276C,"T",0,3);
	SetRegEx(0XB0102790,"T",0,3);
	SetRegEx(0XB010279C,"T",0,3);
	SetRegEx(0XB01027D8,"T",0,3);
	SetRegEx(0XB0102800,"T",0,3);
	SetRegEx(0XB0102824,"T",0,3);
	SetRegEx(0XB0102850,"T",0,3);
	SetRegEx(0XB0102864,"T",0,3);
	SetRegEx(0XB01028B0,"T",0,3);
	SetRegEx(0XB01028B4,"T",0,3);
	SetRegEx(0XB01028BC,"T",0,3);
	SetRegEx(0XB01028E0,"T",0,3);
	SetRegEx(0XB01028F0,"T",0,3);
	SetRegEx(0XB0102924,"T",0,3);
	SetRegEx(0XB0102930,"T",0,3);
	SetRegEx(0XB0102948,"T",0,3);
	SetRegEx(0XB0102950,"T",0,3);
	SetRegEx(0XB010297C,"T",0,3);
	SetRegEx(0XB0102980,"T",0,3);
	SetRegEx(0XB01029A4,"T",0,3);
	SetRegEx(0XB01029B0,"T",0,3);
	SetRegEx(0XB01029C0,"T",0,3);
	SetRegEx(0XB01029C8,"T",0,3);
	SetRegEx(0XB0102A04,"T",0,3);
	SetRegEx(0XB0102A14,"T",0,3);
	SetRegEx(0XB0102A5C,"T",0,3);
	SetRegEx(0XB0102A74,"T",0,3);
	SetRegEx(0XB0102B74,"T",0,3);
	SetRegEx(0XB0102BAC,"T",0,3);
	SetRegEx(0XB0102C0C,"T",0,3);
	SetRegEx(0XB0102C54,"T",0,3);
	SetRegEx(0XB0102CBC,"T",0,3);
	SetRegEx(0XB0102CE0,"T",0,3);
	SetRegEx(0XB0102E08,"T",0,3);
	SetRegEx(0XB0102E24,"T",0,3);
	SetRegEx(0XB0102E58,"T",0,3);
	SetRegEx(0XB0102E70,"T",0,3);
	SetRegEx(0XB0102EB8,"T",0,3);
	SetRegEx(0XB0102ECC,"T",0,3);
	SetRegEx(0XB0102ED8,"T",0,3);
	SetRegEx(0XB0102EF0,"T",0,3);
	SetRegEx(0XB0102EFC,"T",0,3);
	SetRegEx(0XB0102F1C,"T",0,3);
	SetRegEx(0XB0102F28,"T",0,3);
	SetRegEx(0XB0102F3C,"T",0,3);
	SetRegEx(0XB0102F50,"T",0,3);
	SetRegEx(0XB0102F68,"T",0,3);
	SetRegEx(0XB0102F70,"T",0,3);
	SetRegEx(0XB0102F94,"T",0,3);
	SetRegEx(0XB0102FC8,"T",0,3);
	SetRegEx(0XB0102FE4,"T",0,3);
	SetRegEx(0XB0103010,"T",0,3);
	SetRegEx(0XB0103018,"T",0,3);
	SetRegEx(0XB0103044,"T",0,3);
	SetRegEx(0XB0103068,"T",0,3);
	SetRegEx(0XB010306C,"T",0,3);
	SetRegEx(0XB0103074,"T",0,3);
	SetRegEx(0XB0103080,"T",0,3);
	SetRegEx(0XB0103090,"T",0,3);
	SetRegEx(0XB01030C4,"T",0,3);
	SetRegEx(0XB01030CC,"T",0,3);
	SetRegEx(0XB0103130,"T",0,3);
	SetRegEx(0XB0103148,"T",0,3);
	SetRegEx(0XB0103160,"T",0,3);
	SetRegEx(0XB0103174,"T",0,3);
	SetRegEx(0XB01031A8,"T",0,3);
	SetRegEx(0XB01031C4,"T",0,3);
	SetRegEx(0XB01031D8,"T",0,3);
	SetRegEx(0XB01031E4,"T",0,3);
	SetRegEx(0XB0103200,"T",0,3);
	SetRegEx(0XB0103258,"T",0,3);
	SetRegEx(0XB0103268,"T",0,3);
	SetRegEx(0XB0103358,"T",0,3);
	SetRegEx(0XB0103368,"T",0,3);
	SetRegEx(0XB0103458,"T",0,3);
	SetRegEx(0XB0103468,"T",0,3);
	SetRegEx(0XB010354C,"T",0,3);
	SetRegEx(0XB010355C,"T",0,3);
	SetRegEx(0XB0103694,"T",0,3);
	SetRegEx(0XB01036A4,"T",0,3);
	SetRegEx(0XB0103754,"T",0,3);
	SetRegEx(0XB0103758,"T",0,3);
	SetRegEx(0XB0103760,"T",0,3);
	SetRegEx(0XB0103784,"T",0,3);
	SetRegEx(0XB0103884,"T",0,3);
	SetRegEx(0XB01038DC,"T",0,3);
	SetRegEx(0XB01038F0,"T",0,3);
	SetRegEx(0XB0103918,"T",0,3);
	SetRegEx(0XB0103924,"T",0,3);
	SetRegEx(0XB010393C,"T",0,3);
	SetRegEx(0XB0103968,"T",0,3);
	SetRegEx(0XB0103974,"T",0,3);
	SetRegEx(0XB0103990,"T",0,3);
	SetRegEx(0XB0103994,"T",0,3);
	SetRegEx(0XB01039B4,"T",0,3);
	SetRegEx(0XB0103A4C,"T",0,3);
	SetRegEx(0XB0103A78,"T",0,3);
	SetRegEx(0XB0103AEC,"T",0,3);
	SetRegEx(0XB0103B4C,"T",0,3);
	SetRegEx(0XB0103B64,"T",0,3);
	SetRegEx(0XB0103B80,"T",0,3);
	SetRegEx(0XB0103B8C,"T",0,3);
	SetRegEx(0XB0103BC0,"T",0,3);
	SetRegEx(0XB0103BC8,"T",0,3);
	SetRegEx(0XB0103C10,"T",0,3);
	SetRegEx(0XB0103C2C,"T",0,3);
	SetRegEx(0XB0103C60,"T",0,3);
	SetRegEx(0XB0103CF8,"T",0,3);
	SetRegEx(0XB0103D28,"T",0,3);
	SetRegEx(0XB0103D48,"T",0,3);
	SetRegEx(0XB0103D60,"T",0,3);
	SetRegEx(0XB0103D88,"T",0,3);
	SetRegEx(0XB0103D98,"T",0,3);
	SetRegEx(0XB0103DCC,"T",0,3);
	SetRegEx(0XB0103DD4,"T",0,3);
	SetRegEx(0XB0103DE0,"T",0,3);
	SetRegEx(0XB0103E00,"T",0,3);
	SetRegEx(0XB0103E44,"T",0,3);
	SetRegEx(0XB0103E4C,"T",0,3);
	SetRegEx(0XB0103E9C,"T",0,3);
	SetRegEx(0XB0103F4C,"T",0,3);
	SetRegEx(0XB0103F7C,"T",0,3);
	SetRegEx(0XB0103F90,"T",0,3);
	SetRegEx(0XB0103FA8,"T",0,3);
	SetRegEx(0XB0103FBC,"T",0,3);
	SetRegEx(0XB0103FF0,"T",0,3);
	SetRegEx(0XB0104020,"T",0,3);
	SetRegEx(0XB0104064,"T",0,3);
	SetRegEx(0XB010407C,"T",0,3);
	SetRegEx(0XB0104088,"T",0,3);
	SetRegEx(0XB01040BC,"T",0,3);
	SetRegEx(0XB01040F4,"T",0,3);
	SetRegEx(0XB0104108,"T",0,3);
	SetRegEx(0XB0104138,"T",0,3);
	SetRegEx(0XB0104150,"T",0,3);
	SetRegEx(0XB0104164,"T",0,3);
	SetRegEx(0XB010416C,"T",0,3);
	SetRegEx(0XB0104180,"T",0,3);
	SetRegEx(0XB01041A0,"T",0,3);
	SetRegEx(0XB01041AC,"T",0,3);
	SetRegEx(0XB01041DC,"T",0,3);
	SetRegEx(0XB0104208,"T",0,3);
	SetRegEx(0XB01042D4,"T",0,3);
	SetRegEx(0XB0104468,"T",0,3);
	SetRegEx(0XB010450C,"T",0,3);
	SetRegEx(0XB0104544,"T",0,3);
	SetRegEx(0XB0104574,"T",0,3);
	SetRegEx(0XB010461C,"T",0,3);
	SetRegEx(0XB0104634,"T",0,3);
	SetRegEx(0XB0104644,"T",0,3);
	SetRegEx(0XB0104660,"T",0,3);
	SetRegEx(0XB0104740,"T",0,3);
	SetRegEx(0XB01047D8,"T",0,3);
	SetRegEx(0XB0104870,"T",0,3);
	SetRegEx(0XB01049D8,"T",0,3);
	SetRegEx(0XB0104A00,"T",0,3);
	SetRegEx(0XB0104A24,"T",0,3);
	SetRegEx(0XB0104A5C,"T",0,3);
	SetRegEx(0XB0104AE0,"T",0,3);
	SetRegEx(0XB0104AEC,"T",0,3);
	SetRegEx(0XB0104AF0,"T",0,3);
	SetRegEx(0XB0104B10,"T",0,3);
	SetRegEx(0XB0104B28,"T",0,3);
	SetRegEx(0XB0104B40,"T",0,3);
	SetRegEx(0XB0104B44,"T",0,3);
	SetRegEx(0XB0104B4C,"T",0,3);
	SetRegEx(0XB0104BA0,"T",0,3);
	SetRegEx(0XB0104BAC,"T",0,3);
	SetRegEx(0XB0104BB0,"T",0,3);
	SetRegEx(0XB0104BE8,"T",0,3);
	SetRegEx(0XB0104BF0,"T",0,3);
	SetRegEx(0XB0104C20,"T",0,3);
	SetRegEx(0XB0104C3C,"T",0,3);
	SetRegEx(0XB0104C58,"T",0,3);
	SetRegEx(0XB0104C88,"T",0,3);
	SetRegEx(0XB0104CBC,"T",0,3);
	SetRegEx(0XB0104D3C,"T",0,3);
	SetRegEx(0XB0104D50,"T",0,3);
	SetRegEx(0XB0104D64,"T",0,3);
	SetRegEx(0XB0104D6C,"T",0,3);
	SetRegEx(0XB0104D78,"T",0,3);
	SetRegEx(0XB0104D9C,"T",0,3);
	SetRegEx(0XB0104DA8,"T",0,3);
	SetRegEx(0XB010508C,"T",0,3);
	SetRegEx(0XB0105270,"T",0,3);
	SetRegEx(0XB01052CC,"T",0,3);
	SetRegEx(0XB01052E0,"T",0,3);
	SetRegEx(0XB01053B0,"T",0,3);
	SetRegEx(0XB01054BC,"T",0,3);
	SetRegEx(0XB0105558,"T",0,3);
	SetRegEx(0XB01055F4,"T",0,3);
	SetRegEx(0XB010572C,"T",0,3);
	SetRegEx(0XB010573C,"T",0,3);
	SetRegEx(0XB0105780,"T",0,3);
	SetRegEx(0XB0105784,"T",0,3);
	SetRegEx(0XB010578C,"T",0,3);
	SetRegEx(0XB01057E4,"T",0,3);
	SetRegEx(0XB01057E8,"T",0,3);
	SetRegEx(0XB01057F4,"T",0,3);
	SetRegEx(0XB01057FC,"T",0,3);
	SetRegEx(0XB0105834,"T",0,3);
	SetRegEx(0XB01058D0,"T",0,3);
	SetRegEx(0XB01058F8,"T",0,3);
	SetRegEx(0XB0105918,"T",0,3);
	SetRegEx(0XB0105924,"T",0,3);
	SetRegEx(0XB010595C,"T",0,3);
	SetRegEx(0XB0105964,"T",0,3);
	SetRegEx(0XB0105994,"T",0,3);
	SetRegEx(0XB0105A0C,"T",0,3);
	SetRegEx(0XB0105A18,"T",0,3);
	SetRegEx(0XB0105B10,"T",0,3);
	SetRegEx(0XB0105B14,"T",0,3);
	SetRegEx(0XB0105B44,"T",0,3);
	SetRegEx(0XB0105BD0,"T",0,3);
	SetRegEx(0XB0105BE4,"T",0,3);
	SetRegEx(0XB0105C08,"T",0,3);
	SetRegEx(0XB0105CC8,"T",0,3);
	SetRegEx(0XB0105CD8,"T",0,3);
	SetRegEx(0XB0105CE8,"T",0,3);
	SetRegEx(0XB0105D54,"T",0,3);
	SetRegEx(0XB0105D64,"T",0,3);
	SetRegEx(0XB0105DFC,"T",0,3);
	SetRegEx(0XB0105F28,"T",0,3);
	SetRegEx(0XB0105FE4,"T",0,3);
	SetRegEx(0XB01060B0,"T",0,3);
	SetRegEx(0XB01060BC,"T",0,3);
	SetRegEx(0XB01060F8,"T",0,3);
	SetRegEx(0XB0106484,"T",0,3);
	SetRegEx(0XB0106534,"T",0,3);
	SetRegEx(0XB010655C,"T",0,3);
	SetRegEx(0XB0106584,"T",0,3);
	SetRegEx(0XB01065A8,"T",0,3);
	SetRegEx(0XB01065D0,"T",0,3);
	SetRegEx(0XB01065E4,"T",0,3);
	SetRegEx(0XB01065EC,"T",0,3);
	SetRegEx(0XB01065F4,"T",0,3);
	SetRegEx(0XB0106634,"T",0,3);
	SetRegEx(0XB0106668,"T",0,3);
	SetRegEx(0XB0106684,"T",0,3);
	SetRegEx(0XB01066C4,"T",0,3);
	SetRegEx(0XB01066F4,"T",0,3);
	SetRegEx(0XB01066FC,"T",0,3);
	SetRegEx(0XB0106728,"T",0,3);
	SetRegEx(0XB010674C,"T",0,3);
	SetRegEx(0XB010676C,"T",0,3);
	SetRegEx(0XB0106780,"T",0,3);
	SetRegEx(0XB0106788,"T",0,3);
	SetRegEx(0XB0106798,"T",0,3);
	SetRegEx(0XB01067B8,"T",0,3);
	SetRegEx(0XB0106818,"T",0,3);
	SetRegEx(0XB0106840,"T",0,3);
	SetRegEx(0XB0106870,"T",0,3);
	SetRegEx(0XB0106880,"T",0,3);
	SetRegEx(0XB0106894,"T",0,3);
	SetRegEx(0XB01068B8,"T",0,3);
	SetRegEx(0XB01068C4,"T",0,3);
	SetRegEx(0XB01068D8,"T",0,3);
	SetRegEx(0XB0106904,"T",0,3);
	SetRegEx(0XB0106910,"T",0,3);
	SetRegEx(0XB0106930,"T",0,3);
	SetRegEx(0XB0106970,"T",0,3);
	SetRegEx(0XB0140000,"T",0,3);
	SetRegEx(0XB0140000,"DS",0X2,3);
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
	Bytes_1();
        EndTypeUpdating(UTP_STRUCT);
}

// End of file.
